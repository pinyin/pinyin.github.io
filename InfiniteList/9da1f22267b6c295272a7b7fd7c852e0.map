{"version":3,"sources":["..\\..\\..\\typecheck\\existing.ts","..\\..\\..\\utils\\alternate.ts","..\\..\\..\\utils\\ensure.ts","..\\..\\..\\utils\\cloneFastBinaryIndexedTree.ts","..\\..\\..\\utils\\expandFastBinaryIndexedTree.ts","..\\..\\..\\utils\\inverseMap.ts","..\\..\\..\\utils\\nothing.ts","..\\..\\..\\layouts\\ListLayoutImpl.ts","..\\..\\..\\rxjs\\applyMiddleware.ts","..\\..\\..\\rxjs\\createPublishers.ts","..\\..\\..\\rxjs\\createSubjects.ts","..\\..\\..\\rxjs\\createDispatcher.ts","..\\..\\..\\rxjs\\Pipe.ts","..\\..\\..\\typecheck\\isFalse.ts","..\\..\\..\\typecheck\\isTrue.ts","..\\..\\..\\typecheck\\isFunction.ts","..\\..\\..\\utils\\assume.ts","..\\..\\..\\utils\\publishAll.ts","..\\..\\..\\utils\\Pulse.ts","..\\..\\..\\utils\\statics.ts","..\\..\\..\\utils\\forDuration.ts","..\\..\\..\\utils\\nextAnimationFrame.ts","..\\..\\..\\utils\\uniqueID.ts","..\\..\\..\\view\\calcOutline.ts","..\\..\\..\\view\\intermediateTransform.ts","..\\..\\..\\view\\tweenHere.ts","..\\src\\calcFocusOffset.ts","..\\src\\calcSegments.ts","..\\..\\..\\react\\measure\\measuring.tsx","..\\src\\MeasuredSegment.tsx","..\\src\\projectScroll.ts","..\\InfiniteList.tsx","..\\..\\..\\utils\\getRandomIntInclusive.ts","SegmentExample.tsx","InfiniteList.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,kBAA4B,KAAkB;IAC1C,OAAO,OAAO,KAAK,KAAK,WAAW,IAAI,KAAK,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;AACjF,ACFA,CDEC,iDCF6C;ADA9C,ACEA,mBAA6B,CAAI,EAAE,CAAI,KDAtC;AACD,AEHA,IDGI,OAAO,UDAoB,KAAe,ICA3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA,QCHgB;ADI9C,ACFA,CDEC,GDAG,OAAO,CAAC,IEFc,IFEN,CAAC,AEFa,EAAE,GFEV,CAAC,CAAA,OEFqC;AFGhE,ACHA,CDGC,GEFG,OAAO,mBDCV,ACDkB,CAAC,KAAK,CAAC;AFA1B,AGHA,QDIQ,CAAC,CAAC,KAAK,mBFCd,mCGL2D;AAC5D,ACDA,QFKQ,CAAC,CAAC,YAAY,CAAA,YCJS,6BCDmC;ADGlE,ADGA,AEJA,CFIC,mCCFG,CCDA,KDC6B,CCDA,CDE7B,CCDA,aAAqB,EDCA;ADHzB,ICKI,ACDA,IDCM,MAAM,GAAG,ACDF,GAAG,CDCG,GDDtB,AEAuB,CAAC,KAAK,CAAC,aAAa,CAAC,CAAA,SDCD,CAAC;AEP7C,IDOI,IDCI,ACDA,aAAa,GDCG,CCDC,CDCC,ACDA,ICPI,WFQE,CAAC,gBAAgB,EAAE,MAAM,CAAC,gBAAgB,CAAC;AEP3E,ACDa,QHSL,ACDA,AERK,MHSC,CCDA,AERM,CHSJ,EGTgB,EDCF,EFQR,AGTc,CHSb,AGTa,EDCiB,IFQxB;ICCzB,ACRA,CFQC,CAAC,CAAA,CCAI,GCRC,KAAK,CDQG,GAAG,IAAI,qBAAqB,CAAC;IDE5C,ICDI,CCRC,CFSC,CAAC,CETC,CAAC,CDQC,EAAE,EDCE,CAAC,GCDG,CAAC,ACRT,KAAK,CDQU,CCRR,EDQW,GCRN,IAAK,IFSL,ECDmB,CCRd,CAAC,EFSA,CAAC,EETI,EAAE,GFSC,CAAC,CAAC,AETE,CFSF,AETG,EAAd,CAAc,CAAC;AEH9C,IJaI,ICDI,CCRC,CFSC,CAAC,IETI,CAAC,MFSM,CAAC,CCDC,EDCE,ACDA,ACRT,GAAG,EAAE,CFSU,ACDA,CDCC,ACDA,ACRG,WFSQ,CAAC,CAAA,GCDI,oBGZW;AAC5D,ACEA,ILYI,CCFC,CAAC,CAAA,IDEK,CEXW,KFWL,CAAA,OKXb,MAAsB,EAAE,KAAe,AHAP,EAAb,UEH0B,GFGrB,EAAE,aAAK;AEFnC,AJcA,CAAC,GKVG,AJSA,ICXqC,EDW/B,CITC,AJSA,ICX8B,EGExB,CAAC,AHF0B,CAAC,CDWzB,CAAC,CITC,AHF0B,CGEzB,AHF0B,CDWzB,ICX8B,CGEzB,CAAC,AHF0B,GDWvB,CAAC,CCX2B,CAAC,ODWnB,CAAC,CAAA,GGbA;AAC5C,AEDA,ANCA,ICaI,ACZqC,CAAqB,EAAE,EGGvD,CJSC,CAAC,ACZyD,CGGxD,CAAC,CHH0D,EAAE,CDYxD,ACZyD,CDYxD,ACZwD,GDYrD,EITR,GAAG,ACLmC,ILcrB,CAAC,GKdyC,GLcnC,CAAC,CAAA,yBDArC,kBIb6E;AAC9E,AHaA,ACZA,CDYC,ACZA,GIFG,IDIgB,GCJT,IDIS,ECJH,CAAC,IAAI,CAAC,EDID,GAAC,GAAG,ACJK,CAAC,GDIH,KAAK,CAAC,CDHG,ECGA,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,KAAE;ADFtD,AGLA,ANEA,ACDA,SIGS,GAAG,CAAC,UAAA,GAAG,MJCf,QKLmC,0BNiBnC,kBGZ+E;AAChF,AGHA,IFIoB,CAAkC,CAAC,ECHnC,OAAA,SCD6B,CDC3B,GAAC,CCD2C,EDCxC,IAAG,UAAC,KFEgB,AEFI,IAAK,OAAA,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,EAAzB,CAAyB,KAAE;AFGlF,AIPA,IDII,KFIK,EEJE,IFII,CAAC,CEJC,CAAC,IAAI,CAAC,GFIN,EEJW,CAAC,CFIR,EAAE,IAAI,IAAK,IDDQ,GCCR,MAAM,AGRW,CHQV,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,EAAzB,CAAyB,CAAQ,CAAA;ADEjE,ACDA,AGRA,CHQC,GCLmB,CAA8D,CAAC,GCC1E,GAAG,CAAC,UAAA,GAAG,6BCJmC;ACItC,AJFb,AGDA,IJwII,IKrIS,AFAO,CDAX,GGAQ,GAAG,AHAL,ACAK,CDAJ,SGAQ,AFAF,CDAL,ECAM,EDAF,CCAK,CDAH,GGA0B,AFApB,CDAF,GFqIY,AKrI8B,AFApC,CDAD,EDI/B,IIJoE,CHArC,IEHe,EFGT,CAAC,EGAwC,AFAvC,EEA6B,AFA3B,CEAqC,CAAA,AHAlC,CAAC,ECAF,EDAM,EAAE,IAAI,CAAC,EAAzB,CAAyB,CAAQ,CAAA;AECjE,AFAA,CAAC,GFqIG,sBIpIA,EJqIY,QIrIkB,KJqID,EACjB,SAAoC,EACpC,SAA0C,EACjC,YAAiC,EACjC,cAAqC;AE9I9D,AIFA,IFSI,ADJgB,CAAwB,CAAC,EHuI7B,AInIN,QAAQ,CETM,EFSH,GETa,IN4IL,GAAb,aAAa,CAAI,CEtIhC,MEGkC,CAAc,UAAU,CAAC,CAAA;IACxD,AETA,IN4IY,CGvIP,ECIE,AETA,IHKI,CAAC,AGLA,CFSC,CAAC,GETG,CN4II,EInID,CJmIR,AIlIR,CDLS,AGLS,CFUjB,AEViB,GHKL,EAAE,EHuIE,AIlIT,CJkIoC,CIlIlC,ADLS,IAAK,OAAA,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,ICKlB,ADLsB,CCKR,ADLS,EAAzB,CAAyB,CAAQ,CAAA,GCKT,CAAC,EAAC,EAClD,iCAAe,CAAc,QAAQ,EAAE,UAAU,CAAC,CACrD,CAAA;AACL,ADPA,AGLA,ACFA,CHcC,ADPA,AGLA,ON4Ie,QO9IO,KAAU,CP8IR,GAAT,SAAS,CAAiC;AIxI1D,ADHA,AGHA,ICCI,IP8IqB,GO9Id,KAAK,KAAK,IP8IgB,AO9IZ,CDCxB,ACDwB,EP8IA,YAAY,AGxIpC,CHwIyD,GIjIzD;AIdD,ADEA,CAAC,OP8IwB,YQhJE,CAAM,MRgJM,GAAd,cAAc,CAAuB;AOhJ9D,IPiJO,AQhJH,CRgJI,MQhJG,OAAO,CAAC,KAAK,ADCvB,UCDiC,CAAA;AAClC,CAAC,GRSG,sBAAW,mCAAO;AQXtB,ACAA,aTWI,cAAkD,KQTrD,ERS4D,IAAI,CAAC,SAAS,CAAA,CAAC,ASX3B,CTW4B;ASV7E,ACDA,oBAA6C,KAAQ,EAAE,QAAoC,mBDCzC;AAClD,ICDI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,GDCD,OCDC,GAAG,IAAI,OAAA,QAAQ,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAzB,CAAyB,CAAC,CAAA;ACAxD,AFKX,ACJA,CAAC,MVS4E,CWVlE,KAAK,GAAU,IAAI,CAAA;ADD9B,IVaI,ASNA,gBAA8D,MTMnD,MUXd,0BVWkB;AYbnB,SHOI,ITMA,MSN8D,EAA9D,MTM4B,OAAO,IAAI,CAAC,GSNsB,EAA9D,ITMiD,ASNa,CTMZ,CYbL,KZaW,CAAA,CAAC,CAAC;AYZ9D,QHMI,2BAA8D,EGNjC;AAEjC,iBAAwB,KAAoB;IHMxC,AGLA,GZS0D,CSJpD,GGLC,CHKG,GAAG,CGLD,CAAC,IHKM,CAAC,CGLD,CAAC,IHKM,CAAC,KGLN,CHKY,EGLT,CHKY,CAAC,AGLX,CHKY,CAAA,EGLR,IAAK,OAAA,GAAG,GAAG,IAAI,EAAV,CAAU,EAAE,CAAC,CAAC,CAAA;AACrD,CAAC,GZUG,ASLA,IAAM,UAAU,GAAG,KTKR,CSLc,CAAC,KAAK,CAAC,CAAC,EAAE,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA,STK/B;AYZ1B,IHQI,IAAI,CAAC,ITIL,aYVH,CZUkC,KSJhB,CAAC,CTIsB,GSJlB,CTIsB,ASJrB,CTIsB,GSJlB,UAAU,CTIsB,ASJrB,CTIsB,IAAI,CAAC,ASJrB,GAAG,CTIsB,ASJrB,CTIsB,GSJlB,MTI2B,CAAC,GSJlB,CAAC,ETIuB,CAAC,CAAA,ASJpB,CTIqB,ASJpB,CTIqB,qBSJV,CAAC,EAAE;AGJpF,QHKQ,OAAO,MGLa,KAAoB,MHK1B,CAAA;AIZtB,IDQI,CHKC,GGLG,KAAK,CAAC,MAAM,CCRc,IDQT,CAAC,GCRoB;IJc1C,GTCuF,CYNnF,GHKG,IAAI,AGLA,iBAAO,CAAA,cHKH,UAAU,GAAC;AAC9B,AKfA,CLeC,GTEU,AYPP,OAAO,OAAO,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,EZOhB,GAAd,CYPoC,CAAA,QZOrB,EAAc;ASXjC,AGKA,AGXA,CHWC,OZOa,IAAA,AajBV,SbiB4C,EAAjC,CSHd,UIdU,IAAI,OAAO,CAAO,CbiBL,AelBuB,EfkBrB,OajBI,IAAI,IAAK,OAAA,UAAU,CAAC,CbiBV,CAAQ,EajBM,EAAE,QAAQ,CAAC,EAA1B,CAA0B,CAAC,EAAA;ADMlE,AGNA,ACDA,QhBmBQ,IAAM,KAAK,CgBnBD,EhBmBI,SAAS,CAAC,GAAG,CAAC,AYRnC,EZQqC,CAAC,CAAA;AYNvC,IGXI,IfkBI,GelBG,CfkBC,AcnBR,GCCW,CAAC,MAAM,EAAE,CAAC,CHWQ,KAAoB,EGXpB,CfkBV,AcnBZ,ACCuB,CfkBV,CelBY,CAAC,CDDtB,ACCuB,EfkBT,CAAC,IcnBR,CAAC,CCCwB,CAAC,CAAC,CAAC,MDD3B,OAAO,IAAI,OAAA,qBAAqB,CAAC,OAAO,CAAC,EAA9B,CAA8B,CAAiB,EAAC;AEClF,CHAC,GDYG,IAAM,EGXA,CAAC,CfkBC,GYPK,AGXF,GHWK,CZOD,AelBA,EAAE,ACDO,CDCN,CAAC,CCDiB,KJYT,CAAC,AGXF,EAAE,CAAC,EHWI,CZOX,AYPY,CZOZ,AYPY,IGXG,CAAC,EAAE,CAAC,CAAC;AFH9C,AEIA,CAAC,GHWG,AIZA,IhBmBI,AYPA,AIZE,IhBmBI,AgBnBA,CJYD,CAAC,CIZG,GhBmBG,AgBnBA,CAAC,CJYD,CZOG,IYPE,CAAC,IAAI,ICb7B,CboBoC,CAAC,IAAI,AgBnBA,ChBmBC,CgBnBC,CAAA,GhBmBI,CAAC,CAAA,IYPR,CAAC,OAAO,CAAC;AGdlD,CDCC,GEGU,IhBkBH,AYPA,AIXG,IhBkBG,GYPC,GZOK,GAAG,KgBlBP,EDDf,ACCiB,IJWI,CAAA,EZOe,CAAC,UAAU,CAAC,CgBlBzB,CAAQ,GhBkBsB,CAAC,CAAA;AcvBvD,IFiBI,AIXA,IhBkBI,AYPE,AIXA,CAAC,GAAG,EJWE,CZOD,CgBlBG,ChBkBF,AYPG,AIXA,EhBkBD,EgBlBK,CJWC,AIXD,ChBkBL,AYPO,EZOL,EYPS,CAAC,EZOL,OAAA,CYPM,CZOJ,AYPK,EAAE,CAAC,GZOF,CYPO,EEfvC,KdsBgC,AYPO,EZOL,EYPS,CAAC,GZOJ,AYPO,CAAC,CAAC,GAAG,GZOZ,EAAC,CAAA,CYPkB,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC,EAA7C,CAA6C,CAAC,CAAA;IZQlF,AYPA,AIXA,ChBkBC,GgBlBK,CAAC,EJWA,CIXG,IAAI,CJWD,AIXE,CJWD,CAAC,CAAC,AIXE,CJWF,AIXE;AJYtB,CAAC,GZQU,AgBlBP,OAAO,EAAC,CAAC,GAAA,EAAE,CAAC,GAAA,EAAE,KAAK,OAAA,EhBkBF,AgBlBI,GhBkBrB,GgBlB2B,OhBkBT,CgBlBS,EAAC,CAAA,ChBkBG;AYdnC,AIHA,CAAC,OhBkBc,IAAA,0BAAS,CAAQ,KYT/B;AAED,AInBA,QhB2BQ,IAAM,EAAE,GAAG,MYRW,GZQF,CAAC,CYRqB,IZQhB,CAAC,CAAA,AgBnBlC;IJYG,IZQI,AYRE,IZQE,GYRK,GAAG,WAAW,CAAC,IZQT,CAAC,AYRa,CAAC,CZQZ,AYRY,CZQX;AiB9B3B,ILuBI,IAAI,IZQI,CYRC,CAAC,KZQK,CYRC,KAAK,CAAC,IAAI,MZQJ,CAAA,eYRe,CAAC,OAAO,CAAC,6FKvBD;AACjD,QjB+BQ,AYRA,OZQO,AYRA,IZQI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAA,AYRT,CAAA,iIKvBmC;AACzD,IjB+BI,AYRA,CZQC,MYRM,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,UAAA,GAAG,IAAI,OAAA,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,OAAO,CAAC,EAAvB,CAAuB,CAAC,CAAC,CAAA,4EKvBR;ALwBzD,AKtBA,ACJA,CN0BC,GZSU,2BiB/B2B,IAAa,EAAE,EAAW,KjB+BtC,GAAtB,UAAuB,IAAY,EAAE,EAAU,6FkBnCE;ANqBrD,AMpBA,ACDA,IFKI,IjB+BI,AiB/BE,IjB+BI,IiB/BI,GAAG,CjB+BC,GAAG,MiB/BH,IAAa,KLqBlC,MZUiC,CAAC,GmBpCS,CnBoCL,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAA,wEkBnCzB;AACpD,ACAA,QnBmCQ,AiB/BA,IjB+BM,GiB/BC,GjB+BK,GAAG,ImBnCS,WAAsB,EAAE,InBmCxB,CAAC,IAAI,CAAC,ImBnCoC,EDAxB,IlBmCF,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAA;AkBlCrF,AEDA,IDCI,ACDE,IpBoCE,GmBnCG,CnBmCC,AiB/BA,AGLE,CHKD,EAAE,AGLE,EAAE,CAAA,CHKA,CAAC,CAAC,GAAG,EEJP,CAAC,CFIU,CAAC,KjB+BN,AiB/BW,CjB+BV,EiB/Ba,CEJR,EFIW,AEJT,GnBmCC,CAAC,IAAI,IkBnCW,ECAH,GAAG,CAAC,CAAC,CAAA,UnBmCF,CAAC,MAAM,CAAC;AkBlCxD,ACAA,ACAA,CDAC,WnBmCW,AiB/BA,CAAC,EAAE,IjB+BI,AiB/BA,CAAC,CjB+BC,AiB/BA,CjB+BA,AoBnCQ,EHIL,IAAI,AGJW,CHIV,CGJY,KHIN,EGJiB,CHId,CGHT,EHGY,IGHF,EAAE,MAAkB,aFDG;AAC9D,ACHA,ICII,IpBkCI,AoBlCE,CHGD,CAAA,EjB+BK,CoBlCC,GAAG,GpBkCG,CoBlCC,CAAC,CpBkC0B,EAAE,AoBlCzB,CpBkCyB,AoBjC3C,IAAI,CAAC,GAAG,CACJ,MAAM,EDJjB,CCIoB,GFHqB,GEGf,EACf,MAAM,GAAG,OAAO,CACnB,EACD,CAAC,CACJ,CAAA;AFNL,IDII,AGGA,CHHC,CAAA,EjB+BG,AoB5BE,IAAI,CpB4BD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AQ,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAA;AGtBnE,ACFA,ItB8DI,CAAC,ekBrCD,OAAO,AIzBqB,CJyBpB,KAAK,CAAC,UAAU,GAAG,MAAM,CAAA,eGvBgB;AACrD,ACFA,ACAA,IvB+DW,gBkBtCP,OAAO,CAAC,CGvBkB,ACFC,IJyBd,ClBsCD,AkBtCE,GlBsCd,MkBtCuB,GAAG,ClBsCb,SuB/DsC,OvB+DjB,0DkBtCH,CAAC,4EAAO,CAAC,SAAS,CAAC,CAAC,CAAA;AGtBvD,ACDA,ACDA,QvB+Dc,IAAA,QkBrCV,ClBqCoF,EAAzE,kBkBrCL,MlBqCc,CuB/DoB,CvB+DlB,IqB7DoC,SCDO,WtB8DlC,EAAE,KkBrCT,EAAE,EAAA,qBlBqCmB,EAAE,gCAAa,EAAE,kCAAc,CAAQ;AqB5DxF,ACAA,ACDA,QvB+DQ,euB/DsB,CvB+DN,GAAG,EuB/Da,EAAE,WvB+DT,AuB/DwB,CvB+DvB,CuB/DyB,GFChB,CEDgC,EAAE,EAAc,IDCvC,GtB8DF,EAAE,aAAa,CAAC,CAAA;AqB5DlE,ACCA,ICHI,IvB+DI,AuB/DE,IvB+DI,AuB/DA,GAAG,IAAI,CLuBjB,AKvBkB,OvB+DO,EkBxCC,ClBwCE,AkBxCF,CKvBG,CAAC,EvB+DE,GAAG,CAAC,AuB/DA,GAAG,SvB+DS,CAAC,CAAA,AuB/DC,CAAC,CAAA,QFES;AAEhE,ICDqC,ACFjC,IvB+DI,AuB/DE,IvB+DI,AuB/DA,GAAG,IFIb,CHmBA,IAAI,IGnBQ,CrB2De,CuB/DR,CAAC,CvB+DU,AkBxClB,CAAC,EKvBW,CLuBR,CAAC,AKvBS,OLuBF,CAAC,EIrBkC,ACFjC,GLuBI,CKvBA,IAAI,KLuBM,EKvBN,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,EAAnB,CAAmB,CAAC,CAAA,CvB+DE,CAAC,cAAc,EAAE,gBAAgB,CAAC,CAAA;IqBzD1F,ACWA,AChBA,IvBgEI,AuBhEA,OvBgEO,IAAI,KkBzCX,KIPQ,CChBG,CAAC,EvBgEa,CACrB,AsBjDgB,CChBJ,CAAC,IAAI,MLuBf,IlB0Cc,EAChB,SAAS,CuBlEmB,CvBmE5B,AuBnE6B,IAAI,CAAC,IvBmEzB,EACT,eAAe,EACf,iBAAiB,CACpB,CAAA;IACL,CAAC,GqBlEiB,ACWlB,ACfI,OAAO,KLuBX,AIPI,CChBa,CAAA,KLuBV,CAAC,KAAK,CAAC,IIPJ,CDZsD,ICYjD,CJOS,AIPR,GJOW,MIL1B,iBJMa,QAAQ,wBAAmB,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,8BACzC,QAAQ,wBAAmB,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,YAC1D,CAAA;IlB8CM,AuBvEP,IFyBI,ACnBI,ACNF,YL0BN,CGDgB,KAAgC,ACnB5B,CJoBb,CAAC,CIpBe,ACNI,GAAG,CvBuEnB,AkB7CE,CAAC,ElB6Cd,EuBvEoC,CDMZ,ECNe,EL0BhB,EIpBW,CtBiEtB,AkB7Cc,MAAM,AK1BkB,CL0BlB,EK1BqB,CvBuEJ,GuBvEQ,CAAC,MAAM,CAAA;IAChE,IvBuEU,AuBvEJ,IvBuEI,AqB/CN,AClBA,IAAM,EAAE,EJqBZ,ClB4C8C,AsBjE/B,EtBiEJ,CqB9CH,ECnBW,CAAC,ECNO,GDMF,ACNK,CDMJ,ACNK,EDMH,CAAA,KJqBtB,CGFQ,KAAK,CAAC,MEzBgC,CvBuE5B,EAAE,AqBhCrB,AEvCkD,IAAI,CAAC,IL2B3C,CAAC,CK3BgD,CAAC,GAAG,GL2B5C,CAAC,AK3B+C,CAAC,CL2BhD,KK3BsD,CAAA,GvBuE3C,CAAQ;AwBjFlD,IDWI,IvBwEU,GuBxEH,CvBwEG,AqB9CF,ACnBJ,GCPO,CDOH,ACPI,CF0BA,CAAC,IE1BK,GAAG,CF0BA,AE1BC,CCXM,EHqCJ,IAAI,ECnBZ,CAAC,CCPgB,GAAG,CDOf,CAAC,KAAK,CAAC,aCP6B,CDOf,ACPgB,CDOf,ACPe,EDOb,EDmBH,CAC9B,UAAC,KrB6CgF,EAAlF,AqB7CgC,EAAE,QAAwB,UrB6C9C,EAAE,yBAAiB,CAAmD;AwBlFjG,ADWA,CAAC,OvByEO,OAAO,CqB9CK,ACpBR,GtBkEO,CqB9CO,AHFtB,CIlBY,CAAC,IDoBe,CCpBV,CAAC,CDoBY,AHFJ,AMpCD,CNoCC,GlBgDE,CACrB,EqB/C8B,CAAC,CAAC,CAAC,CAAC,ECpBT,CAAC,EAAC,EtBmEd,AsBnEgB,EtBoE7B,EqBhD6C,ACpBhB,CDoBiB,CCpBf,KDoBqB,CrBgD1C,AqBhD0C,ACpBf,EtBqErC,MsBrEqC,EAAC,CAAC,CAAA,EtBqE3B,EACZ,IAAI,GAAG,CAAC,YAAY,CAAC,EACrB,iBAAiB,CACpB,CAAA;AwBxFT,ADCA,IvBwFI,CAAC,QsBxEI,GDoBW,IAAM,AHFtB,IAAI,CGEuB,GAAG,IHFlB,CAAC,EGEwB,CAAC,AHFtB,CGEuB,AHFtB,CGEuB,AE5B3C,CF4B4C,KHFjB,CAAC,KGE2B,AHFtB,CGEuB,KAAK,AGrCT,CHqCS,GHFlB;AMjC5C,IxByFW,IsBzEP,CAAC,CAAA,MDoBe,IAAI,IHFhB,WlBuDS,GAAb,CqBrD4B,CAAC,KAAI,CAAC,AHFxB,ElBuDI,GqBrDyB,CAAC,CGpCK,YxByFa,CqBrDJ,CAAC,EAAE;AGnC7D,QxByFc,AsBtEN,ItBsEM,CsBtEF,CAAC,MDiBW,AHFpB,ClBuDuD,AsBtEvC,EtBsEL,CsBtEQ,CDiBK,CAAC,CHFlB,CAAC,GGEsB,CAAC,CHFlB,CAAC,UAAU,AMnBL,CFIS,CDiBiB,ACjBhB,CtBsET,AqBrD0B,AHFnB,ElBuDL,EsBtEY,CAAC,CDiBiB,AHFnB,CGEoB,AHFpB,CGEoB,ICjBX,CAAC,CAAA,YtBsEZ,EAAE,kCAAc,CAAQ;AwBzE3D,QxB2EQ,IAAI,CAAC,IqBtDQ,GHFjB,ElBwDkB,MkBxDV,CAAC,MAAM,CAAC,MlBwDS,CkBxDF,CAAC,CAAA,MlBwDU,EAAK,WwB3EiB,MxB2EA,CAAC,CAAA;AyBjG7D,ADuBA,IFGI,CAAC,GtBwEG,IAAM,IqBtDM,IAAI,IrBsDE,GAAG,IAAI,GAAG,CAAC,IqBtDL,CAAC,IrBsDa,CAAC,AqBtDV,CrBsDU,AqBtDT,IGrBQ,CHqBH,CAAC,aAAa,CAAC,EAAE,2BI5CmC;ADwB/F,IFfI,ItB0FI,IAAI,CAAC,OqBtDW,ErBsDF,GAAG,AqBtDG,CAAC,KAAK,CAAC,ICpCzB,CtB0F2B,CAAA,CsB1FjC,MDoC4C,CAAC,KAAK,CAAC,CAAA,IGrBb;ACtB1C,ADwBA,QxB0EQ,AsB1FM,IAAA,KDoCO,QrBsDI,CAAC,CsB1FY,EAAvB,EGRuB,EzBkGL,CAAC,AyBlGe,EAAE,GAAW,AHQ7C,EAAE,GtB0FgB,EAAE,EAAE,KAAK,IsB1FpB,CAAc,KEgBqB;AAC3D,ICxBI,GAAG,CHQQ,EGRL,EzBkGE,AqBtDI,ACpCD,CDoCE,CACJ,AI7CC,CJ6CD,AI7CE,CzBkGC,GyBlGG,CAAC,GAAG,CAAC,CzBkGC,AyBlGA,CzBkGC,GAAG,CAAC,EAAE,CAAC,CsB1FX,CAAQ,6BEgB8B;AAC5D,AE5BA,CR0CC,GOtCG,GAAG,CHQC,EGRE,IAAI,CAAC,AHQA,CtB0FC,IyBlGI,CAAC,CzBkGC,EyBlGE,CAAC,CzBkGC,AyBlGA,SHQV,KEgBqB,AE5BI,EJYlB,IAAC,EAAE,EtB0FwB,AsB1FtB,CtB0FuB,CsB1FrB,CtB0FuB,CAAC,AsB1FtB,CtB0FsB,IsB1FjB,EAAE,KAAK,EAAE,cAAc,EAAE,IAAI,CAAC,YAAY,GAAG,CAAA;AJHlF,AMqBA,AE7BA,IDII,AHQA,CAAC,GDoCG,CAAC,EI5CE,CzBkGC,GyBlGG,CAAC,KAAK,CAAC,EzBkGE,CAAC,CyBlGC,CAAC,CzBkGC,CAAC,A0BtGE,CRyC9B,ClB6D8B,EAAE,AyBlGA,EAAE,GzBkGG,AyBlGA,CAAC,EzBkGE,CyBlGC,GAAG,GAAG,EzBkGE,CAAC,AyBlGA,CAAC,CAAC,ADyBJ,CCzBK,GzBkGG,AyBlGA,CzBkGC,CAAA,CyBlGE,CAAC,CAAC,uDAAuD;AACrH,APsCA,AMbA,AG/BA,ADGA,CDGC,GPsCK,AIfN,ItB2EQ,AqB3FA,CrB2FC,CAAC,CAAA,CkB5DI,GAA8B,IAAI,OAAO,AIftD,EDhBa,AH+B2C,CAAA,AS5C1B,ENavB,iBKVoC,GF4BI;AC7BhD,AD8BA,AFHA,AK5BA,ADGA,CJIA,AAqBC,CArBoC,KAAK,CtBkGlC,AsBlGmC,IDM/B,SCN4C,GAqBvD,YK5BoC,aH+BS,KC1B7C,UJQ+D,CrB4F7B,CAAC,Y0BtGsC,E1BsGxB,EAAE,iBAAiB,CAAC,MAAM,CAAC,CAAA;AwBzE7E,AFzBa,AKNb,ADKA,Q1BqGQ,IqB/FA,GrB+FO,IAAI,CAAA,SqB/EV,aCrBmB,GEyBa,gBG/BO;AHgChD,AFCA,AK/BA,I3ByGI,AsB1EE,AI5B8B,C1BsG/B,MsB1EQ,CDnBD,ECmBI,EDnBE,KAAK,GAAe,GCmBR,CAAC,EDnBa,CAAC,MAAM,CACnC,EAAE,EACF,ECiB+B,CEDN,AFCO,CDjB5B,AKXwD,CLWvD,CMduB,INclB,EACV,EAAC,GAAG,EAAE,UAAC,EAAO,IAAK,OAAA,KAAI,CAAC,SAAS,CAAC,EAAE,CAAC,EAAlB,CAAkB,EAAC,CAClC,CAAA;AGepB,AG9BA,I3B0GW,AsB3EP,AIKA,IJLI,EAAE,EDfE,OAAO,KAAK,CAAC,GKoBT,KAAuB,E1BsEtB,GAAb,GqB1FqC,CAAC,CAAA,IGcC,CxB4EzB,G2B1G6B,M3B0GU;AwB3EzD,AG7BA,IAAM,I3ByGQ,AsB3EN,AIIJ,I1BuEU,AqB1FF,EMfI,CL8BD,EAAE,AK9BqB,ENenB,AMfqB,CAAA,ADmChC,C1BsEsD,EAA/C,CqB1FS,ACeA,CDfC,aKoBX,ELpB0B,CAAC,CAAA,CKoBtB,CAAC,G1BsEI,EAAE,IwB5EuB,AEsB5C,0B1BsDiC,EAAE,kCAAc,CAAQ;AwB3E9D,AG7BA,KAAK,G3B0GG,AsB5EA,AIKA,CCnCC,CAAC,ENgBE,AKmBE,CCnCD,CAAC,CL8BC,CK9BC,ADmCE,C1BuED,AsB5EA,AK9BA,C3B0GC,CqB1FC,AKmBE,CCnCD,INgBI,CrB0FC,AqB1FA,CrB0FC,AsB5EA,AK9BA,EAAE,CAAC,EAAE,EAAE,CDmCN,CAAC,C1BuEF,EqB1FY,CACtB,ErByFe,EwB7EQ,CEMF,CAAC,GLlBb,EACT,AKiB2B,CAAC,EAAE,CAAC,CLjB1B,CKiB4B,CLhBjC,GKgBqC,CLhBjC,AKgBkC,CLhBjC,KAAK,AKgBkC,CLhBjC,CKgBmC,GAAG,GAAG,CLhBjC,AKgBkC,CLfxD,AKeyD,CLfzD,AKe0D,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAA;AFLxF,IG7BI,INoBI,ACUA,AIKA,CLfC,GrBsFU,EsB5EL,AK9BA,CAAC,C3B0GI,AsB5EH,CIKC,CAAC,CCnCC,CAAC,CAAC,CL8BC,AK9BA,CDmCC,CAAC,EAAE,CAAC,E1BuEN,C2B1GS,ADmCA,C1BuEP,C2B1GS,CAAC,CAAA,ADmCC,CAAA,YFNgC,KxB6ErC,CAAS;AwB5EtC,CG7BC,ONyCO,ACXA,AIMA,I1BuEI,A0BvEA,KAAY,CJNN,AIMM,EJNJ,ItB6EI,CAAC,GAAG,AsB7EA,CtB6EC,EAAE,EAAE,MAAM,CAAC,CAAA,CqBlEZ,GAApB,KGZsC;AAC9C,AG5BA,KL6BK,GIOG,I1BsEI,AqBlEA,AKJA,ILII,AKJA,CLIC,IKJI,ILII,CrBkEC,AqBlEA,CrBkEC,A0BtEA,EAAE,OLIO,ErBkEE,AqBlEA,CrBkEC,AqBlED,SrBkEU,CAAC,GAAG,CAAC,EAAE,CAAE,CwB9EJ,CxB8EM,MAAM,CAAC,CAAA;AwB7ElE,CFCC,CAAC,CAAC,CK9BuB,I3B2GlB,AqBlEA,CrBkEC,AqBlEA,ACXA,CtB6EC,CAAA,AsB7EC,CAAC,AIOA,IAAI,GJPG,CAAA,AIOC,GAAG,SAAS,CAAC,GCjC/B,EDiCoC,CAAC,EAAE,CAAC,IAAI,KFRC,KEQS,CAAC,EAAC,KAAK,EAAE,6CAAqB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAC,CAAC,CAAA;AFP/F,IGDI,I3BgFI,AqBlEQ,IKLJ,G1BuEG,G2BhFC,C3BgFG,CAAA,C0BvEE,CAAC,CCTG,IDSE,CAAC,EAAE,CLKL,AKLM,GLKvB,AKL0B,IAAI,CAAA,KLKZ,GAA+B,UGbH;AACtD,IxB+EI,CAAC,G2BjFD,INeQ,AKLA,ILKI,CKLA,CAAC,ECTT,GDSc,GAAG,EAAC,IAAI,GLKN,CAAC,EMdX,ADSgB,ELKD,AKLG,CLKF,EMdX,CAAC,ADSgB,MLKG,AKLH,CLKI,CKLH,CLKK,AGbO,AGK5C,ADGgC;AFNrC,IxB+EkB,I2B3Fd,CDmBK,OLKO,IAAI,CAAC,CMxBT,G3B2FY,A2B3FT,G3B2FX,CqBnEyB,CAAC,KMxBd,G3B2FS,AwB/Ee,CHYD,CAAC,CMxBd,GNwBkB,CrBmEe,AqBnEd,ErBoEpB,OqBpE6B,CAAC,CAAA,IrBoEP,EACvB,YAAqD;AwB/E9E,QxB8EyB,I2B3FjB,CDkBO,GLMC,AMxBJ,INwBQ,AMxBJ,CNwBK,AMxBJ,GAAG,CAAC,KNwBS,CMxBH,CAAC,CNwBK,EMxBF,EAAE,C3B2FR,C2B3FU,C3B2FV,UqBnEe,CAAA,QrBmEQ;IwB9Ed,IxB+ET,I0BzEb,CLMC,GMxBD,ADkBM,KClBF,ADkBO,CClBN,EDkBS,MClBD,CAAC,CDkBQ,CClBP,ADkBQ,I1ByEV,C0BzEe,C1ByEf,A0BzEgB,EAAE,CAAC,EFNmB,AGZzB,EAAE,CAAC,EAAC,CAAC,CAAA,O3B2F8B,GAAG,EAAE;IwB/B1E,IxBgCU,IAAA,AqBnEF,CMxBH,GNwBO,GKNG,OFyCH,KAAY,OHnCD,CAAC,GAAG,CAAC,EAAE,KKNc,8B1ByEwC,EAAzE,a0BzEsD,CAAC,G1ByE9C,A0BzEiD,E1ByE/C,A0BzEiD,GAAG,CAAG,CAAA,iB1ByEzC,CAAgD;QAEhF,AwBlCJ,IExCQ,G1B0EG,CqBpEC,CMzBD,E3B6FI,CwBjCX,AEzCY,CAAC,ELMC,GKNI,CAAC,EAAE,CAAC,G1B0EG,A0B1EA,C1B2ErB,IwBlCE,AEzCwB,CAAA,IFyCnB,CAAC,GxBkCK,EACb,IwBtBP,GxBsBc,EACP,SAAS,EACT,IAAI,GAAG,CAAC,YAAY,CAAC,EACrB,cAAc,CACjB,CAAA;IACL,CAAC,GwB6CgB,IE7HT,CLMC,GMzBD,CDmBI,CF6HS,AE7HR,GF6HyB,AGhJ1B,CAAC,CDmBK,EF6HwB,CE7HrB,EAAC,ECnBD,CAAC,CDmBI,CCnBH,KDmBG,EAAE,ICnBM,CDmBD,CCnBG,KAAI,CHgJc,AGhJb,ADmBR,EF6HuB,AE7HtB,CF6HsB,AE7HtB,ECnBY,CAAC,MAAM,GAAG,CAAC,EAAC,CAAC,CAAA;I3B6G/D,IwBuCqB,CEhIZ,GLMG,CMzBH,GNyBS,GAAG,GAAY,AG0HJ,GxBvC5B,AqBnFmC,AG0HJ,YH1HgB,KAAK,CAAC,SAAS,QG0Hf,CAAU,aAAa,CAAC,CAAA;AxBvCxE,CAxIA,AAwIC,IAAA,GwBwCoB,AGnJjB,CAAC,CAAA,MNyBW,CAAC,CAAC,EG0HS,GAAG,GH1HJ,CAAC,WAAW,CAAC,GAAG,CAAC,eG0HG,CAAQ,WAAW,CAAC,CAAA;AxBhLrD,I0BgDT,CAAC,GF6LgB,AG5Mb,KAAI,CAAC,ENsBG,CAAC,CAAC,CMtBA,ENsBG,CAAA,AMtBA,OH4Me,GAAmB,IAAI,IxB7OhC,6BwB6O+C,CAAC,CAAC,CAAC,CAAA;AxBnG7E,I0B5II,IFyFI,IH/BI,AMtBA,CHqDA,CAAC,EH/BG,CMtBC,EAAE,GHqDE,GAAG,AGrDC,CAAC,SNsBF,CAAC,AMtBW,GNsBR,CAAC,EAAE,IK1DV,GAAjB;I1B4I0C,I0B5I1C,IF0FQ,AGrDA,INsBI,EMtBE,ENsBE,AMtBA,CNsBC,AG+BA,EAAE,EElFlB,CC6BqB,CAAC,ENsBE,CAAC,CG+BC,CAAC,KH/BK,CAAC,AMtBA,GNsBG,CAAC,CAAA,EG+BG,CAAC,KAAK,CAAC,IxBkDD;IAAnD,I0B3IQ,IF0FI,AGrDA,ADrCA,CAAC,GL2DG,GG+BG,CH/BC,CAAC,AG+BA,AE1FA,ECqCE,CDrCC,CCqCC,CAAC,GHqDG,CH/BC,AG+BA,GH/BG,EK3DE,CL2DC,AK3DA,CL2DA,MG+BO,CAAC,KAAK,CAAC;SGpDzC,CAAA,EHqDG,AE1FA,CL2DC,GK3DG,IF0FI,CE1FA,CF0FE,AE1FD,IF0FK,CE1FA,CAAC,CF0FE,EAA2B,CE1FzB,KAAK,MAAM;I1B0IW,CAAC,GqB9E9C,CAAC,AG+BA,CAAA,ME1FO,OAAM;I1ByI+B,A2BpGjD,CAAC,GNuBD,AGgCI,IAAM,AE3FF,IAAM,EL2Db,AGgCe,EE3FE,CF2FC,EE3FE,UAAU,CAAC,C1BwIkB,C0BxIjB,KAAK,EAAE,SF2FP,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,AE3FR,CF2FS,AE3FR,CAAC,EAAE,EF2FU,AE3FR,CF2FS,AE3FR,EAAC,CAAC,CAAA,EF2FY,GAAG,CAAC,CAAC,CAAC,CAAA;AxB6CvC,CAArD,AAAsD,CAAR,EqB7E1C,AMtDA,CNLA,AA2DC,CA3DiB,CrBwI6B,CwB5C3C,ExB4C8C,CqBxI3B,CAAC,AG4Fd,AE3FF,SAAS,CAAC,CF2FG,EH5FgB,AMK/B,CHuFkB,CE3FF,CL0DrB,AMtDD,ADJuB,KAAK,CAAC,EAAE,CAAC,GAAG,IAAI,CAAA,cF2FA,CAAC,KAAI,CAAC,KAAK,CAAC,WAAW,EAAE,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAA;AxB4CzE,IqB3ET,IAAI,AGgCA,AGvFM,CNuDL,GGgCK,AGvFA,ADJF,KF2FO,AE3FH,CAAC,EF2FK,IHhCL,CAAC,CK3DO,CCI8B,ADJ7B,ECIX,ADJY,IAAI,CL2DJ,CAAC,AGgCA,CAAC,CHhCC,EK3DC,EF2FG,AE3FF,CF2FG,AE3FF,CAAA,ECIb,EHuFoB,AGvFlB,EHuFoB,UAAA,CxB2CL,IwB3CU,CGvFnB,EAAE,CHuFqB,OAAA,MAAM,CAAC,OAAO,CAAC,KAAK,AGvF9B,CHuF+B,AGvFjB,EHuFJ,CAAqB,CAAC,CAAA;AxB6CzE,QqB5EQ,AGgCA,AGtFA,ADLA,CAAC,EAAE,CF2FG,GGtFC,C3BmIX,EwB7CgB,GAAG,ExB6Ce,EAClC,GqB9EwB,CAAC,GAAG,EAAE,CMtDlB,CHsFa,CAAC,CxB8CT,EACjB,GqB/E8C,CAAC,CAAA,OrB+EN,AwB/CT,CAAC,GE3FL,CAAC,CF2FS,EAAE,CE3FP,CCKT,CDLW,IAAI,CAAC,CAAC,CF2FD,AE3FC,KF2FI,IAAI,IGtFxB,GHsFwB,IGtFjB,CHsFsB,CAAC,AGtFrB,MHsF2B,GAAG,WAAW,EAA1B,CAA0B,CAAC,EAAE,CAAO,CAAC,CAAA,EGtFtC,IACnB,EAAC,KAAK,OAAA,EAAE,MAAM,QAAA,EAAE,UAAU,YAAA,EAAE,WAAW,aAAA,EAAC,IAC5C,QAAQ,EAAE,IAAI,CAAC,QAAQ,IAAG,CAAA;I3BqInD,A2BpIA,ADPA,CL2DC,AMpDA,ADPA,G1B2IK,AwBhDF,IAAM,KxBgDK,GAAG,AwBhDA,GAAG,oBxBgDO,CAAC,MwBhDI,CxBgDG,AwBhDF,CxBgDG,CAAA,IwBhDG,EAAE,CAAC,EAAE,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;IxBkDlE,AqBhFA,AMpDA,ADPA,I1B2IM,AwBjDF,GH/BG,EG+BC,CH/BE,AG+BD,CH/BC,IG+BI,GxBiDM,AwBjDH,EAAC,CxBiDK,IAAI,CwBjDH,MGnFP,EHmFO,CGnFxB,CHmF0B,MAAM,GE1FZ,GAApB,EF0FgC,EAAE,OxBiDc,CAAC,AwBjDP,UAAA,EAAE,aAAa,EAAE,IAAI,EAAC,CAAA;AH9BpE,CAAC,OrBgFO,A2BrIJ,ADNI,aAAa,CAAC,E1B2IE,C2B/HnB,C3B+HqB,A0B3IA,CAAC,QAAQ,CAAC,CAAA,E1B2IG;AqBrJvC,IGoGI,AEzFA,CFyFC,AEzFA,G1B2IG,A2BrIA,M3BqIM,A2BrIA,CAAC,C3BqIC,OAAO,CAAC,MAAM,AqBjF7B,CMpD8B,CAAC,QAAQ,EAAE;IHsB/B,AE1BP,C1B0IC,CAAC,CAAA,K2BrIM,IAAM,KAAK,GAAG,MAAM,CAAC,EHqBhB,EE1BP,CF0BN,EE1BA,GCKuC,CAAA;I3BuIvC,IwBjHU,AE1BN,IF0BM,AGrBF,GDLG,C1B2IC,A2BtIE,C3BsID,K2BtIO,E3BsIA,CAAC,A2BtIE,MAAM,CAAC,G3BsIR,GwBjH2E,EAAtF,CxBiHiB,EAAE,A2BtIW,CAAA,ADLzB,C1B2IgB,I0B3IX,EAAE,WF0BJ,EAAE,gCAAa,EAAE,0BAAU,EAAE,0BAAU,EAAE,8BAAY,CAAyB;QxBkH7F,AwBjHM,IxBiHA,AwBjHA,AGrBF,IDLA,C1B2IO,A2BtIH,CAAC,E3BsIK,CwBjHuC,EAA9C,AE1BI,EAAE,CCKI,CAAC,E3BsIK,A2BtIJ,C3BsIK,E0B3IJ,C1B2IO,CAAC,A2BtIJ,E3BsIM,CAAC,CAAA,CwBjHnB,EAAE,AGrBU,EAAE,MAAM,QHqBb,AGrBa,EHqBX,AGrBY,CAAC,CAAA,oBHqBL,EAAE,kCAAc,CAAQ;QxBkHrD,AwBjHO,AGrBP,CAAC,CAAC,CAAA,C3BsIE,AwBjHG,IE1BH,KAAK,EAAE,IAAI,CAAC,KAAK,C1B2IN,A0B3IO,C1B2IN,AwBjHF,EAAE,EE1BW,C1B2IN,CAAC,ewBjHD,EAAE,qBAAM,CAAS;IGpB1C,CAAC,GHqBU,IxBiHH,AwBjHG,IE1BH,G1B2IM,Y0B3IS,EAAE,IF0BN,EAAE,CE1BW,oBF0BL,EAAE,mCAAa,CAAS;IGHvD,I3BqHQ,AwBhHA,IAAM,GGLb,CDt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","file":"9da1f22267b6c295272a7b7fd7c852e0.map","sourcesContent":["export function existing<T>(maybe: T | nothing): maybe is NonNullable<T> {\n    return typeof maybe !== 'undefined' && maybe !== null && !Number.isNaN(maybe)\n}\nexport function notExisting<T>(maybe: Maybe<T>): maybe is nothing {\n    return !existing(maybe)\n}\n\n","import {existing} from '../typecheck/existing'\n\nexport function alternate<A>(a: A, b: A): A {\n    return existing(a) ? a : b\n}\n","import {existing} from '../typecheck/existing'\n\nexport function ensure<A>(maybe: A, defaultValue: NonNullable<A>): NonNullable<A> {\n    return existing(maybe)\n        ? maybe\n        : defaultValue\n}\n\n","import FastBinaryIndexedTree from 'fast-binary-indexed-tree'\nimport {ensure} from './ensure'\n\nexport function cloneFastBinaryIndexedTree(\n    source: FastBinaryIndexedTree,\n    newDefaultHeight?: px\n): FastBinaryIndexedTree {\n    const target = new FastBinaryIndexedTree({\n        defaultFrequency: ensure(newDefaultHeight, source.defaultFrequency),\n        maxVal: source.maxVal\n    })\n\n    target['_tree'] = {...source['_tree']}\n    target['_countNeg'] = source['_countNeg']\n\n    return target\n}\n","import FastBinaryIndexedTree = require('fast-binary-indexed-tree')\n\nexport function expandFastBinaryIndexedTree(\n    source: FastBinaryIndexedTree,\n    increasedSize: number\n): void {\n    increasedSize = Math.round(increasedSize)\n    if (increasedSize <= 0)\n        return\n\n    const emptyTree = new FastBinaryIndexedTree({\n        maxVal: source.maxVal + increasedSize,\n        defaultFrequency: source.defaultFrequency\n    })\n\n    source['_maxVal'] = emptyTree['_maxVal']\n    source['_msb'] = emptyTree['_msb']\n}\n","// TODO support other iterable\nexport function inverseMap<A>(array: ReadonlyArray<A>): Map<A, number> {\n    return array\n        .map((value, index) => [value, index])\n        .reduce((map, [value, index]) => map.set(value, index), new Map())\n}\n","export const nothing: nothing = null\n","import FastBinaryIndexedTree from 'fast-binary-indexed-tree'\nimport {notExisting} from '../typecheck/existing'\nimport {alternate} from '../utils/alternate'\nimport {cloneFastBinaryIndexedTree} from '../utils/cloneFastBinaryIndexedTree'\nimport {ensure} from '../utils/ensure'\nimport {expandFastBinaryIndexedTree} from '../utils/expandFastBinaryIndexedTree'\nimport {inverseMap} from '../utils/inverseMap'\nimport {nothing} from '../utils/nothing'\nimport {ListItemID, ListItemPosition, ListItemShape, ListLayout} from './ListLayout'\n\nexport class ListLayoutImpl implements ListLayout {\n    public get itemIDs(): ReadonlyArray<ListItemID> { return this.indexToID }\n\n    public get size(): number { return this.indexToID.length }\n\n    public get totalHeight(): px { return this.prefixSumIndex.read(this.indexToID.length) }\n\n    public getByID(id: ListItemID): Maybe<ListItemPosition> {\n        const {idToIndex, prefixSumIndex} = this\n        const index = idToIndex.get(id)\n        if (notExisting(index))\n            return nothing\n        const offset = prefixSumIndex.read(index)\n        const height = prefixSumIndex.readSingle(index)\n        return {id, index, offset, height}\n    }\n\n    public getByIndex(index: number): Maybe<ListItemPosition> {\n        const {indexToID} = this\n        const id = indexToID[index]\n        if (notExisting(id))\n            return nothing\n        return this.getByID(id)\n    }\n\n    public getByIndexRange(from: number, to: number): Array<ListItemPosition> {\n        const fromItem = alternate(this.getByIndex(from), this.getByIndex(0))\n        const toItem = alternate(this.getByIndex(to), this.getByIndex(this.size - 1))\n        if (notExisting(fromItem) || notExisting(toItem))\n            return []\n        const results: Array<ListItemPosition> = []\n        for (let i = fromItem.index; i <= toItem.index; i++) {\n            results.push(this.getByIndex(i)!)\n        }\n        return results\n    }\n\n    public getByOffset(position: px): Maybe<ListItemPosition> {\n        let bound = this.prefixSumIndex.upperBound(position)\n        const index = bound === this.size ? bound - 1 : bound\n        const id = this.indexToID[index]\n        if (notExisting(id))\n            return nothing\n        return this.getByID(id)\n    }\n\n    public getByOffsetRange(from: px, to: px): Array<ListItemPosition> {\n        const fromItem = alternate(this.getByOffset(from), this.getByIndex(0))\n        const toItem = alternate(this.getByOffset(to), this.getByIndex(this.size - 1))\n        if (notExisting(fromItem) || notExisting(toItem))\n            return []\n        return this.getByIndexRange(fromItem.index, toItem.index)\n    }\n\n    public clone(newDefaultHeight?: px): ListLayout {\n        const {indexToID, idToIndex, knownHeights, defaultHeight, prefixSumIndex} = this\n\n        newDefaultHeight = ensure(newDefaultHeight, defaultHeight)\n        const newKnownHeights = new Map(knownHeights)\n        const newPrefixSumIndex = cloneFastBinaryIndexedTree(prefixSumIndex, newDefaultHeight)\n\n        return new ListLayoutImpl(\n            newDefaultHeight,\n            indexToID,\n            idToIndex,\n            newKnownHeights,\n            newPrefixSumIndex\n        )\n    }\n\n    public pick(newItemIDs: ReadonlyArray<ListItemID>): ListLayout {\n        const {defaultHeight, knownHeights} = this\n\n        const [newIDToIndex, newPrefixSumIndex] = reflow(newItemIDs, defaultHeight, knownHeights)\n\n        return new ListLayoutImpl(\n            defaultHeight,\n            newItemIDs,\n            newIDToIndex,\n            new Map(knownHeights),\n            newPrefixSumIndex\n        )\n    }\n\n    public append(additionalItemIDs: ReadonlyArray<ListItemID>): this {\n        const {idToIndex, indexToID, prefixSumIndex} = this\n\n        this.indexToID = [...indexToID, ...additionalItemIDs]\n        const newIDToIndex = new Map(idToIndex)\n        this.idToIndex = newIDToIndex\n        additionalItemIDs.forEach((id, index) => {\n            if (idToIndex.has(id))\n                throw new DuplicateListItemIDError(id)\n            newIDToIndex.set(id, index + indexToID.length)\n        })\n\n        expandFastBinaryIndexedTree(prefixSumIndex, additionalItemIDs.length)\n\n        return this\n    }\n\n    public update(newShapes: ReadonlyArray<ListItemShape>): this {\n        const {idToIndex, knownHeights, prefixSumIndex} = this\n\n        newShapes.forEach(shape => {\n            const {id, height} = shape\n\n            knownHeights.set(id, height)\n            prefixSumIndex.writeSingle(idToIndex.get(id)!, height)\n        })\n\n        return this\n    }\n\n    public static create(itemIDs: ReadonlyArray<ListItemID>,\n                         defaultHeight: px = 100,\n                         knownHeights: ReadonlyMap<ListItemID, px> = new Map()): ListLayout {\n        const [idToIndex, prefixSumIndex] = reflow(itemIDs, defaultHeight, knownHeights)\n\n        return new ListLayoutImpl(\n            defaultHeight,\n            itemIDs,\n            idToIndex,\n            new Map(knownHeights),\n            prefixSumIndex\n        )\n    }\n\n    // copy-on-write style data sharing\n    private constructor(\n        private defaultHeight: px,\n        private indexToID: ReadonlyArray<ListItemID>,\n        private idToIndex: ReadonlyMap<ListItemID, number>,\n        private readonly knownHeights: Map<ListItemID, px>,\n        private readonly prefixSumIndex: FastBinaryIndexedTree\n    ) {}\n}\n\nexport class DuplicateListItemIDError extends Error {}\n\nfunction reflow(\n    itemIDs: ReadonlyArray<ListItemID>,\n    defaultHeight: px,\n    knownHeights: ReadonlyMap<ListItemID, px>\n): [Map<ListItemID, number>, FastBinaryIndexedTree] {\n    const idToIndex = inverseMap(itemIDs)\n\n    const prefixSumIndex = new FastBinaryIndexedTree({\n        defaultFrequency: defaultHeight,\n        maxVal: itemIDs.length\n    })\n\n    knownHeights.forEach((height, id) => {\n        const index = idToIndex.get(id)\n        if (notExisting(index))\n            return\n        prefixSumIndex.writeSingle(index, height)\n    })\n\n    return [idToIndex, prefixSumIndex]\n}\n","import {Observables} from './Observables'\nimport {Pipes} from './Pipes'\n\nexport function applyMiddleware<T extends object>(\n    origin: Observables<T>, pipes: Pipes<T>\n): Observables<T> {\n    return Object.keys(origin)\n        .map(key => ({[key]: pipes[key](origin[key])}))\n        .reduce((prev, curr) => Object.assign(prev, curr)) as any\n}\n","import {Subjects} from './Subjects'\n\nexport function createPublishers<T extends object>(subjects: Subjects<T>): EventHandlers<T> {\n    return Object.keys(subjects)\n        .map(key => ({[key]: (value: T[typeof key]) => subjects[key].next(value)}))\n        .reduce((prev, curr) => Object.assign(prev, curr)) as any\n}\n","import {Subject} from 'rxjs/Subject'\nimport {Subjects} from './Subjects'\n\nexport function createSubjects<T extends object>(names: ShapeOf<T>): Subjects<T> {\n    return Object.keys(names)\n        .map(key => ({[key]: new Subject()}))\n        .reduce((prev, curr) => Object.assign(prev, curr)) as any\n}\n","import {applyMiddleware} from './applyMiddleware'\nimport {createPublishers} from './createPublishers'\nimport {createSubjects} from './createSubjects'\nimport {Observables} from './Observables'\nimport {Pipes} from './Pipes'\n\nexport function createDispatcher<T extends object>(\n    middleware: Pipes<Required<T>>\n): Dispatcher<Required<T>> {\n    const subjects = createSubjects<Required<T>>(middleware)\n    return Object.assign(\n        {publish: createPublishers<Required<T>>(subjects)},\n        applyMiddleware<Required<T>>(subjects, middleware)\n    )\n}\n\nexport type Dispatcher<T extends object> = {\n    publish: EventHandlers<Required<T>>,\n} & Observables<Required<T>>\n\n","import {Observable} from 'rxjs/Observable'\n\nexport type Pipe<A, B=A> = (source: Observable<A>) => Observable<B>\n\nexport type Pass<T> = Pipe<T, T>\nexport const Pass = <T>(observable: Observable<T>): Observable<T> => observable\n\n","export function isFalse(value: any): value is false {\n    return value === false\n}\n","export function isTrue(value: any): value is true {\n    return value === true\n}\n","export function isFunction(a: any): a is Function {\n    return typeof a === 'function'\n}\n","import {notExisting} from '../typecheck/existing'\nimport {isFunction} from '../typecheck/isFunction'\nimport {nothing} from './nothing'\n\nexport function assume<A, B>(a: A, func: (a: NonNullable<A>) => B): Maybe<B>\nexport function assume<A, B, C>(a: A, b: Maybe<B>, func: (a: A, b: B) => C): Maybe<C>\nexport function assume<T>(\n    ...params: Array<any | ((...p: Array<NonNullable<any>>) => T)>\n): Maybe<T> {\n    const func = params[params.length - 1]\n    const funcParams = params.slice(0, params.length - 1)\n    if (!isFunction(func) || funcParams.length < 1 || funcParams.some(notExisting)) {\n        return nothing\n    }\n    return func(...funcParams)\n}\n","export function publishAll<T extends object>(value: T, handlers: EventHandlers<Required<T>>): void {\n    Object.keys(handlers).forEach(key => handlers[key](value[key]))\n}\n","export type Pulse = any\nexport let Pulse: Pulse = true\n","import {notExisting} from '../typecheck/existing'\nimport {nothing} from './nothing'\n\nexport function calcSum(array: Array<number>): number {\n    return array.reduce((acc, curr) => acc + curr, 0)\n}\n\nexport function calcAverage(array: Array<number>): Maybe<number> {\n    if (array.length === 0)\n        return nothing\n    return calcSum(array) / array.length\n}\n\nexport function nearestToAverage(array: Array<number>): Maybe<number> { // TODO better name\n    const average = calcAverage(array)\n    if (array.length === 0 || notExisting(average))\n        return nothing\n    const sorted = array.sort((a, b) => Math.abs(a - average) - Math.abs(b - average))\n    return sorted[0]\n}\n\nexport function calcDeviation(array: Array<number>): Maybe<number> {\n    const average = calcAverage(array)\n    if (array.length === 0 || notExisting(average))\n        return nothing\n    return calcAverage(array.map(num => Math.abs(num - average)))\n}\n\n\n","export async function forDuration(duration: ms): Promise<void> {\n    return new Promise<void>((then) => setTimeout(then, duration))\n}\n","export async function nextAnimationFrame(): Promise<undefined> {\n    return new Promise(resolve => requestAnimationFrame(resolve)) as Promise<any>;\n}\n","// https://stackoverflow.com/a/44078785/1815491\nexport function uniqueID() {\n    return Math.random().toString(36).substring(2)\n        + (new Date()).getTime().toString(36);\n}\n","// ignoring rotate\r\n\r\nexport function calcOutline(dom: Element): Outline {\r\n    const rect = dom.getBoundingClientRect()\r\n\r\n    const {width, height} = rect\r\n    const x = rect.left\r\n    const y = rect.top\r\n\r\n    return {x, y, width, height}\r\n}\r\n","import {scale} from 'transformation-matrix/scale'\nimport {transform} from 'transformation-matrix/transform'\nimport {translate} from 'transformation-matrix/translate'\n\nexport function intermediateTransform(from: Outline, to: Outline): Matrix {\n    const centerOf = (rect: Outline): Point => {\n        return {\n            x: rect.x + rect.width * 0.5,\n            y: rect.y + rect.height * 0.5\n        }\n    }\n    const fromMiddle = centerOf(from)\n    const toMiddle = centerOf(to)\n\n    const matrix = transform(\n        translate(toMiddle.x - fromMiddle.x, toMiddle.y - fromMiddle.y),\n        scale(to.width / from.width, to.height / from.height)\n    )\n\n    return matrix\n}\n\n","import {inverse} from 'transformation-matrix/inverse'\r\nimport {toCSS} from 'transformation-matrix/toString'\r\nimport {isFunction} from '../typecheck/isFunction'\r\nimport {forDuration} from '../utils/forDuration'\r\nimport {nextAnimationFrame} from '../utils/nextAnimationFrame'\r\nimport {uniqueID} from '../utils/uniqueID'\r\nimport {calcOutline} from './calcOutline'\r\nimport {intermediateTransform} from './intermediateTransform'\r\n\r\nexport async function tweenHere(\r\n    element: HTMLElement,\r\n    from: Outline | ((current: Outline, to: Outline) => Outline) = current => current,\r\n    duration: ms | ((from: Outline, target: Outline) => ms) = 200,\r\n    easing: Easing = [0, 0, 1, 1]\r\n): Promise<void> {\r\n    const tweeningID = uniqueID()\r\n    tweening.set(element, tweeningID)\r\n\r\n    const current = calcOutline(element)\r\n\r\n    const to = current // calcOutlineOrigin(element)\r\n    from = isFunction(from) ? from(current, to) : from\r\n\r\n    const transform = intermediateTransform(from, to)\r\n    duration = isFunction(duration) ? duration(from, to) : duration\r\n    element.style.transition = 'none'\r\n    element.style.transform = toCSS(inverse(transform))\r\n\r\n    await nextAnimationFrame()\r\n    if (tweening.get(element) !== tweeningID)\r\n        return\r\n    element.style.transition = `\r\n        opacity ${duration}ms cubic-bezier(${easing.join(',')}),\r\n        transform ${duration}ms cubic-bezier(${easing.join(',')})\r\n    `\r\n    element.style.transform = 'none'\r\n\r\n    await forDuration(duration)\r\n    if (tweening.get(element) !== tweeningID)\r\n        return\r\n    element.style.transition = `none`\r\n    tweening.delete(element)\r\n}\r\n\r\nconst tweening: WeakMap<Element, TweenID> = new WeakMap()\r\n\r\ntype TweenID = string\r\n\r\n","import {ensure} from '../../../utils/ensure'\n\nexport function calcFocusOffset(focusOffset: Maybe<px>, viewportHeight: px): px {\n    return ensure(focusOffset, viewportHeight / 3)\n}\n","import {ListItemPosition, ListLayout} from '../../../layouts/ListLayout'\n\nconst pageSize = 10\n\nexport function calcSegments(scroll: px, preload: px,\n                             height: px, layout: ListLayout): Array<ListItemPosition> {\n    const floor = Math.max(\n        Math.min(\n            scroll - height,\n            scroll + preload\n        ),\n        0\n    )\n    const ceil = Math.min(\n        Math.max(\n            scroll + height + height,\n            scroll + height + preload\n        ),\n        layout.totalHeight\n    )\n\n    return layout.getByOffsetRange(floor, ceil)\n}\n","import * as React from 'react'\nimport * as ReactDOM from 'react-dom';\nimport ResizeObserver from 'resize-observer-polyfill'\nimport {isString} from 'util';\nimport {existing, notExisting} from '../../typecheck/existing'\nimport {nothing} from '../../utils/nothing'\nimport {PropsOf} from '../PropsOf';\nimport hoistNonReactStatics = require('hoist-non-react-statics')\n\nexport function measuring<C extends React.ComponentClass<any> | keyof React.ReactHTML>(\n    Component: C\n): Measuring<C> {\n    class HOC extends React.PureComponent<PropsOf<C> & MeasureProps> {\n        render() {\n            // TODO what if Component renders multiple elements?\n\n            const props: PropsOf<C> = Object.assign(\n                {},\n                this.props,\n                {ref: (it: any) => this.updateRef(it)}\n            ) as any\n            delete props['onHeightChange']\n            delete props['onWidthChange']\n\n            return React.createElement(\n                Component,\n                props,\n                this.props.children\n            )\n        }\n\n        private observer: ResizeObserver\n        private observing: Maybe<Element>\n\n        constructor(props: PropsOf<C> & MeasureProps) {\n            super(props)\n\n            this.observer = new ResizeObserver(\n                (entries: ResizeObserverEntry[], observer: ResizeObserver) => {\n                    const height = entries[0].contentRect.height\n                    const width = entries[0].contentRect.width\n                    if (existing(this.props.onHeightChange)) {\n                        this.props.onHeightChange(height)\n                    }\n                    if (existing(this.props.onWidthChange)) {\n                        this.props.onWidthChange(width)\n                    }\n                }\n            )\n        }\n\n        componentWillUnmount() {\n            this.observer.disconnect()\n        }\n\n        private updateRef(ref: Maybe<React.ReactInstance>) {\n            if (existing(this.observing)) {\n                this.observer.unobserve(this.observing)\n                this.observing = nothing\n            }\n            if (notExisting(ref)) {\n                return\n            }\n            const dom: Element = ref instanceof React.Component\n                ? ReactDOM.findDOMNode(ref)\n                : ref\n            if (existing(dom)) {\n                this.observer.observe(dom)\n                this.observing = dom\n            }\n        }\n    }\n\n    if (!isString(Component)) {\n        hoistNonReactStatics(HOC, Component as any)\n    }\n\n    return HOC\n}\n\nexport type Measuring<T extends React.ComponentClass<any> | keyof React.ReactHTML> =\n    React.ComponentClass<PropsOf<T> & MeasureProps>\n\ntype MeasureProps = SelfDecideHeight & SelfDecideWidth\n","import sharedInstance from 'jss'\nimport * as React from 'react';\nimport {ListItemShape} from '../../../layouts/ListLayout'\nimport {measuring, Measuring} from '../../../react/measure/measuring'\nimport {PropsOf} from '../../../react/PropsOf';\nimport {existing} from '../../../typecheck/existing'\nimport {Segment} from './Segment'\n\nexport class MeasuredSegment extends React.PureComponent<Props> {\n    render() {\n        const {id, width} = this.props\n        const {Segment} = this\n        return <Segment id={id} width={width} onHeightChange={this.reportHeight}/>\n    }\n\n    private reportHeight = (height: px) => {\n        const id = this.props.id\n\n        if (existing(this.props.onHeightChange)) {\n            this.props.onHeightChange({id, height})\n        }\n    }\n\n    constructor(props: Props) {\n        super(props)\n        this.Segment = measuring(props.Segment)\n    }\n\n    private Segment: Measuring<Segment>\n}\n\ntype Props = PropsOf<Segment>\n    & { Segment: Segment }\n    & { onHeightChange: EventHandler<ListItemShape> }\n\nconst classes = sharedInstance.createStyleSheet({\n    mask: {\n        display: 'block',\n        contain: 'content',\n        height: 'auto',\n        willChange: 'height'\n    }\n}).attach().classes\n","import {ListLayout} from '../../../layouts/ListLayout'\nimport {notExisting} from '../../../typecheck/existing'\nimport {assume} from '../../../utils/assume'\n\nexport function projectScroll(scroll: px, focusOffset: px, from: ListLayout, to: ListLayout): px {\n    const prev = from.getByOffset(scroll + focusOffset)\n    const curr = assume(prev, prev => to.getByID(prev.id))\n    if (notExisting(prev) || notExisting(curr))\n        return scroll\n    const prevHeightBeforeFocus = scroll + focusOffset - prev.offset\n    const currHeightBeforeFocus = (prevHeightBeforeFocus / prev.height) * curr.height\n    return curr.offset - (focusOffset - currHeightBeforeFocus)\n}\n","import sharedInstance from 'jss'\r\nimport * as React from 'react'\r\nimport {CSSProperties} from 'react'\r\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {interval} from 'rxjs/observable/interval'\r\nimport {\r\n    bufferCount,\r\n    bufferTime,\r\n    combineLatest,\r\n    distinctUntilChanged,\r\n    filter,\r\n    map,\r\n    merge,\r\n    pairwise,\r\n    sampleTime,\r\n    scan,\r\n    shareReplay,\r\n    startWith,\r\n    timestamp,\r\n    withLatestFrom\r\n} from 'rxjs/operators'\r\nimport {animationFrame} from 'rxjs/scheduler/animationFrame'\r\nimport {Subscription} from 'rxjs/Subscription'\r\nimport {Memoize} from 'typescript-memoize'\r\nimport {ListItemID, ListItemPosition, ListItemShape, ListLayout} from '../../layouts/ListLayout'\r\nimport {ListLayoutImpl} from '../../layouts/ListLayoutImpl'\r\nimport {createDispatcher} from '../../rxjs/createDispatcher'\r\nimport {Pass} from '../../rxjs/Pipe';\r\nimport {Pipes} from '../../rxjs/Pipes'\r\nimport {existing} from '../../typecheck/existing'\r\nimport {isFalse} from '../../typecheck/isFalse';\r\nimport {isTrue} from '../../typecheck/isTrue';\r\nimport {assume} from '../../utils/assume'\r\nimport {ensure} from '../../utils/ensure'\r\nimport {nothing} from '../../utils/nothing'\r\nimport {publishAll} from '../../utils/publishAll'\r\nimport {Pulse} from '../../utils/Pulse'\r\nimport {calcAverage, nearestToAverage} from '../../utils/statics';\r\nimport {tweenHere} from '../../view/tweenHere'\r\nimport {calcFocusOffset} from './src/calcFocusOffset'\r\nimport {calcSegments} from './src/calcSegments'\r\nimport {MeasuredSegment} from './src/MeasuredSegment';\r\nimport {projectScroll} from './src/projectScroll'\r\nimport {Segment} from './src/Segment'\r\nimport deepEqual = require('deep-equal')\r\n\r\nexport class InfiniteList extends React.Component<Props, State> {\r\n    public render(): JSX.Element {\r\n        const {scrolled, heightUpdated, touchEnded, touchMoved, touchStarted} = this.actions$.publish\r\n        const {state, props, children, temporalScroll} = this\r\n        const {Segment, width, height} = props\r\n        const {segments, layout, useAutoLayout} = state\r\n\r\n        const paddingTop = useAutoLayout\r\n            ? <div key={'infinite-scroll-padding-top'}\r\n                   style={{height: existing(segments[0]) ? segments[0].offset : 0}}/>\r\n            : nothing\r\n\r\n        const contentStyle = {\r\n            width,\r\n            height: layout.totalHeight,\r\n            transform: temporalScroll === 0\r\n                ? 'none'\r\n                : `translateY(${-temporalScroll}px)`\r\n        }\r\n        const segmentStyle = (offset: px): CSSProperties => {\r\n            return useAutoLayout\r\n                ? {position: 'relative'}\r\n                : {position: 'absolute', top: `${offset}px`}\r\n        }\r\n\r\n        return <div className={classes.container} style={{width, height}}\r\n                    ref={ref => existing(ref) ? children.container = ref : nothing}\r\n                    onScroll={scrolled}\r\n                    onTouchStartCapture={touchStarted}\r\n                    onTouchEndCapture={touchEnded}\r\n                    onTouchMoveCapture={touchMoved}>\r\n            <div className={classes.content} style={contentStyle}\r\n                 ref={ref => existing(ref) ? children.content = ref : nothing}>\r\n                {paddingTop}\r\n                {segments.map(spec =>\r\n                    <div key={spec.id} className={classes.segment}\r\n                         style={segmentStyle(spec.offset)}\r\n                         ref={ref => existing(ref)\r\n                             ? children.segments.set(spec.id, ref)\r\n                             : children.segments.delete(spec.id)}>\r\n                        <MeasuredSegment {...{id: spec.id, Segment, width}}\r\n                                         onHeightChange={heightUpdated}/>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n        this.children = {\r\n            container: document.createElement('div'),\r\n            content: document.createElement('div'),\r\n            segments: new Map<ListItemID, HTMLElement>()\r\n        }\r\n\r\n        const layout = ListLayoutImpl.create(props.segmentIDs, Math.round(props.height / 6))\r\n        const focusOffset = calcFocusOffset(this.props.focusOffset, this.props.height)\r\n        const focus = assume(props.focus, focus => layout.getByID(focus))\r\n        const scroll = ensure(assume(focus, focus => focus.offset - focusOffset), 0 as px)\r\n        const segments = calcSegments(scroll, 0, props.height, layout)\r\n        this.state = {scroll, layout, segments, useAutoLayout: true}\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.children.container.scrollTop = this.state.scroll\r\n        this.work.add(this.updateState())\r\n        this.work.add(this.adjustScroll())\r\n        this.work.add(this.focusOnSegment())\r\n        this.work.add(this.callEventHandlers())\r\n        publishAll<Props>(this.props, this.props$.publish)\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Props, prevState: State) {\r\n        const {props, state, children} = this\r\n\r\n        if (prevProps !== props) {\r\n            publishAll<Props>(this.props, this.props$.publish)\r\n        }\r\n\r\n        if (prevState.layout !== state.layout) {\r\n            const {containerScroll, temporalScroll} = this\r\n            const prevScroll = containerScroll + temporalScroll\r\n\r\n            const focusOffset = calcFocusOffset(this.props.focusOffset, this.props.height)\r\n            const currScroll = Math.min(Math.max(projectScroll(\r\n                prevScroll, focusOffset,\r\n                prevState.layout, state.layout\r\n            ), 0), state.layout.totalHeight - props.height)\r\n\r\n            const expectedTemporalScroll = Math.ceil(currScroll - containerScroll)\r\n            if (Math.abs(temporalScroll - expectedTemporalScroll) > 1) {\r\n                this.temporalScroll = expectedTemporalScroll\r\n            }\r\n\r\n            if (!state.useAutoLayout && !prevState.useAutoLayout) {\r\n                Array.from(children.segments.entries())\r\n                    .forEach(([segmentID, element]) => {\r\n                        const prev = prevState.layout.getByID(segmentID)\r\n                        const curr = state.layout.getByID(segmentID)\r\n\r\n                        if (!existing(prev) || !existing(curr))\r\n                            return\r\n\r\n                        const prevScreenOffset = prev.offset - prevScroll\r\n                        const currScreenOffset = curr.offset - currScroll\r\n                        if (prevScreenOffset === currScreenOffset)\r\n                            return\r\n\r\n                        tweenHere(\r\n                            element,\r\n                            (current, to) => {\r\n                                return {\r\n                                    ...current,\r\n                                    y: prevScreenOffset - (to.y - current.y)\r\n                                }\r\n                            },\r\n                            (from, to) => {\r\n                                const diff = Math.abs(from.y - to.y) +\r\n                                    Math.abs(from.height - to.height) * 2\r\n\r\n                                return Math.min(Math.min(diff, 100), 300)\r\n                            },\r\n                            [0.445, 0.05, 0.55, 0.95]\r\n                        )\r\n                    })\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.work.unsubscribe()\r\n    }\r\n\r\n    private readonly work: Subscription = new Subscription()\r\n\r\n    private readonly children: Children\r\n\r\n    private readonly actions$ = createDispatcher<Actions>(actionsFilter)\r\n    private readonly props$ = createDispatcher<Props>(propsFilter)\r\n\r\n    @Memoize()\r\n    private get height$(): Observable<px> {\r\n        const {height} = this.props$\r\n\r\n        return height.pipe(\r\n            startWith(this.props.height),\r\n            distinctUntilChanged(),\r\n            // log$('height'),\r\n            shareReplay(1)\r\n        )\r\n    }\r\n\r\n    @Memoize()\r\n    private get layout(): Observable<ListLayout> {\r\n        const {segmentIDs} = this.props$\r\n        const {heightUpdated} = this.actions$\r\n\r\n        const updates$: Observable<Array<ListItemShape>> = heightUpdated.pipe(\r\n            bufferTime(0, animationFrame),\r\n            filter(buffer => buffer.length > 0)\r\n        )\r\n\r\n        const layout$: Observable<ListLayout> = segmentIDs.pipe(\r\n            scan<Array<ListItemID>, [Array<ListItemID>, ListLayout]>(\r\n                ([prevIDs, prevLayout], currIDs) => currIDs === prevIDs\r\n                    ? [currIDs, prevLayout]\r\n                    : [currIDs, prevLayout.pick(currIDs)],\r\n                [this.props.segmentIDs, this.state.layout]\r\n            ),\r\n            map(([_, layout]) => layout),\r\n            startWith(this.state.layout),\r\n            distinctUntilChanged(),\r\n            shareReplay(1)\r\n        )\r\n\r\n        return layout$.pipe(\r\n            combineLatest(updates$),\r\n            map(([layout, updates]): ListLayout => layout.update(updates).clone()),\r\n            distinctUntilChanged(),\r\n            // log$('layout'),\r\n            shareReplay(1)\r\n        )\r\n    }\r\n\r\n    private get temporalScroll(): px {\r\n        const {temporalScroll$} = this\r\n        return (temporalScroll$ as BehaviorSubject<px>).getValue()\r\n    }\r\n\r\n    private set temporalScroll(scroll: px) {\r\n        const {temporalScroll$} = this\r\n        const {content} = this.children;\r\n\r\n        (temporalScroll$ as BehaviorSubject<px>).next(scroll)\r\n        content.style.transform = scroll === 0\r\n            ? 'none'\r\n            : `translateY(${-scroll}px)`\r\n    }\r\n\r\n    private readonly temporalScroll$: Observable<px> = new BehaviorSubject(0)\r\n\r\n    private get containerScroll(): px {\r\n        const {container} = this.children\r\n        return container.scrollTop\r\n    }\r\n\r\n    private set containerScroll(scroll: px) {\r\n        const {container} = this.children\r\n        container.style['-webkit-overflow-scrolling'] = 'auto'\r\n        container.scrollTop = scroll\r\n        container.style['-webkit-overflow-scrolling'] = 'touch'\r\n    }\r\n\r\n    @Memoize()\r\n    private get containerScroll$(): Observable<px> {\r\n        const {scrolled, touchStarted, touchEnded} = this.actions$\r\n\r\n        const shouldSample: Observable<Pulse> = scrolled.pipe(\r\n            merge(touchStarted),\r\n            merge(touchEnded),\r\n            merge(interval(0, animationFrame)),\r\n            timestamp(),\r\n            distinctUntilChanged((prev, curr) => curr.timestamp - prev.timestamp < 100),\r\n            sampleTime(0, animationFrame),\r\n            startWith(Pulse)\r\n        )\r\n\r\n        return shouldSample.pipe(\r\n            map(() => this.containerScroll),\r\n            map(Math.round),\r\n            shareReplay(1)\r\n        )\r\n    }\r\n\r\n    @Memoize()\r\n    private get containerScrollVelocity$(): Observable<Velocity> {\r\n        const {containerScroll$} = this\r\n\r\n        const move = containerScroll$.pipe(\r\n            timestamp(),\r\n            // distinctUntilChanged((prev, curr) => curr.timestamp - prev.timestamp < 100),\r\n            pairwise()\r\n        )\r\n\r\n        return move.pipe(\r\n            map(([prev, curr]) =>\r\n                (curr.value - prev.value) / (curr.timestamp - prev.timestamp)\r\n            ),\r\n            startWith(0),\r\n            bufferCount(3, 1),\r\n            map(nearestToAverage),\r\n            filter(existing),\r\n            shareReplay(1)\r\n        )\r\n    }\r\n\r\n    @Memoize()\r\n    private get useAutoLayout$(): Observable<boolean> {\r\n        const {containerScrollVelocity$} = this\r\n\r\n        return containerScrollVelocity$.pipe(\r\n            map(Math.abs),\r\n            map(speed => speed > 3),\r\n            bufferCount(2, 1),\r\n            map(buffer => buffer.filter(isTrue).length > buffer.filter(isFalse).length),\r\n            distinctUntilChanged(),\r\n            // log$('useAutoLayout'),\r\n            shareReplay(1)\r\n        )\r\n\r\n    }\r\n\r\n    @Memoize()\r\n    private get scroll$(): Observable<Velocity> {\r\n        const {containerScroll$, temporalScroll$} = this\r\n\r\n        return containerScroll$.pipe(\r\n            withLatestFrom(temporalScroll$),\r\n            map(([container, temporal]) => container + temporal)\r\n        )\r\n    }\r\n\r\n    private get velocity(): Velocity {\r\n        return this['_velocity']\r\n    }\r\n\r\n    private updateState(): Subscription {\r\n        const {scroll$, layout, containerScrollVelocity$, height$, useAutoLayout$} = this\r\n\r\n        const preload$: Observable<px> = containerScrollVelocity$.pipe(\r\n            bufferCount(3, 1),\r\n            map(calcAverage),\r\n            filter(existing),\r\n            map(Math.round),\r\n            map(velocity => Math.max(Math.min(velocity * 500, 10000), -10000)),\r\n            distinctUntilChanged(),\r\n            // log$('preload'),\r\n            shareReplay(1)\r\n        )\r\n\r\n        const state: Observable<State> = scroll$.pipe(\r\n            combineLatest(preload$, useAutoLayout$, layout, height$),\r\n            map(([scroll, preload, useAutoLayout, layout, height]): State => {\r\n                const segments = calcSegments(scroll, preload, height, layout)\r\n                return {layout, segments, useAutoLayout, scroll}\r\n            }),\r\n            distinctUntilChanged((prev, curr) =>\r\n                prev.useAutoLayout === curr.useAutoLayout &&\r\n                prev.layout === curr.layout &&\r\n                deepEqual(prev.segments, curr.segments)\r\n            ),\r\n            startWith(this.state),\r\n            // tap(state=> console.log(state.useAutoLayout)),\r\n            shareReplay(1)\r\n        )\r\n\r\n        return state.subscribe(state => this.setState(state))\r\n    }\r\n\r\n    private adjustScroll(): Subscription {\r\n        const {containerScrollVelocity$} = this\r\n\r\n        const shouldApplyTemporalScroll: Observable<Pulse> = containerScrollVelocity$.pipe(\r\n            bufferCount(2, 1),\r\n            filter(buffer => !buffer.some(v => Math.abs(v) > 0.01))\r\n        )\r\n\r\n        return shouldApplyTemporalScroll.subscribe(() => {\r\n            const {temporalScroll, containerScroll} = this\r\n            if (temporalScroll === 0)\r\n                return\r\n            // console.log('adjusted')\r\n            this.containerScroll = containerScroll + temporalScroll\r\n            this.temporalScroll = 0\r\n        })\r\n    }\r\n\r\n    private focusOnSegment(): Subscription {\r\n        const {props$} = this\r\n\r\n        const newFocusSegment = props$.focus.pipe(\r\n            distinctUntilChanged(),\r\n            filter(existing),\r\n            map(focus => this.state.layout.getByID(focus)),\r\n            filter(existing)\r\n        )\r\n\r\n        return newFocusSegment.subscribe(segment => {\r\n            const focusOffset = calcFocusOffset(this.props.focusOffset, this.props.height)\r\n            const targetScroll = segment.offset - focusOffset\r\n            this.containerScroll = targetScroll\r\n            this.temporalScroll = 0\r\n        })\r\n    }\r\n\r\n    private callEventHandlers(): Subscription {\r\n        const {scroll$, layout} = this\r\n\r\n        const work = new Subscription()\r\n\r\n        work.add(scroll$.subscribe(scroll => {\r\n            if (existing(this.props.onScroll))\r\n                this.props.onScroll(scroll)\r\n        }))\r\n        work.add(layout.subscribe(layout => {\r\n            if (existing(this.props.onReflow))\r\n                this.props.onReflow(layout)\r\n        }))\r\n\r\n        return work\r\n    }\r\n}\r\n\r\ntype Props = {\r\n    segmentIDs: Array<ListItemID>\r\n    width: px\r\n    height: px\r\n    Segment: Segment\r\n    focus?: ListItemID\r\n    focusOffset?: px\r\n    onScroll?: EventHandler<px>\r\n    onReflow?: EventHandler<ListLayout>\r\n}\r\nconst propsFilter: Pipes<Required<Props>> = {\r\n    segmentIDs: distinctUntilChanged(),\r\n    width: distinctUntilChanged(),\r\n    height: distinctUntilChanged(),\r\n    Segment: distinctUntilChanged(),\r\n    focus: distinctUntilChanged(),\r\n    focusOffset: distinctUntilChanged(),\r\n    onScroll: distinctUntilChanged(),\r\n    onReflow: distinctUntilChanged()\r\n}\r\n\r\ntype State = {\r\n    scroll: px\r\n    layout: ListLayout\r\n    segments: Array<ListItemPosition>\r\n    useAutoLayout: boolean\r\n}\r\ntype Children = {\r\n    container: HTMLElement\r\n    content: HTMLElement\r\n    segments: Map<ListItemID, HTMLElement>\r\n}\r\n\r\ntype Actions = {\r\n    scrolled: React.SyntheticEvent<HTMLDivElement>\r\n    touchStarted: React.TouchEvent<HTMLDivElement>\r\n    touchMoved: React.TouchEvent<HTMLDivElement>\r\n    touchEnded: React.TouchEvent<HTMLDivElement>\r\n    heightUpdated: ListItemShape\r\n}\r\nconst actionsFilter: Pipes<Actions> = {\r\n    scrolled: Pass,\r\n    touchStarted: Pass,\r\n    touchMoved: Pass,\r\n    touchEnded: Pass,\r\n    heightUpdated: Pass\r\n}\r\n\r\nexport const classes = sharedInstance.createStyleSheet({\r\n    container: {\r\n        position: 'relative',\r\n        display: 'block',\r\n        'overflow-x': 'hidden',\r\n        'overflow-y': 'scroll',\r\n        'overflow-anchor': 'none', // https://stackoverflow.com/questions/42205462/disable-chromes-scroll-preserving-feature\r\n        'scroll-behavior': 'auto',\r\n        '-webkit-overflow-scrolling': 'touch',\r\n        contain: 'strict',\r\n        'will-change': 'transform', // https://bugs.chromium.org/p/chromium/issues/detail?id=514303\r\n        '-webkit-font-smoothing': 'subpixel-antialiased'\r\n    },\r\n    content: {\r\n        position: 'relative',\r\n        display: 'block',\r\n        contain: 'strict',\r\n        'will-change': 'transform, height'\r\n    },\r\n    segment: {\r\n        display: 'block',\r\n        'will-change': 'top, height'\r\n    }\r\n}).attach().classes\r\n\r\n","// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random\n\nexport function getRandomIntInclusive(min: number, max: number): number {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min; //The maximum is inclusive and the minimum is inclusive\n}","import * as loremIpsum from 'lorem-ipsum'\r\nimport * as React from 'react';\r\nimport {PropsOf} from '../../../react/PropsOf';\r\nimport {ensure} from '../../../utils/ensure'\r\nimport {getRandomIntInclusive} from '../../../utils/getRandomIntInclusive'\r\nimport {Segment} from '../src/Segment';\r\n\r\nexport class SegmentExample extends React.Component<PropsOf<Segment>, State> {\r\n    componentDidMount() {\r\n        this.interval = setInterval(() => {\r\n            if (this.state.type !== 'text')\r\n                return\r\n            const text = loremIpsum({count: getRandomIntInclusive(3, 20)})\r\n            textCache[this.props.id] = text\r\n            this.setState({text})\r\n        }, getRandomIntInclusive(3000, 5000))\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.interval)\r\n    }\r\n\r\n    render() {\r\n        return <div style={{\r\n            display: 'block',\r\n            width: this.props.width,\r\n            backgroundColor: 'white',\r\n            wordWrap: 'break-word',\r\n            wordBreak: 'break-all'\r\n        }}>\r\n            <div>{this.props.id}</div>\r\n            <br/>\r\n            {\r\n                this.state.type === 'text'\r\n                    ? this.state.text\r\n                    : <img style={{width: this.props.width}} src={this.state.image}/>\r\n            }\r\n            <br/>\r\n        </div>\r\n    }\r\n\r\n    constructor(props: PropsOf<Segment>) {\r\n        super(props)\r\n        const type = ensure(typeCache[props.id], Math.random() > 0.2 ? 'text' : 'image')\r\n        typeCache[props.id] = type\r\n\r\n        let state: State\r\n\r\n        if (type === 'text') {\r\n            let text = textCache[props.id] || loremIpsum({count: getRandomIntInclusive(3, 20)})\r\n            textCache[props.id] = text\r\n            this.state = {type, text}\r\n        } else {\r\n            const image = imgCache[props.id]\r\n                || `https://picsum.photos/500/${getRandomIntInclusive(300, 800)}`\r\n            imgCache[props.id] = image\r\n            this.state = {type, image}\r\n        }\r\n    }\r\n\r\n    private interval: any\r\n}\r\n\r\nconst typeCache: { [id: string]: 'text' | 'image' } = {}\r\nconst textCache: { [id: string]: string } = {}\r\nconst imgCache: { [id: string]: string } = {}\r\n\r\ntype State = { type: 'text', text: string }\r\n    | { type: 'image', image: string }\r\n\r\n\r\n","import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom'\r\nimport ErrorBoundary from 'react-error-boundary'\r\nimport {ListItemID} from '../../../layouts/ListLayout'\r\nimport {InfiniteList} from '../InfiniteList'\r\nimport {SegmentExample} from './SegmentExample'\r\n\r\nconst segmentIDs: Array<ListItemID> = []\r\nfor (let i = 0; i < 100000; i++) {\r\n    segmentIDs.push(i.toString())\r\n}\r\n\r\nexport class Demo extends React.Component<{}, {\r\n    width: number,\r\n    height: number,\r\n    focusOffset: number\r\n}> {\r\n    render() {\r\n        const {width, height, focusOffset} = this.state\r\n\r\n        return <InfiniteList Segment={SegmentExample}\r\n                             {...{width, height, segmentIDs, focusOffset}}\r\n                             onScroll={this.onScroll}/>\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('resize', () => {\r\n            const width = window.innerWidth\r\n            const height = window.innerHeight\r\n            this.setState({width, height})\r\n        })\r\n    }\r\n\r\n    onScroll = (scroll: px) => {\r\n        if (Math.abs(scroll) < 10) {\r\n            this.setState({focusOffset: 0})\r\n        } else {\r\n            this.setState({focusOffset: this.state.height / 3})\r\n        }\r\n    }\r\n\r\n    constructor(props: {}) {\r\n        super(props)\r\n        this.state = {\r\n            width: window.innerWidth,\r\n            height: window.innerHeight,\r\n            focusOffset: 0\r\n        }\r\n    }\r\n}\r\n\r\nconst root = document.getElementById('root')!\r\nReactDOM.render(\r\n    <ErrorBoundary FallbackComponent={({componentStack, error}) =>\r\n        <pre style={{width: window.innerWidth, wordBreak: 'break-all'}}>\r\n            {JSON.stringify(componentStack, null, 4)}\r\n            {JSON.stringify(error, null, 4)}\r\n        </pre>\r\n    }>\r\n        <Demo/>\r\n    </ErrorBoundary>,\r\n    root\r\n)\r\n\r\n"]}