{"version":3,"sources":["..\\..\\..\\typecheck\\existing.ts","..\\..\\..\\utils\\cloneFastBinaryIndexedTree.ts","..\\..\\..\\utils\\ensure.ts","..\\..\\..\\utils\\expandFastBinaryIndexedTree.ts","..\\..\\..\\utils\\nothing.ts","..\\..\\..\\layouts\\ListLayoutImpl.ts","..\\..\\..\\rxjs\\applyMiddleware.ts","..\\..\\..\\rxjs\\createPublishers.ts","..\\..\\..\\rxjs\\createSubjects.ts","..\\..\\..\\rxjs\\createDispatcher.ts","..\\..\\..\\rxjs\\Pipe.ts","..\\..\\..\\typecheck\\isFalse.ts","..\\..\\..\\typecheck\\isTrue.ts","..\\..\\..\\typecheck\\isFunction.ts","..\\..\\..\\utils\\assume.ts","..\\..\\..\\utils\\publishAll.ts","..\\..\\..\\utils\\Pulse.ts","..\\..\\..\\utils\\statics.ts","..\\..\\..\\utils\\forDuration.ts","..\\..\\..\\utils\\nextAnimationFrame.ts","..\\..\\..\\utils\\uniqueID.ts","..\\..\\..\\view\\calcOutline.ts","..\\..\\..\\view\\hasStyle.ts","..\\..\\..\\view\\calcOutlineOrigin.ts","..\\..\\..\\view\\calcTransform.ts","..\\..\\..\\view\\tweenHere.ts","..\\src\\functions\\calcFocusOffset.ts","..\\src\\functions\\calcSegments.ts","..\\src\\functions\\projectScroll.ts","..\\src\\functions\\updateLayoutIfNecessary.ts","..\\..\\..\\react\\measure\\measuring.tsx","..\\src\\MeasuredSegment.tsx","..\\InfiniteList.tsx","..\\..\\..\\utils\\getRandomIntInclusive.ts","SegmentExample.tsx","InfiniteList.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,kBAA4B,KAAkB;IAC1C,OAAO,OAAO,KAAK,KAAK,WAAW,IAAI,KAAK,KAAK,IAAI,CAAA;AACzD,CAAC;AAFD,ACAA,4BDEC,yCCF2D;ADG5D,ACDA,ACFA,qBFG+B,KAAe,UCDH,MAA6B,QCFvB;AAEjD,IFEI,ACDA,IAAM,GDCC,CAAC,ECDI,ECDU,CDCP,GDCC,CAAC,ACDE,ACDkB,EAAE,GFEjB,CAAC,CAAA,OEF+B,oBDCd,CAAC;ADE7C,AGLA,CHKC,GEFG,IDCI,GCDG,aDCa,EAAE,MAAM,CAAC,ACDX,CAAC,KAAK,CAAC,IAAI,KDCgB,CCDV,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,ACHa,CDGZ,CAAC,YAAY,CAAC,CAAC,CAAC,KAAK,CAAA;AFA3E,AECA,ACFA,CDEC,ODCO,MAAM,EAAE,MAAM,CAAC,MAAM,KDA5B,GGFG,MAA6B,EAC7B,aAAqB;ADFzB,AEFa,IDMT,CFAC,CAAC,CAAA,CGNO,OAAO,EDMH,CCNe,EDMZ,ECNgB,CAAA,CFInC,ACEuB,CAAC,KAAK,CAAC,aAAa,CAAC,CAAA;IFEzC,AEDA,IAAI,EFCE,CAAC,OAAO,CAAC,EEDE,IAAI,CAAC,iBFCA,MAAM,CAAC,OAAO,CAAC,CAAC,CAAA;IACtC,IEDI,EFCE,CAAC,IEDG,OFCQ,CAAC,GAAG,MAAM,CAAC,WAAW,CAAC,CAAA;AIT7C,IJWI,AEDA,IAAM,GFCC,MAAM,AEDE,CFCF,EEDK,IAAI,qBAAqB,CAAC,uBEVY;AAC5D,ACEA,ALSA,CAAC,OEDO,MAAM,EAAE,MAAM,CAAC,EGPnB,IHOyB,EGPH,CHOM,CGPJ,KAAe,OHOE,KEVI;AACjD,AJAA,IKII,IHMI,GGNG,MAAM,CAAC,IAAI,CAAC,CHMC,EAAE,GGNG,CAAC,EHME,CAAC,gBAAgB,eFAhD,kBIV6E;AAC9E,AEDA,KJWK,CAAC,CAAA,EGNG,GAAG,CAAC,UAAA,GAAG,ACLmC,QAAqB,QFClC;AACtC,IEDI,AJYA,IGRgB,EHQV,CIZC,AJYA,IGRS,ECJH,CAAC,EJYE,CAAC,CIZC,CAAC,CJYC,CGRF,GAAC,GAAG,ACJK,CAAC,CJYC,CAAC,CGRL,KAAK,CAAC,EHQQ,CGRL,AHQM,CGRL,AHQK,CGRJ,MAAM,CAAC,GAAG,CAAC,CAAC,KAAE,qBDH0B;AAChF,AGLA,ILgBI,IAAI,CIZC,GAAG,CAAC,CJYC,CAAC,MAAM,CAAC,CIZT,GAAG,CJYW,SAAS,CAAC,GKhBD,GLgBO,CEXH,AFWI,EAAE;AER9C,AGLA,IFIoB,CAAkC,CAAC,ECHnC,AJaZ,MAAM,CIbM,AJaL,MAAM,CAAC,EKd2B,CDC3B,AJaG,GIbF,CCD2C,EDCxC,GJaQ,CIbL,AJaM,MAAM,CAAC,CAAA,EIbZ,KAAoB,IAAK,OAAA,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,EAAzB,CAAyB,KAAE;AEJlF,IJqKI,AGjKA,CLcC,IGVI,EEJE,IFII,CAAC,CEJC,CAAC,IAAI,CAAC,GFIN,ED8JQ,AGlKG,CAAC,CFIR,EAAE,IAAI,IAAK,CD8JU,EACjB,IC/JO,GD+JmB,EAC1B,CChKa,AGRW,CHQV,MAAM,CDgKc,AChKb,EDiKrB,ECjKyB,EAAE,IAAI,CAAC,EAAzB,CDiK0B,ACjKD,CAAQ,CDkKxC,AClKwC,cDkKH;ACjK9D,AGRA,ANkBA,CGVC,AHUA,GIfmB,CAA8D,CAAC,EFkK1D,CGjKhB,GAAG,CAAC,UAAA,GHiKyB,AGjKtB,GHiKS,aAAa,CAAI,YIrKS;ACItC,AJFb,AGDA,ANAA,QEqKyB,AKlKZ,AFAO,CDAX,GGAQ,GAAG,AHAL,ACAK,CDAJ,IFkKgB,GAAP,EKlKD,AFAF,CDAL,ECAM,EHkKS,AElKX,CFkK8B,AGlKzB,CDAH,GGA0B,AFApB,CDAF,GGA0C,AFApC,CDAD,EDI/B,IIJoE,CHArC,IEHe,EFGT,CAAC,EGAwC,AFAvC,EEA6B,AFA3B,CEAqC,CAAA,AHAlC,CAAC,ECAF,EDAM,CJcjD,CIdmD,IAAI,CAAC,EAAzB,CAAyB,CAAQ,CAAA;AECjE,AFAA,CAAC,OFkKwB,cAAS,GAAT,CIjKrB,QJiK8B,CAAyB,CIjKzB;AFLlC,AIFA,IFSI,ADJgB,CAAwB,CAAC,EHoKpB,AIhKf,QAAQ,CETM,EFSH,GETa,GNyKG,GAAZ,YAAY,CAAqB,GEnKzD,MEGkC,CAAc,UAAU,CAAC,CAAA;IACxD,AETA,INyKqB,CGpKhB,ECIE,AETA,IHKI,CAAC,AGLA,CFSC,CAAC,GETG,GFSG,CAChB,CDLS,AGLS,CNyKa,AI/J9B,AEViB,GNyKD,AGpKJ,EAAE,ECKP,EAAE,ADLS,IAAK,IHoKO,CAAuB,EGpK9B,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,ICKlB,ADLsB,CCKR,ADLS,EAAzB,CAAyB,CAAQ,CAAA,GCKT,CAAC,EAAC,EAClD,iCAAe,CAAc,QAAQ,EAAE,UAAU,CAAC,CACrD,CAAA;AACL,ADPA,AGLA,ACFA,CHcC,ADPA,AGLA,GNyKM,CAAC,WO3Ke,KAAU;AHMjC,ADHA,AGHA,INSkB,AORd,OAAO,KAAK,KAAK,IPQG,AORC,CDCxB,ACDwB,EPQrB,UAAqB,EGFxB,ICOA,CJL0D,EAClC,aAAuB,EACvB,OAAgD;AQXzE,ADEA,CAAC,OPQwB,YQVE,CAAM,iBRUR,EAAA,mBAAuB;AOVhD,ICCI,IRUqB,GQVd,OAAO,CAAC,KAAK,ADCvB,QPSwB,EAAA,AQVS,CAAA,aRUkC,GAAG,EAAE;AQTzE,CAAC,ORUO,IAAM,SAAS,GAAG,IAAI,GAAG,EAAE,CAAA;AQZnC,ACAA,QTaQ,OAAO,CAAC,OAAO,CAAC,QQXvB,ERWwB,EAAE,EAAE,KAAK,OSbe;AACjD,ACDA,YVcY,IAAI,IUd6B,KVcpB,AUd4B,CVc3B,CUd6B,EVc1B,CAAC,EAAE,CAAC,EUd0D,mBDCzC;AAClD,ICDI,MAAM,CAAC,IAAI,CVcC,AUdA,MVcM,EUdE,CAAC,CVcC,AUdA,OAAO,CAAC,GDCD,OCDC,GAAG,GVca,CAAC,AUdV,EVcY,CAAC,CAAA,GUdb,QAAQ,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAzB,CAAyB,CAAC,CAAA;ACAxD,AFKX,ACJA,CAAC,OCDU,IXeC,CWfI,GAAU,IAAI,CXeT,AWfS,CXeR,GAAG,CAAC,EAAE,EAAE,KAAK,CAAC,CAAA;AUhBpC,IDM0B,ITWlB,CAAC,CAAC,CAAA,SSX+E,YCJxF;AEFD,QZmBQ,CSbkB,GTaZ,OSb2E,EAA/D,KTaE,GAAG,IAAI,SSbsD,EAA/D,IAA+D,EGNxC,iBZmBO,CAAC;AYlBzD,QHK0B,ITcd,gBAAgB,EAAE,KSd2D,EGLxD,MZmBU;AYjB3C,YZkBY,KYlBY,CZkBN,EAAE,EYlBwB,KZkBjB,CAAC,MAAM;ISd9B,AGHA,IHGM,CTeD,CAAC,CAAA,AYlBC,CHGG,GAAG,CGHD,CAAC,IHGM,CAAC,CGHD,CAAC,IHGM,CAAC,KGHN,CHGY,EGHT,CHGY,CAAC,AGHX,CHGY,CAAA,EGHR,IAAK,OAAA,GAAG,GAAG,IAAI,EAAV,CAAU,EAAE,CAAC,CAAC,CAAA;AACrD,CAAC,GHGG,ITgBI,AShBE,ITgBI,MShBM,GAAG,GTgBG,GAAG,AShBA,CAAC,GTgBG,EShBE,CTgBC,AShBA,CAAC,CTgBC,CAAA,AShBC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;AGLzD,IHMI,ITgBI,AShBA,CAAC,MTgBM,CAAC,OAAO,CAAC,EYpBvB,MHIkB,CAAC,CTgBK,GShBD,CAAC,ETgBM,EAAE,AShBJ,ETgBM,QShBI,CAAC,MAAM,GAAG,CAAC,IAAI,UAAU,CAAC,IAAI,CAAC,sBAAW,CAAC,EAAE;AGFpF,QHGQ,ITgBI,GShBG,CTgBC,CAAC,IYnBW,KZmBF,AYnBsB,CZmBrB,GAAG,CAAC,CShBT,CTgBW,AShBX,CTgBY;Aa1BlC,IDQI,CHGC,GGHG,KAAK,CAAC,EZmBE,IYnBI,CCRc,Eb2BZ,EYnBG,CAAC,GCRoB;IJY1C,IGHI,GHGG,CTgBC,GShBG,AGHA,SZmBS,CAAC,GAAG,CAAC,EAAE,CYnBT,CZmBW,AYnBX,MZmBiB,CAAC,CAAA,MShBrB,UAAU,GAAC;AAC9B,AKbA,CLaC,GGHG,OAAO,CZmBC,MYnBM,CAAC,KAAK,CAAC,CZmBC,CAAC,CYnBC,KAAK,CAAC,IZmBI,CAAC,CYnBC,CAAA,OZmBQ,CAAC,GAAG,CAAC,EAAE,CAAE,EAAE,MAAM,CAAC,CAAA;ASvBlE,AGKA,AGXA,CHWC,OZmBO,CAAC,CAAC,CAAA,Ca7BN,YJYH,UIZU,IAAI,OAAO,CAAO,CEDkB,SFCjB,IAAI,IAAK,OAAA,UAAU,CAAC,IAAI,EAAE,QAAQ,CAAC,EAA1B,CAA0B,CAAC,EAAA;ADMlE,AGNA,ACDA,QhBgCQ,OAAO,GgBhCG,ChBgCC,cAAc,CACrB,AYtBX,aZsBwB,mBACT,OAAO,GACX,SAAS,EACT,YAAY,EACZ,cAAc,CACjB,CAAA;AYzBT,IZ0BI,AerCA,CfqCC,MerCM,CDDP,GCCW,CAAC,MAAM,EAAE,CAAC,CHWQ,KAAoB,EGXpB,CDDtB,ACCuB,EAAE,CAAC,CDDtB,ACCuB,ODDhB,CAAC,CCCwB,CAAC,CAAC,CAAC,MDD3B,OAAO,IAAI,OAAA,qBAAqB,CAAC,OAAO,CAAC,EAA9B,CAA8B,CAAiB,EAAC;AEClF,CHAC,GbuCU,AY3BP,IAAM,EGXA,CAAC,IHWM,AGXF,GHWK,CGXD,EAAE,ACDO,CDCN,CAAC,CCDiB,KJYT,CAAC,AGXF,EAAE,CAAC,EHWI,CZ2BnB,AY3BoB,CAAA,EZ2BlC,EetCqC,CAAC,EAAE,CAAC,CAAC,GfsC3B,EAAc;AazCjC,AEIA,CAAC,GHWG,AIZA,IhBuCI,AY3BA,AIZE,IhBuCE,AgBvCE,CJYD,CAAC,CIZG,ChBuCD,CAAC,CgBvCG,CAAC,CJYD,CZ2BC,IY3BI,CZ2BC,AY3BA,CZ2BC,EAAE,CY3BC,ICb7B,MGCyC,EAAE,CAAA,SJYH,CAAC,OAAO,CAAC;AGdlD,CDCC,GEGU,IJWH,AIXG,IhBqCoB,GY1BhB,IZ0BuB,OgBrCtB,EDDf,ACCiB,IJWI,CAAA,GZ0BuB,CAAA,WgBrCrB,CAAQ;AFLhC,IFiBI,AIXA,IJWM,AIXA,ChBoCqC,AgBpCpC,GAAG,EJWE,EIXE,CJWC,AIXA,IAAI,CJWC,AIXD,CJWE,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,EEfvC,KFeuC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC,EAA7C,CAA6C,CAAC,CAAA;IAClF,AIXA,IhBoCI,AgBpCE,CAAC,EJWA,CZyBG,AgBpCA,IAAI,ChBoCC,AYzBF,AIXE,CJWD,CAAC,CZyBG,AYzBF,AIXE,CJWF,AIXE,GhBoCI,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAA;AYxB5C,AKnBA,CLmBC,GIVG,IhBmCI,GgBnCG,ChBmCC,CgBnCA,CAAC,GAAA,EAAE,CAAC,GAAA,EAAE,KAAK,IhBmCA,CAAC,EgBnCD,EAAE,ChBmCI,CAAC,EAAE,EgBnCD,KCTkB,GDSlB,EAAC,CAAA;AJIhC,AIHA,ACRA,CDQC,WhBkCiC,MiB1CT,CjB0CgB,IiB1CI,ajB0CG,CAAA,OYzB/C;AAED,AInBA,ICCI,KjByC8C,EiBzCvC,CAAC,CAAC,KAAK,KLkBY,AKlBP,KLkB2B,CKlBrB,IAAI,CDOhC,ICPqC,KAAK,EAAE,IAAI,sBAAW,CAAC,KAAK,CAAC,CAAC,CAAC;ACHrE,ADIA,CAAC,GLkBG,IZuBI,AYvBE,IZuBI,GYvBG,GZuBG,AYvBA,GZuBG,IAAI,CAAC,GYvBG,CAAC,KAAK,CAAC,CAAA,GZuBI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA,mHkB7CU;AAChE,ADCA,ILqBI,IZuBI,AYvBA,IZuBM,CYvBD,CAAC,IZuBM,EYvBA,CZuBG,IAAI,AYvBF,CZuBG,AYvBF,EKnBzB,ELmB6B,UZuBY,CAAC,UAAU,CAAC,AYvBb,CAAC,IZuBiB,CAAC,CAAA,CYvBX,CAAC,uGMtBS;AAC3D,QlB6CQ,AYvBA,OZuBO,AYvBA,EZuBC,EAAE,IAAA,EAAE,KAAK,EYvBH,CAAA,IZuBG,EAAE,MAAM,QAAA,EAAE,MAAM,QAAA,EAAC,CAAA,sFkB7CW;AACrD,IlB6CI,AYvBA,CZuBC,MYvBM,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,MMtBE,INsBF,GAAG,IAAI,OAAA,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,OAAO,CAAC,EAAvB,CAAuB,CAAC,CAAC,CAAA;AACjE,AMtBA,CNsBC,GZwBU,mCAAU,GAAjB,GkB9CqC,OlB8CnB,KAAa;AY7BnC,AMfA,QlB6CQ,IAAI,IAAI,CAAC,CkB7CC,GlB6CG,KAAK,CAAC,EAAE,SYzB5B;AMnBD,YlB4C+B,OAAO,QkB5CJ,GAAY,MlB4CD,CAAA;IkB3CzC,IAAI,ClB2CuC,MkB3ChC,GAAY,yBAAW,CAAC,GAAG,CAAC,CAAA;IAEvC,IlB0CI,AkB1CE,IlB0CI,EAAE,GAAG,GkB1CG,ClB0CC,CAAC,CkB1CC,MlB0CM,AkB1CA,ClB0CC,AkB1CA,KlB0CK,CAAC,CAAA,SkB1CU,CAAC,GAAG,CAAC,CAAC,SAAS,CAAA;ACV/D,IDWI,IlB0CI,AkB1CA,IlB0CI,ekB1CI,CAAC,MlB0CM,CAAC,EAAE,CAAC,EAAE,AkB1CA,CAAC,EAAE,+GCXiB;AACjD,QDWe,IlByCgB,AkBzChB,OlByCuB,MkBzCtB,EAAE,ClByC6B,CAAA,WkBzC5B,EAAE,qBAAK,EAAE,uBAAM,CAAW,yECXY;AACzD,QDWQ,ClBwCyC,GkBxCnC,SAAS,GAAG,kFAAU,CAAC,YAAY,CAAC,CAAA,yCCXO;AAEzD,ACJA,QpBsDQ,AkBxCA,IlBwCM,AkBxCA,MlBwCM,EkBxCE,ClBwCC,EkBxCE,ACVK,EnBkDH,CAAC,CmBlDe,EAAE,EAAW,SnBkDd,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA,8CkBxCtB,CAAC,SAAS,CAAC,CAAA,+CEdU;AACrD,ACDA,IFKI,InBkDI,AkBxCM,ACVJ,InBkDI,AkBxCA,ICVI,EnBkDE,CmBlDC,EnBkDE,IAAI,CAAC,GmBlDN,IAAa,OnBkDO,CAAC,UAAU,AqBvDN,CrBuDO,KAAK,CAAC,CAAA,qGoBtDR,wBFewB,EAD7D,eAAO,EAAE,mBAAW,CACyC;AEb5E,ACDA,QrBsDQ,AkBvCA,ACXA,OnBkDO,AkBvCA,ACXA,EnBkDC,CkBvCE,ClBuCA,IAAA,EAAE,AqBtDY,KrBsDP,MqBtD6B,CrBsD7B,CqBtD+B,CrBsD7B,MAAM,OqBtDyC,CrBsDzC,CoBrDiB,CpBqDf,MAAM,QAAA,EAAC,CAAA;AoBpD1C,AEHA,ItBwDI,AqBtDA,CrBsDC,MqBtDM,CHeC,ACXA,CDWC,ACXA,EDWE,ACXA,IAAI,CAAC,CAAC,CDWC,CAAC,CAAC,ACXA,EEJP,CAAK,CFIM,CAAC,KAAK,GAAG,CEJJ,EFIO,AEJL,YDCa,ECDC,GAAG,CAAC,CAAC,ACFE,CDEF;ADEtD,ACDA,ACDA,CDCC,GrBuDU,AsBxDL,QJgBM,ACXA,AGLE,CJgBD,ACXA,EDWE,ACXA,AGLE,EAAE,CAAA,CHKA,CAAC,CAAC,CDWC,CAAC,CAAC,ACXA,IAAI,CAAC,MAAM,GAAG,GAAG,GnBmDf,GAAtB,UAAuB,IAAY,EAAE,EAAU,CoBtDW;AAC9D,ACJA,ACGA,ACJA,QvB2DQ,CmBnDC,CAAA,EnBmDG,AkBxCA,IlBwCI,CAAC,AkBxCA,EAAE,ElBwCE,CsBvDQ,CJeN,CAAC,ElBwCE,CAAC,AkBxCA,CAAC,AIfW,CtBuDV,CsBvDY,OAAW,EJeb,AIdV,CJcW,CAAC,CGhBxC,EHgB2C,CIdL,CFAG,CEAD,IJcU,CAAC,CAAC,AIdM,CJcL,KKnBI;AHO1D,AGNA,IJQI,AGHA,CHGC,CAAA,EGHK,ItBqDoB,AkBvClB,IIdM,EJcA,ClBuCmB,AsBrDS,CJc1B,ClBuCmB,AsBrDS,CtBqDT,AsBrDS,EJcxB,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,GAAG,AEbJ,MGNM,CLmBK,CAAC,CAAC,CAAC;AEZvD,AGLA,ACHA,ILUI,AGFA,IHEM,AGFA,CtBmD8B,AkBtC/B,CAAA,MIbS,EHEE,CGFC,EHEE,EIPO,EDKH,CAAC,GHEG,AIPS,CJOR,CIPU,GJON,CAAC,CAAA,CGFE,CAC/B,IAAI,ACN6C,CDM5C,CCN8C,EDM3C,CACJ,CCP+D,EAAE,CDO7D,CAAC,ACP0E,GDOvE,CACJ,CFHqC,EIRE,GFWjC,GAAG,MAAM,EACf,MAAM,GAAG,OAAO,CACnB,EACD,CAAC,CACJ,CACJ,CAAA;AFPL,AIRA,ILUI,AGMA,ACbA,CLkBC,GlBsCG,AmBjDE,AGMA,ACbA,IvBwDI,AuBxDA,GDaG,ACbA,CJOC,EGME,CHNC,AIPA,CvBwDC,AuBxDA,GvBwDG,CsB3CC,CAAC,EHNE,CAAC,EAAE,CAAC,AIPA,CJOA,AIPC,IDaI,CAC9B,CtB0CuB,AuBxDS,CvBwDU,EsB1CtC,ACd+B,CDc9B,CtB0CyC,CAAC,CsB1CvC,CACJ,GFViC,CEU7B,CAAC,AElB8B,CDGO,CAAC,CvBwDU,AsBzC7C,ACfmC,CvBwDW,AsBxClD,ItBwCsD,CAAC,CsBxCjD,CtBwCmD,EsBxChD,EtBwCoD,CAAC,GsBxC/C,GAAG,ItBwCsD,CAAC,CAAC,AsBxClD,CtBwCoD,CAAC,AsBvC7E,CtBuC6E,KsBvCvE,GAAG,MAAM,GAAG,OAAO,CAC5B,EACD,MAAM,CAAC,WAAW,CACrB,CACJ,CAAA;AFbL,AIRA,INoBI,ACXA,AGaA,ACrBA,IvBwDI,AmBhDE,AGaF,ACrBE,GLmBC,ClBqCG,AuBxDA,EJQE,CIRC,EJQE,CnBgDC,AkBrCF,CAAA,AEXd,EpBgDmB,KoBhDC,CEaR,CFZZ,AEYa,ECrBM,CAAC,CHS6D,CIV7C,CJWpC,CGVwB,CvBwDC,AsBnCJ,CtBmCuB,AsBnCtB,ACrBI,IvBwDsB,AsBnCtB,CtBmCuB,AoB9CY,CIXH,CJY1D,CIXoC,EDAV,GHWG,CGXC,CvBwD6B,CAAC,EAAE,AuBxD5B,CvBwD6B,EAAE,EsBnC/B,CAAC,AErBkD,CxBwDhB,AuBxDnC,CvBwDoC,AwBvDlC,CDDA,CAAC,GDqBK,CAAC,CEpB8B,CFoB5B,CCrBD,CvBwDoC,AuBxDnC,CvBwDoC,GuBxDhC,CvBwDoC,AuBxDnC,CvBwDoC,CuBxDlC,CAAC,EvBwDqC,AuBxDxD,CAAmB,CAAC,CvBwDuC,AuBxDvC,CvBwDwC,CAAE,CAAC,CAAA,OmBhDzE,CACpB,gFAAS,CAAC,QAAQ,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,EAC/D,wEAAK,CAAC,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,EAAE,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,CACxD,CAAA;ADSL,CAAC,GCPG,ACJA,AGRA,ACCA,IxBuDI,AsBnCA,ACrBA,ACCA,GLWG,CnB4CG,AsBnCA,KHTG,AKXA,CLWA,CnB4CI,CwBvDD,CFoBG,CtBmC0B,EAAE,AsBnCzB,CtBmCyB,AoBhD/C,EAAA,CEa0B,CAAC,CCrBZ,ACCW,CDDV,ACCU,GFoBM,CAAC,ACrBb,CAAC,IAAI,GDqBgB,CFbsB,AEarB,KAAK,EFbuB,CEapB,GFbwB,KEahB,CAAC,CFbe,AGRtC,CAAC,CDqByB,GCrBrB,CAAC,CHQuC,EAAP,CAAO,AEaX,CAAA;AJrB1E,ACaA,CAAC,GCJG,AINA,IxBsDI,AsBnCA,ACrBA,ACEE,IFmBI,CtBmCD,EuBxDE,EvBwDE,CAAC,CsBnCG,EtBmCA,AuBxDA,CDqBG,ACrBH,GCEM,CFmBC,CAAC,CEnBC,CxBsDD,AoBhDzB,CpBgD0B,AsBnCE,CFb5B,AEcQ,ItBkCuB,AsBlCnB,AEpBqB,CFoBpB,AEpBqB,CxBsDD,CAAC,EsBlCjB,AEpBqB,CFoBpB,AEpBqB,CxBsDD,GoBhDuB,CFUhE,ElBsC+C,AsBlCnB,CtBkCoB,AsBlCnB,EEpBa,GxBsDW,AsBlCnB,EtBkCqB,CAAC,AsBlCnB,AEpBW,ExBsDU,EAAE,IsBlCf,CAAC,GAAG,QAAQ,EAC9C,MAAM,CAAC,IAAI,GAAG,CAAC,CAClB,CAAA;AH5BT,ICaI,AGRA,IDwBI,ACxBE,ACEF,IxBsDI,CsBhCC,EEtBL,EFsBS,EtBgCE,CAAC,CwBtDN,CFsBQ,AEtBP,ExBsDS,CAAC,AsBhCA,EFhBrB,CINiB,CxBsDQ,AoBhDzB,AGR2B,CvBwDD,EuBxDI,CCER,CFsBQ,EAAE,EHbnC,AIXuC,CHQlB,CpBgDkB,AoBhDjB,CpBgDkB,AsBhCA,ACxBE,CvBwDD,AoBhDjB,CpBgDmB,AoBhDlB,CpBgDmB,CAAA,AoBhDjB,AEgBiB,CFhBhB,EAAE,AINC,CJMA,AINC,CJMA,EEgBmB,ACxBE,EDwBA,CCxBG,GCEf,CFsBiB,ACxBE,ACElB,CDFmB,CDwBD,EAAE,GCxBK,ACElB,CDFkB,ACEjB,MAAM,CAAC,EAAE,CAAC,EAAE,UAAA,EAAE,IAAI,OAAA,EAAE,CAAC,MAAM,EAAT,CAAS,CAAC;IDD3E,ACCI,CAAuE,CAC1E,CAAA,CDFK,CvBwDD,GsBhCG,QAAQ,CAAC,IAAI,CAAC,GCxBK,GDwBC,ACxBE,CDwBD,ACxBE,UDwBQ,CAAC,KAAK,CAAE,CAAC,CAAA,ECxBI,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAA;IACjF,ACEA,IxBsDI,AwBtDA,CFsBC,ECxBE,IvBwDI,AuBxDA,CAAC,MvBwDM,AuBxDA,CvBwDA,EuBxDG,ACEA,CDFC,CCEC,UDFU,GAAG,qBAAqB,CAAC,CAAA;AAC9D,CAAC,GvBwDG,CAAC,AsBhCA,GEtBG,SAAS,GAAG,SAAS,CAAC,KAAK,EAAE,CAAA;ADVrC,IvBkEW,AsBhCP,IEvBI,GFuBG,MEvBM,CAAC,CFuBC,CAAA,IEvBK,CAAC,OAAO,CAAC,CAAA,IDHhC,EvB0DqB,GAAlB,UAAmB,QAAY;AsB/BnC,CAAC,IEvBI,GxBuDG,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,EAAE;AsBlE7B,IEaI,IAAI,IxBqDuB,OAAO,CoBpD5B,OIDM,CxBqD+B,AwBrD9B,CxBqD8B,CoBpD3B,GAAG,GEoBtB,QErBgC,CAAC,EAAE,KJCL,EAAE,CAAA;QIAzB,CxBoDyC,QwBpDhC,GJCb,AIDgB,QJCR,CAAC,AIDgB,CAAC,EJCd,CAAC,EIDkB,EAAE,CAAA,EJCb,EAAE,UAAU,CAAC,CAAA;QpBoD7B,AwBpDA,IxBoDI,KAAK,AwBpDA,CAAC,ExBoDE,AoBlDV,EIFY,CAAC,CxBoDC,CAAC,EoBlDR,GAAG,SpBkDmB,AwBpDA,CxBoDC,AwBpDA,CAAA,SxBoDU,CAAC,IoBlDpB,CAAC,GpBkD2B,CAAC,CAAA,EoBlDrB,CAAC,CAAA;KI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M3Be,CAAC,ECfM,GDeD,CAAC,EAAE,CAAA,MDmBd,ILQJ,CKRS,CAAC,SAcf;AE9CT,I3BwFW,QyBtDC,ACnBJ,IAAI,CDmBI,CAAC,ELOb,MKPqB,CLOd,CAAC,CKPgB,IAAI,ALOf,CpB+CD,AoB/CE,CM1BE,CAAC,C1ByEjB,I0BzEqB,CAAC,EN0BE,GpB+CX,AoB/Cc,AM1BA,CAAC,KN0BK,CAAA,EOzCgB,MDeP,C1ByER,A0BzES,EAAE,EDmBH,CAC9B,UAAC,OAA8B,EAAE,QAAwB;AEjCzE,Q3BuFc,IAAA,IyBrDM,ACpBR,IDoBc,ALMtB,CpB+CkF,A0BzEtE,CAAC,C1ByEF,GyBrDiB,CCpBV,CN0BV,AM1BW,CDoBY,ALMtB,MAAM,CKNuB,ALMtB,CKNuB,CAAC,CAAC,CAAC,ECpBT,C1ByEf,AoB/CK,AM1BW,CN0BV,CpB+CJ,AoB/CI,AM1BW,EAAE,IDoBgB,ACpBhB,CDoBiB,CElCT,ADcN,KDoBqB,CAAA,ACpBf,QAAA,E1ByEhB,A0BzEiB,CAAC,C1ByEhB,A0BzEgB,8B1ByEJ,EAAE,gCAAa,EAAE,kCAAc,CAAQ;A2BtFtF,Q3BwFQ,K0B1EC,GDoBW,IAAM,IzBsDF,CyBtDO,EzBsDJ,CyBtDO,OAAO,CAAC,CAAC,CAAC,CAAC,GzBsDZ,CAAC,C2BzEX,MFmBiC,CAAC,KAAK,CAAA,EzBsDZ,EAAE,aAAa,CAAC,CAAA;A2BxElE,Q3ByEQ,A0B1EJ,CAAC,CAAA,E1B0ES,IyBtDM,IAAI,EzBsDA,iByBtDQ,CAAC,EzBsDF,GyBtDM,CAAC,GzBsDA,CAAC,CAAA,AyBtDI,CAAC,YEnBgB,EFmBF,CAAC,EAAE;AGzC7D,ADuBA,Q3ByEQ,A0BvEA,I1BuEM,C0BvEF,CAAC,MDiBW,CCjBJ,G1BuEM,A0BvEH,CDiBK,CAAC,CzBsDA,IAAI,AyBtDC,CAAC,EzBsDC,CAAC,SAAS,CAAC,A0BvEf,C1BuEe,AyBtDE,ACjBhB,CDiBiB,GEnBJ,CDER,CAAC,CDiBiB,CAAC,CAAA,ICjBX,CAAC,CAAA,kCEzBgD;ADwB/F,Q3ByEQ,IAAM,KyBtDO,UzBsDQ,GAAG,IAAI,GAAG,CAAC,YAAY,CAAC,CAAA,K2BzEX;ACtB1C,ADwBA,CPoBC,GMpBG,CAAC,G1BwEG,IAAM,IyBtDM,IAAI,SzBsDO,E4BhGO,C5BgGJ,E4BhGe,EAAE,GH0CnB,AG1C8B,CH0C7B,KAAI,CAAC,KAAK,CAAC,WElBe,EFkBF,CAAC,EAAE,mBzBsDA,CAAC,cAAc,CAAC,CAAA;AoBrF5E,AOcA,ICxBI,AFMA,GENG,C5BiGC,E4BjGE,IAAI,C5BiGC,A4BjGA,I5BiGI,A4BjGA,CH0CK,AG1CJ,GAAG,CAAC,CH0CI,AG1CH,CH0CI,ILC5B,CKDiC,CAAC,CzBuDF,CACrB,E0B5FF,GAAN,MDoC4C,CAAC,IzBwDrB,CyBxD0B,CzByD1C,AyBzD2C,CAAA,SzByDjC,EACV,A2B5EgD,Y3B4EpC,EACZ,eAAe,EACf,iBAAiB,CACpB,CAAA;AoB1DT,AOpBA,AE5BA,I7B2GI,A4BvGA,AR4CE,CpB2DD,E4BvGE,CFMO,EENJ,ER4CI,AMtCA,EENA,CAAC,AR4C6B,EKFvB,ELE2B,CQ5C5B,CAAC,GAAG,CAAC,CAAC,AR4C6B,CMtCjB,CNsCmB,CAAA,AMtC1C,UAAE,CCkBoB,AE5BI,CHUtB,gBAAK,CAAc;ACoBtC,AE7BA,I7B4GW,A4BxGP,IFMW,GENJ,CH0CK,ACpCD,CDoCE,CACJ,CAAA,AG3CE,CAAC,KAAK,CAAC,IAAI,CAAC,ECJI,I7B4GhB,A4BxGkB,CFMX,CENa,AFML,C1BkG1B,E4BxGkC,CAAC,GAAG,GAAG,C5BwG7B,E4BxGgC,GAAG,CAAC,CAAC,ADyBJ,CCzBK,E5BwGD,C4BxGI,GAAG,CAAC,CAAC,uDAAuD;AACrH,ADyBA,AG/BA,ADGA,CDGC,O5BwGa,A0BlGN,I1BkGM,G0BlGC,M1BkGmC,EAAnC,M8B9GgB,MJYf,OAAO,IAAC,EAAE,AGTkB,EHShB,CCmBoB,CDnBlB,EAAE,C1BkGJ,EAAE,E0BlGO,EAAE,KAAK,EAAE,cAAc,EAAE,G1BkGpB,CAAQ,A0BlGgB,CAAC,YAAY,GAAG,CAAA;AEVlF,AD8BA,AG/BA,ADGA,IHSI,CAAC,G1BmGG,AyB/DA,CAAC,GzB+DK,YAAY,GAAG,IAAI,GAAG,EAAE,A8B/GD,C9B+GC,Y2BhFQ,KC1B7C,wBCFyE;AF6B1E,AG/BA,ADKA,IHsBA,I1BoFQ,AyBpGA,UzBoGU,CAAC,OAAO,A0BpFzB,C1BoF0B,CyBpGb,GAAN,MzBoGoB,EAAE,EAAE,I2BhFS,C3BgFJ,IAAK,OAAA,I8B/GM,Q9B+GM,CAAC,GAAG,CAAC,EAAE,EAAE,KAAK,CAAC,EAA3B,CAA2B,CAAC,CAAA;A2B/EtE,ADLA,AI1BA,CJKA,AAqBC,CArBoC,EGDD,GHCM,C1B2GlC,A0B3GmC,I1B2G7B,AyBrGF,SCN4C,GAqBvD,G1BsF4B,GAAG,IAAI,GAAG,EAAE,CAAA,K2BjFA,CE3BmC,ECJhC,gBLWoB;AEqBhE,AD3Ba,AIHb,IDoCI,I7B2EI,IAAM,AyBvGN,gBI4BQ,C7B2Ee,AyBvFtB,GzBuFyB,C6B3EK,G7B2ED,M0B5GV,KC2Be,IG9BI,mB9B+GY,CAAC;A2BhF5D,ADDA,AI5BA,IJ4BM,AI5BA,IDkCF,GHNS,C1BkFD,AyBrGA,ECmBI,AI5BA,ELSE,CKTmB,EAAE,CAAA,ADmC/B,CJ1Be,GAAe,GCmBR,C1BkFF,A0BlFG,E1BkFD,AyBrGc,CAAC,MAAM,CACnC,AIyBF,EJzBI,EACF,CzBmG2B,A6B3ExB,CHP4B,AGO3B,CHP4B,CDjB5B,CAAC,KAAK,CEkBuB,AEsB5C,CJvCW,EAAC,GAAG,EAAE,UAAC,EAAO,IAAK,OAAA,KAAI,CAAC,SAAS,CAAC,EAAE,CAAC,EAAlB,CAAkB,EAAC,CAClC,CAAA;AEiBpB,AG7BA,IJ4BI,CI5BC,GJ4BG,AGOA,CCnCC,CJ4BC,AI5BA,E9B8GE,AyBjGA,AIsBE,CCnCD,CAAC,EAAE,ADmCE,CCnCD,C9B8GC,CyBjGC,AIsBE,C7B2ED,A8B9GA,ILaI,CAAC,CKbC,EAAE,CAAC,C9B8GC,CAAC,A8B9GA,EAAE,CDmCN,CAAC,E7B2ES,IyBjGI,CAAC,CAAA,AEgBH,CEMF,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAA;AFLxF,IG7BI,IJ4BI,AGOA,C7B2EC,CAAC,CAAA,CyBjGE,EKbE,CJ4BC,AI5BA,EJ4BE,AGOA,CAAC,CJtBC,AKbA,CAAC,CAAC,CAAC,CDmCC,CJtBC,ACeA,AGOA,CJtBC,CIsBC,CAAC,GCnCG,ADmCA,ECnCE,CAAC,CAAA,ADmCC,CAAA,KJtBM,CAAC,CAAA,KEgByB;AAClE,CG7BC,O9B8GO,A0BlFA,AGQA,IJtBI,AIsBA,GHRG,EAAE,AGQO,C7B0EN,A6B1EM,C7B0EL,AyBhGA,KAAK,CAAC,CzBgGC,A0BlFA,C1BkFC,UAAA,CyBhGW,CzBgGT,AyB/Fb,SAAS,EACT,AEa8B,KFbzB,EACL,IAAI,CAAC,KAAK,CAAC,QAAQ,CACtB,CAAA;AEYb,AG5BA,QLiBQ,ACUA,AGSA,CJnBC,GzB4FG,A6BzEA,EHTE,E1BkFI,A0BlFF,AGSA,KAAK,CHTC,KGSK,E7ByEI,A6BzEF,G7ByEK,YAAY,CAAC,GAAG,CAAC,EAAE,CAAC,CAAA,c2BjFS;AAC/D,IG7B0B,ILuClB,ACXA,I1BkFI,A6BzEA,I7ByEI,A6BzEA,EHTE,EAAE,AGSA,GAAG,KHTK,IGSI,CAAC,GCjC/B,E9B0GyB,A6BzEW,C7ByEV,A6BzEW,EAAE,CJEb,AIFc,GJElC,CIFsC,M7ByEL,CAAC,G6BzEc,CAAC,EAAC,EFRD,GEQM,EAAE,6CAAqB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAC,CAAC,CAAA;AFP/F,IGDI,CJAC,ODWO,AIFA,I7ByEI,AyBvEA,CAAC,CKXD,GDSK,CAAC,C7ByEA,A8BlFG,ELWA,CAAC,CIFC,CAAC,EAAE,CAAC,GAAG,EJEE,EAAE,AIFA,CJEA,AIFA,wBFRqB;AAC3D,CDDC,CAAC,CAAC,KDWK,AKZJ,CLYK,ACXA,EAAE,C1BkFC,A0BlFA,AGSA,KAAI,CAAC,CHTE,CAAA,AIAX,GDSc,GAAG,C7ByEE,CAAC,A6BzEF,G7ByEK,CAAC,A6BzEF,E7ByEI,EAAE,E8BlFtB,ADSgB,EAAE,GCTb,CAAC,ADSgB,I7ByEY,CAAC,C6BzEb,E7ByEgB,A6BzEf,C7ByEgB,A8B5EhD,ADGgC,E7ByEkB,CAAC,CAAC,CAAA,yB2BjFsB;AAC/E,QFWgB,AKtBZ,CDmBK,G7ByEG,U8B5FA,GAAG,I9B4Fc,CAAC,CyBtEL,GAAjB,CKtBQ,M9B4FyB,A8B5Ff,C9B4FgB,EyBtEhB,GAA+B,OzBsEH,CAAC,E2BjFD,C3BiFI,CAAC,EAAE,CAAE,EAAE,aAAa,CAAC,CAAA;A2B9E/E,Q3B+EQ,CAAC,CAAC,CAAA,CyBtEE,AKtBJ,CDkBO,GJIC,AKtBJ,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GLsBJ,AKtBO,CLsBN,CKtBQ,CHaO,CGbL,CLsBN,CAAC,SAAS,CAAC,EAAE;AEP1C,Q3B+EQ,I6B3EI,G7B2EG,CyBvEC,AKtBJ,ADkBM,G7B2EC,CyBvEC,CAAC,AKtBL,ADkBO,CClBN,EDkBS,KJIG,CAAC,AKtBL,CAAC,CDkBQ,C7B2ED,A8B7FN,ADkBQ,C7B4EvB,I6B5E4B,CJID,AIJE,CJID,CIJG,CAAC,EJIA,AKtBN,CLsBO,CKtBL,C9B8Ff,A8B9FgB,EAAC,CAAC,CAAA,GLsBW,CAAC,CAAA,UzByEvC,UAAU,GACd,YAAY,EACZ,eAAe,EACf,iBAAiB,CACpB,CAAA;IACL,A2BtF8B,C3BsF7B,Q8BnGI,GLsBO,GIJG,CJIC,CAAC,SAAS,GAAG,WET8B,MFSvB,AIJQ,CJIR,4CIJ6B,CAAC,GAAG,EAAE,GAAG,CAAG,CAAA;I7BmFtE,A2BxCP,QE1CQ,CJIC,IKvBE,GDmBK,CAAC,KF0CL,AE1CU,CAAC,EAAE,CAAC,CF0CF,EE1CK,E7BkFhB,GAAb,A6BlFkC,CAAA,S7BkFpB,iBAA4C;QAChD,A2BzCV,I3ByCU,AyB9EF,AIJA,IJII,AKvBJ,CDmBI,CAAC,EF0CT,C3BwCuD,A8BrG/C,CAAC,C9BqGF,A6BlFO,GAAG,EAAC,ECnBD,CAAC,CDmBI,CCnBH,KLuBA,AEsCb,AE1CgB,CJIF,CIJI,EJID,CAAC,AEsCb,CAAC,AG7DkB,CLuBJ,AIJG,CCnBG,C9BqGhB,EAAE,E8BrGkB,CAAC,ADmBR,CFuDhC,CEvDiC,CAAA,ECnBY,CAAC,MAAM,GAAG,CAAC,C9BqG5B,C8BrG6B,C9BqG3B,A8BrG4B,CAAA,iC9BqGd,EAAE,cAAI,CAAQ;QAEvD,A2BgDa,CEnIZ,ICnBA,GLuBO,EE+HS,GAAiB,EF/HpB,EzB+EG,A2BgDqB,C3BhDpB,OAAO,CAAC,UAAA,EAAE,M2BgDsB,EAAE,CAAA;QAIvC,AGzJjB,CAAC,CAAA,E9BsGO,CyB/EC,GzB+EG,M2BmDa,G3BnDJ,A2BmDO,C3BnDN,GAAG,CAAC,EAAE,CAAC,2B2BmDe,CAAU,aAAa,CAAC,CAAA;IEtIpE,CAAC,GFuIgB,AGtJb,ILoBI,CKpBA,CAAC,E9BmGG,AyB/EE,GAAG,AKpBH,CHsJS,E3BnDL,AyB/EW,AKpBZ,CHsJS,EFlIM,CzB+EV,WyB/EsB,KAAK,CAAC,OzB+EJ,CAAC,CyB/EY,CzB+EV,CAAC,CAAA,G2BmDR,CAAQ,WAAW,CAAC,CAAA;IEzL9D,I7BuII,A2B0Ga,C3B1GZ,CAAC,CAAA,C8BnGE,ILoBI,CAAC,AKpBA,CLoBC,CKpBC,MAAM,CLoBC,AKpBA,CLoBC,EEyLS,GAAmB,IAAI,AG7MvB,ELoBE,CAAC,GAAG,CAAC,GIxDtB,GAAjB,oBFiPsE,CAAC,CAAC,CAAC,CAAA;Q3BxGrE,A2B9CA,AE3FJ,ICqCQ,CHsDA,CAAC,EFlCG,CAAC,CAAC,AKpBA,EAAE,CLoBC,CAAA,AEkCA,GAAG,AEnFnB,CC6BqB,CAAC,WAAW,2B9BoGH,CAAC,cAAc,EAAE,iBAAiB,CAAC,MAAM,CAAC,CAAA;QACrE,A6BzIA,IJyDI,AEkCA,AGtDA,ADrCA,CAAC,E7ByIE,CAAC,AyBhFA,IzBgFI,C2B9CC,AE3FA,EF2FE,AGtDA,CDrCC,CCqCC,CAAC,C9BoGlB,I2B9CuB,CAAC,E3B8CjB,CyBhFS,AIzDW,CJyDV,AIzDW,GJyDR,CAAC,EAAE,GEkCc,CAAC,KAAK,CAAC,C3B8C5B,iBAAiB,GAAC;QAClC,C8BpGC,CAAA,EHsDG,AE3FA,IJyDI,AIzDA,GF2FG,CFlCC,CAAC,AEkCA,AE3FD,CAAC,G7ByII,CAAC,C6BzIA,CAAC,CJyDE,AEkCA,CFlCC,AEkCA,EE3FC,C7ByIE,CAAC,GyBhFG,AIzDD,CJyDE,GAAG,CAAC,CAAA,AEkCC,AE3FD,C7ByIP,A2B9CS,E3B8CP,EAAE,C2B9CU,CAAC,G3B8CN,IAAK,OAAA,SAAS,CAAC,GAAG,CAAC,EAAE,EAAE,KAAK,GAAG,IAAI,CAAC,EAA/B,CAA+B,CAAC,CAAA;IAC7E,CAAC,O2B9CO,IFlCI,AIzDA,IJyDI,AEkCA,CFlCC,CEkCC,CE3FA,GF2FI,GAAG,CFlCC,CEkCyB,EFlCtB,GAAG,CAAA;IzBkFzB,A8BtGP,CAAC,IHuDI,CAAA,EE3FG,CJyDC,GIzDK,IAAI,GAAG,UAAU,CAAC,C7B0InB,C6B1IoB,E7B0IjC,G6B1IsC,EAAE,K7B0I1B,SAAuC,+B6B1IQ,CAAC,CAAC,EAAE,EAAE,CAAC,EAAC,CAAC,CAAA;ICKtE,I9BsIU,AyBjFN,AEmCA,CFnCC,GzBiFK,A2B9CA,AE5FF,MF4FQ,G3B8C0C,A2B9CvC,AE5FF,CAAC,C7B0IP,E8BtIL,EDJgB,CCItB,ADJuB,KAAK,CAAC,EAAE,CAAC,GAAG,IAAI,CAAA,E7B0InB,EAAE,G2B9CW,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU,EAAE,C3B8CzB,EAAE,C2B9C2B,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAA,O3B8CtC,CAAQ;QAEtD,AyBlFJ,AEmCI,AGxFM,IHwFA,AGxFA,ADJF,K7B2IK,A6B3ID,C7B2IE,AyBlFb,AIzDY,KF4FQ,E3B+CA,CAAC,A2B/CE,AE5FH,CCI8B,ADJ7B,ECIX,ADJY,IAAI,G7B2IL,G6B3IK,E7B2IA,A6B3IC,CAAC,CAAA,ECIb,EAAE,YHwFqB,CAAC,KAAI,AGxFpB,CHwFqB,CGxFnB,IHwFwB,CAAC,WAAW,EAAE,KAAI,CAAC,IGxFhC,CHwFqC,AGxFvB,CHwFwB,MAAM,CAAC,CAAA;IFnClF,CA3DA,AA2DC,CA3DiB,EE+Fd,AGvFA,ADLA,CAAC,EJHkB,AIGhB,C7B2IQ,AyB9IS,AE+Fd,GGvFC,C9BsII,C2B/CA,GAAG,KF/FmB,GA2DpC,CzBmFgB,EAAE,I2B/CK,AGvFZ,CHuFa,KAAK,CAAC,KAAK,EAAE,G3B+Cb,CAAS,G6B3IN,CAAC,EF4FS,EE5FL,CCKT,CDLW,CF4FQ,GE5FJ,CF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","file":"9da1f22267b6c295272a7b7fd7c852e0.map","sourcesContent":["export function existing<T>(maybe: T | nothing): maybe is NonNullable<T> {\n    return typeof maybe !== 'undefined' && maybe !== null\n}\nexport function notExisting<T>(maybe: Maybe<T>): maybe is nothing {\n    return !existing(maybe)\n}\n\n","import FastBinaryIndexedTree from 'fast-binary-indexed-tree'\n\nexport function cloneFastBinaryIndexedTree(source: FastBinaryIndexedTree): FastBinaryIndexedTree {\n    const target = new FastBinaryIndexedTree({\n        defaultFrequency: source.defaultFrequency,\n        maxVal: source.maxVal\n    })\n\n    target['_tree'] = {...source['_tree']}\n    target['_countNeg'] = source['_countNeg']\n\n    return target\n}\n","import {notExisting} from '../typecheck/existing'\n\nexport function ensure<A>(maybe: Maybe<A>, defaultValue: A): A {\n    return notExisting(maybe) || Number.isNaN(maybe) ? defaultValue : maybe\n}\n\n","import FastBinaryIndexedTree = require('fast-binary-indexed-tree')\n\nexport function expandFastBinaryIndexedTree(\n    source: FastBinaryIndexedTree,\n    increasedSize: number\n): void {\n    increasedSize = Math.round(increasedSize)\n    if (increasedSize <= 0)\n        return\n\n    const emptyTree = new FastBinaryIndexedTree({\n        maxVal: source.maxVal + increasedSize,\n        defaultFrequency: source.defaultFrequency\n    })\n\n    source['_maxVal'] = emptyTree['_maxVal']\n    if (source['_msb'] !== emptyTree['_msb']) {\n        source['_msb'] = emptyTree['_msb']\n    }\n}\n","export const nothing: nothing = null\n","import FastBinaryIndexedTree from 'fast-binary-indexed-tree'\nimport {notExisting} from '../typecheck/existing'\nimport {cloneFastBinaryIndexedTree} from '../utils/cloneFastBinaryIndexedTree'\nimport {ensure} from '../utils/ensure'\nimport {expandFastBinaryIndexedTree} from '../utils/expandFastBinaryIndexedTree'\nimport {nothing} from '../utils/nothing'\nimport {ListItemID, ListItemPosition, ListItemShape, ListLayout} from './ListLayout'\n\nexport class ListLayoutImpl implements ListLayout {\n    public static create(itemIDs: ReadonlyArray<ListItemID>,\n                         defaultHeight: px = 100,\n                         heights: ReadonlyMap<ListItemID, px> = new Map()): ListLayout {\n        const idToIndex = new Map()\n        itemIDs.forEach((id, index) => {\n            if (idToIndex.has(id))\n                throw new DuplicateListItemIDError(id)\n            idToIndex.set(id, index)\n        })\n\n        const prefixSumIndex = new FastBinaryIndexedTree({\n            defaultFrequency: defaultHeight,\n            maxVal: itemIDs.length\n        })\n\n        const knownHeights = new Map()\n        heights.forEach((height, id) => {\n            if (!idToIndex.has(id))\n                return\n            knownHeights.set(id, height)\n            prefixSumIndex.writeSingle(idToIndex.get(id)!, height)\n        })\n\n        return new ListLayoutImpl(\n            defaultHeight,\n            [...itemIDs],\n            idToIndex,\n            knownHeights,\n            prefixSumIndex\n        )\n    }\n\n    public getByID(id: ListItemID): Maybe<ListItemPosition> {\n        if (this.size === 0) { return nothing }\n        const index = this.idToIndex.get(id)\n        if (notExisting(index)) { return nothing }\n        const offset = this.prefixSumIndex.read(index)\n        const height = this.prefixSumIndex.readSingle(index)\n        return {id, index, offset, height}\n    }\n\n    public getByIndex(index: number): Maybe<ListItemPosition> {\n        if (this.size === 0) { return nothing }\n        const id = this.itemIDs[index]\n        if (notExisting(id)) { return undefined }\n        const offset = this.prefixSumIndex.read(index)\n        const height = this.prefixSumIndex.readSingle(index)\n        return {id, index, offset, height}\n    }\n\n    public getByIndexRange(from: number, to: number): Array<ListItemPosition> {\n        if (this.size === 0) {return []}\n        const fromItem = ensure<ListItemPosition>(this.getByIndex(from), this.getByIndex(0)!)\n        const toItem = ensure<ListItemPosition>(this.getByIndex(to), this.getByIndex(this.size - 1)!)\n        const results: Array<ListItemPosition> = []\n        for (let i = fromItem.index; i <= toItem.index; i++) {\n            results.push(this.getByIndex(i)!)\n        }\n        return results\n    }\n\n    public getByOffset(position: px): Maybe<ListItemPosition> {\n        if (this.size === 0) { return undefined }\n        let bound = this.prefixSumIndex.upperBound(position)\n        const index = bound === this.size ? bound - 1 : bound\n        const id = this.itemIDs[index]\n        const offset = this.prefixSumIndex.read(index)\n        const height = this.prefixSumIndex.readSingle(index)\n        return {id, index, offset, height}\n    }\n\n    public getByOffsetRange(from: px, to: px): Array<ListItemPosition> {\n        if (this.size === 0) {return []}\n        const fromItem = ensure<ListItemPosition>(this.getByOffset(from), this.getByIndex(0)!)\n        const toItem = ensure<ListItemPosition>(this.getByOffset(to), this.getByIndex(this.size - 1)!)\n        const results: Array<ListItemPosition> = []\n        for (let i = fromItem.index; i <= toItem.index; i++) {\n            results.push(this.getByIndex(i)!)\n        }\n        return results\n    }\n\n    public clone(newDefaultHeight?: px): ListLayout {\n        const {itemIDs, idToIndex, knownHeights, defaultHeight, prefixSumIndex} = this\n\n        newDefaultHeight = ensure(newDefaultHeight, defaultHeight)\n        const newItemIDs = [...itemIDs]\n        const newIDToIndex = new Map(idToIndex)\n        const newKnownHeights = new Map(knownHeights)\n        const newPrefixSumIndex = cloneFastBinaryIndexedTree(prefixSumIndex)\n\n        return new ListLayoutImpl(\n            newDefaultHeight,\n            newItemIDs,\n            newIDToIndex,\n            newKnownHeights,\n            newPrefixSumIndex\n        )\n    }\n\n    public join(newItemIDs: ReadonlyArray<ListItemID>): ListLayout {\n        const {defaultHeight, knownHeights} = this\n\n        const newIDToIndex = new Map()\n        newItemIDs.forEach((id, index) => newIDToIndex.set(id, index))\n\n        const newKnownHeights = new Map()\n        const newPrefixSumIndex = new FastBinaryIndexedTree({\n            defaultFrequency: defaultHeight,\n            maxVal: newItemIDs.length\n        })\n        newItemIDs.forEach(id => {\n            const currentHeight = knownHeights.get(id)\n            if (notExisting(currentHeight))\n                return\n            newKnownHeights.set(id, knownHeights.get(id))\n            newPrefixSumIndex.writeSingle(newIDToIndex.get(id)!, currentHeight)\n        })\n\n        return new ListLayoutImpl(\n            defaultHeight,\n            [...newItemIDs],\n            newIDToIndex,\n            newKnownHeights,\n            newPrefixSumIndex\n        )\n    }\n\n    public append(additionalItemIDs: ReadonlyArray<ListItemID>): void {\n        const {idToIndex, itemIDs, prefixSumIndex, size} = this\n\n        additionalItemIDs.forEach(id => {\n            if (idToIndex.has(id))\n                throw new DuplicateListItemIDError(id)\n        })\n\n        expandFastBinaryIndexedTree(prefixSumIndex, additionalItemIDs.length)\n        itemIDs.push(...additionalItemIDs)\n        additionalItemIDs.forEach((id, index) => idToIndex.set(id, index + size))\n    }\n\n    public update(newShapes: ReadonlyArray<ListItemShape>): void {\n        const {idToIndex, knownHeights, prefixSumIndex} = this\n\n        newShapes.forEach(shape => {\n            const {id, height} = shape\n\n            knownHeights.set(id, height)\n            prefixSumIndex.writeSingle(idToIndex.get(id)!, height)\n        })\n    }\n\n    public get size(): number { return this.itemIDs.length }\n\n    public get totalHeight(): px { return this.prefixSumIndex.read(this.itemIDs.length) }\n\n    private constructor(\n        private readonly defaultHeight: px,\n        private readonly itemIDs: Array<ListItemID>,\n        private readonly idToIndex: Map<ListItemID, number>,\n        private readonly knownHeights: Map<ListItemID, px>,\n        private readonly prefixSumIndex: FastBinaryIndexedTree\n    ) {}\n}\n\nexport class DuplicateListItemIDError extends Error {}\n","import {Observables} from './Observables'\nimport {Pipes} from './Pipes'\n\nexport function applyMiddleware<T extends object>(\n    origin: Observables<T>, pipes: Pipes<T>\n): Observables<T> {\n    return Object.keys(origin)\n        .map(key => ({[key]: pipes[key](origin[key])}))\n        .reduce((prev, curr) => Object.assign(prev, curr)) as any\n}\n","import {Subjects} from './Subjects'\n\nexport function createPublishers<T extends object>(subjects: Subjects<T>): EventHandlers<T> {\n    return Object.keys(subjects)\n        .map(key => ({[key]: (value: T[typeof key]) => subjects[key].next(value)}))\n        .reduce((prev, curr) => Object.assign(prev, curr)) as any\n}\n","import {Subject} from 'rxjs/Subject'\nimport {Subjects} from './Subjects'\n\nexport function createSubjects<T extends object>(names: ShapeOf<T>): Subjects<T> {\n    return Object.keys(names)\n        .map(key => ({[key]: new Subject()}))\n        .reduce((prev, curr) => Object.assign(prev, curr)) as any\n}\n","import {applyMiddleware} from './applyMiddleware'\nimport {createPublishers} from './createPublishers'\nimport {createSubjects} from './createSubjects'\nimport {Observables} from './Observables'\nimport {Pipes} from './Pipes'\n\nexport function createDispatcher<T extends object>(\n    middleware: Pipes<Required<T>>\n): Dispatcher<Required<T>> {\n    const subjects = createSubjects<Required<T>>(middleware)\n    return Object.assign(\n        {publish: createPublishers<Required<T>>(subjects)},\n        applyMiddleware<Required<T>>(subjects, middleware)\n    )\n}\n\nexport type Dispatcher<T extends object> = {\n    publish: EventHandlers<Required<T>>,\n} & Observables<Required<T>>\n\n","import {Observable} from 'rxjs/Observable'\n\nexport type Pipe<A, B=A> = (source: Observable<A>) => Observable<B>\n\nexport type Pass<T> = Pipe<T, T>\nexport const Pass = <T>(observable: Observable<T>): Observable<T> => observable\n\n","export function isFalse(value: any): value is false {\n    return value === false\n}\n","export function isTrue(value: any): value is true {\n    return value === true\n}\n","export function isFunction(a: any): a is Function {\n    return typeof a === 'function'\n}\n","import {notExisting} from '../typecheck/existing'\nimport {isFunction} from '../typecheck/isFunction'\nimport {nothing} from './nothing'\n\nexport function assume<A, B>(a: Maybe<A>, func: (a: A) => B): Maybe<B>\nexport function assume<A, B, C>(a: Maybe<A>, b: Maybe<B>, func: (a: A, b: B) => C): Maybe<C>\nexport function assume<T>(...params: Array<Maybe<any> | ((...p: Array<Maybe<any>>) => T)>): Maybe<T> {\n    const func = params[params.length - 1]\n    const funcParams = params.slice(0, params.length - 1)\n    if (!isFunction(func) || funcParams.length < 1 || funcParams.some(notExisting)) {\n        return nothing\n    }\n    return func(...funcParams)\n}\n","export function publishAll<T extends object>(value: T, handlers: EventHandlers<Required<T>>): void {\n    Object.keys(handlers).forEach(key => handlers[key](value[key]))\n}\n","export type Pulse = any\nexport let Pulse: Pulse = true\n","import {notExisting} from '../typecheck/existing'\nimport {nothing} from './nothing'\n\nexport function calcSum(array: Array<number>): number {\n    return array.reduce((acc, curr) => acc + curr, 0)\n}\n\nexport function calcAverage(array: Array<number>): Maybe<number> {\n    if (array.length === 0)\n        return nothing\n    return calcSum(array) / array.length\n}\n\nexport function nearestToAverage(array: Array<number>): Maybe<number> { // TODO better name\n    const average = calcAverage(array)\n    if (array.length === 0 || notExisting(average))\n        return nothing\n    const sorted = array.sort((a, b) => Math.abs(a - average) - Math.abs(b - average))\n    return sorted[0]\n}\n\nexport function calcDeviation(array: Array<number>): Maybe<number> {\n    const average = calcAverage(array)\n    if (array.length === 0 || notExisting(average))\n        return nothing\n    return calcAverage(array.map(num => Math.abs(num - average)))\n}\n\n\n","export async function forDuration(duration: ms): Promise<void> {\n    return new Promise<void>((then) => setTimeout(then, duration))\n}\n","export async function nextAnimationFrame(): Promise<undefined> {\n    return new Promise(resolve => requestAnimationFrame(resolve)) as Promise<any>;\n}\n","// https://stackoverflow.com/a/44078785/1815491\nexport function uniqueID() {\n    return Math.random().toString(36).substring(2)\n        + (new Date()).getTime().toString(36);\n}\n","// ignoring rotate\r\n\r\nexport function calcOutline(dom: Element): Outline {\r\n    const rect = dom.getBoundingClientRect()\r\n\r\n    const {width, height} = rect\r\n    const x = rect.left\r\n    const y = rect.top\r\n\r\n    return {x, y, width, height}\r\n}\r\n","import {notExisting} from '../typecheck/existing'\n\nexport function hasStyle(style: Maybe<string>): style is string {\n    return !(style === 'none' || style === '' || notExisting(style));\n}\n\n","import {applyToPoints} from 'transformation-matrix/applyToPoint'\nimport {fromString} from 'transformation-matrix/fromString'\nimport {inverse} from 'transformation-matrix/inverse'\nimport {hasStyle} from './hasStyle'\nimport {calcOutline} from './calcOutline'\n\n// ignoring rotate\nexport function calcOutlineOrigin(dom: Element): Outline {\n    let outline: Outline = calcOutline(dom)\n\n    const transformCSS = window.getComputedStyle(dom).transform\n    if (hasStyle(transformCSS)) {\n        const {x, y, width, height} = outline\n        const transform = fromString(transformCSS)\n        const inverted = inverse(transform)\n        const [topLeft, bottomRight] =\n            applyToPoints(inverted, [{x, y}, {x: x + width, y: y + height}])\n        outline = {\n            x: topLeft.x,\n            y: topLeft.y,\n            width: Math.abs(bottomRight.x - topLeft.x),\n            height: Math.abs(bottomRight.y - topLeft.y)\n        }\n    }\n\n    return outline\n}\n","import {scale} from 'transformation-matrix/scale'\nimport {transform} from 'transformation-matrix/transform'\nimport {translate} from 'transformation-matrix/translate'\n\nexport function calcTransform(from: Outline, to: Outline): Matrix {\n    const centerOf = (rect: Outline): Point => {\n        return {\n            x: rect.x + rect.width * 0.5,\n            y: rect.y + rect.height * 0.5\n        }\n    }\n    const fromMiddle = centerOf(from)\n    const toMiddle = centerOf(to)\n\n    const matrix = transform(\n        translate(toMiddle.x - fromMiddle.x, toMiddle.y - fromMiddle.y),\n        scale(to.width / from.width, to.height / from.height)\n    )\n\n    return matrix\n}\n\n","import {inverse} from 'transformation-matrix/inverse'\r\nimport {toCSS} from 'transformation-matrix/toString'\r\nimport {existing} from '../typecheck/existing'\r\nimport {isFunction} from '../typecheck/isFunction'\r\nimport {forDuration} from '../utils/forDuration'\r\nimport {nextAnimationFrame} from '../utils/nextAnimationFrame'\r\nimport {uniqueID} from '../utils/uniqueID'\r\nimport {applyTransform} from './applyTransform'\r\nimport {calcOutline} from './calcOutline'\r\nimport {calcOutlineOrigin} from './calcOutlineOrigin'\r\nimport {calcTransform} from './calcTransform'\r\nimport {Tween} from './Tween'\r\n\r\nexport async function tweenHere(\r\n    element: HTMLElement,\r\n    from: Outline | ((current: Outline, to: Outline) => Outline) = current => current,\r\n    duration: ms | ((from: Outline, target: Outline) => ms) = 200,\r\n    easing: Easing = [0, 0, 1, 1]\r\n): Promise<void> {\r\n    const tweeningID = uniqueID()\r\n    tweening.set(element, tweeningID)\r\n\r\n    const current = calcOutline(element)\r\n\r\n    const to = calcOutlineOrigin(element)\r\n    from = isFunction(from) ? from(current, to) : from\r\n\r\n    const transform = calcTransform(from, to)\r\n    duration = isFunction(duration) ? duration(from, to) : duration\r\n    element.style.transition = 'none'\r\n    element.style.transform = toCSS(inverse(transform))\r\n\r\n    await nextAnimationFrame()\r\n    if (tweening.get(element) !== tweeningID)\r\n        return\r\n    element.style.transition = `\r\n        opacity ${duration}ms cubic-bezier(${easing.join(',')}),\r\n        transform ${duration}ms cubic-bezier(${easing.join(',')})\r\n    `\r\n    element.style.transform = 'none'\r\n\r\n    await forDuration(duration)\r\n    if (tweening.get(element) !== tweeningID)\r\n        return\r\n    element.style.transition = `none`\r\n    tweening.delete(element)\r\n}\r\n\r\nconst tweening: WeakMap<Element, TweenID> = new WeakMap()\r\n\r\ntype TweenID = string\r\n\r\n","import {ensure} from '../../../../utils/ensure'\n\nexport function calcFocusOffset(focusOffset: Maybe<px>, viewportHeight: px): px {\n    return ensure<px>(focusOffset, viewportHeight / 3)\n}\n","import {ListItemPosition, ListLayout} from '../../../../layouts/ListLayout'\nimport {existing} from '../../../../typecheck/existing';\n\nconst pageSize = 10\n\nexport function calcSegments(scroll: px, preload: px,\n                             height: px, layout: ListLayout): Array<ListItemPosition> {\n    const segments: Array<ListItemPosition> = []\n\n    const floorSeg = layout.getByOffset(\n        Math.max(\n            Math.min(\n                scroll - height,\n                scroll + preload\n            ),\n            0\n        )\n    )\n    const ceilSeg = layout.getByOffset(\n        Math.min(\n            Math.max(\n                scroll + height + height,\n                scroll + height + preload\n            ),\n            layout.totalHeight\n        )\n    )\n    if (existing(floorSeg) && existing(ceilSeg)) {\n        const fromIndex = Math.floor(floorSeg.index / pageSize) * pageSize\n        const toIndex = Math.min(\n            Math.ceil(ceilSeg.index / pageSize) * pageSize,\n            layout.size - 1\n        )\n        for (let index = fromIndex; index <= toIndex; index++) {\n            segments.push(layout.getByIndex(index)!)\n        }\n    }\n\n    return segments\n}\n","import {ListLayout} from '../../../../layouts/ListLayout'\nimport {notExisting} from '../../../../typecheck/existing'\nimport {assume} from '../../../../utils/assume'\n\nexport function projectScroll(scroll: px, focusOffset: px, from: ListLayout, to: ListLayout): px {\n    const prev = from.getByOffset(scroll + focusOffset)\n    const curr = assume(prev, prev => to.getByID(prev.id))\n    if (notExisting(prev) || notExisting(curr))\n        return scroll\n    const prevHeightBeforeFocus = scroll + focusOffset - prev.offset\n    const currHeightBeforeFocus = (prevHeightBeforeFocus / prev.height) * curr.height\n    return curr.offset - (focusOffset - currHeightBeforeFocus)\n}\n","import {ListItemShape, ListLayout} from '../../../../layouts/ListLayout'\nimport {existing} from '../../../../typecheck/existing'\nimport {assume} from '../../../../utils/assume'\nimport {SegmentID} from '../types/SegmentID'\n\nexport function updateLayoutIfNecessary(prevLayout: ListLayout,\n                                        alternateItemIDs: Maybe<ReadonlyArray<SegmentID>>,\n                                        updates: ReadonlyArray<ListItemShape>): ListLayout {\n    let newLayout = prevLayout\n\n    const areHeightsUpdated = updates.some(update =>\n        update.height !== assume(newLayout.getByID(update.id), it => it.height)\n    )\n    if (areHeightsUpdated) {\n        newLayout = newLayout.clone()\n        newLayout.update(updates)\n    }\n\n    if (existing(alternateItemIDs)) {\n        newLayout = newLayout.clone()\n        newLayout.join(alternateItemIDs)\n    }\n\n    return newLayout\n}\n\n","import * as React from 'react'\nimport * as ReactDOM from 'react-dom';\nimport ResizeObserver from 'resize-observer-polyfill'\nimport {isString} from 'util';\nimport {existing, notExisting} from '../../typecheck/existing'\nimport {nothing} from '../../utils/nothing'\nimport {PropsOf} from '../PropsOf';\nimport hoistNonReactStatics = require('hoist-non-react-statics')\n\nexport function measuring<C extends React.ComponentClass<any> | keyof React.ReactHTML>(\n    Component: C\n): Measuring<C> {\n    class HOC extends React.PureComponent<PropsOf<C> & MeasureProps> {\n        render() {\n            // TODO what if Component renders multiple elements?\n\n            const props: PropsOf<C> = Object.assign(\n                {},\n                this.props,\n                {ref: (it: any) => this.updateRef(it)}\n            ) as any\n            delete props['onHeightChange']\n            delete props['onWidthChange']\n\n            return React.createElement(\n                Component,\n                props,\n                this.props.children\n            )\n        }\n\n        private observer: ResizeObserver\n        private observing: Maybe<Element>\n\n        constructor(props: PropsOf<C> & MeasureProps) {\n            super(props)\n\n            this.observer = new ResizeObserver(\n                (entries: ResizeObserverEntry[], observer: ResizeObserver) => {\n                    const height = entries[0].contentRect.height\n                    const width = entries[0].contentRect.width\n                    if (existing(this.props.onHeightChange)) {\n                        this.props.onHeightChange(height)\n                    }\n                    if (existing(this.props.onWidthChange)) {\n                        this.props.onWidthChange(width)\n                    }\n                }\n            )\n        }\n\n        componentWillUnmount() {\n            this.observer.disconnect()\n        }\n\n        private updateRef(ref: Maybe<React.ReactInstance>) {\n            if (existing(this.observing)) {\n                this.observer.unobserve(this.observing)\n                this.observing = nothing\n            }\n            if (notExisting(ref)) {\n                return\n            }\n            const dom: Element = ref instanceof React.Component\n                ? ReactDOM.findDOMNode(ref)\n                : ref\n            if (existing(dom)) {\n                this.observer.observe(dom)\n                this.observing = dom\n            }\n        }\n    }\n\n    if (!isString(Component)) {\n        hoistNonReactStatics(HOC, Component as any)\n    }\n\n    return HOC\n}\n\nexport type Measuring<T extends React.ComponentClass<any> | keyof React.ReactHTML> =\n    React.ComponentClass<PropsOf<T> & MeasureProps>\n\ntype MeasureProps = SelfDecideHeight & SelfDecideWidth\n","import sharedInstance from 'jss'\nimport * as React from 'react';\nimport {ListItemShape} from '../../../layouts/ListLayout'\nimport {measuring, Measuring} from '../../../react/measure/measuring'\nimport {PropsOf} from '../../../react/PropsOf';\nimport {existing} from '../../../typecheck/existing'\nimport {Segment} from './types/Segment'\n\nexport class MeasuredSegment extends React.PureComponent<Props> {\n    render() {\n        const {id, width} = this.props\n        const {Segment} = this\n        return <Segment id={id} width={width} onHeightChange={this.reportHeight}/>\n    }\n\n    private reportHeight = (height: px) => {\n        const id = this.props.id\n\n        if (existing(this.props.onHeightChange)) {\n            this.props.onHeightChange({id, height})\n        }\n    }\n\n    constructor(props: Props) {\n        super(props)\n        this.Segment = measuring(props.Segment)\n    }\n\n    private Segment: Measuring<Segment>\n}\n\ntype Props = PropsOf<Segment>\n    & { Segment: Segment }\n    & { onHeightChange: EventHandler<ListItemShape> }\n\nconst classes = sharedInstance.createStyleSheet({\n    mask: {\n        display: 'block',\n        contain: 'content',\n        height: 'auto',\n        willChange: 'height'\n    }\n}).attach().classes\n","import sharedInstance from 'jss'\r\nimport * as React from 'react'\r\nimport {CSSProperties} from 'react'\r\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {interval} from 'rxjs/observable/interval'\r\nimport {\r\n    bufferCount,\r\n    bufferTime,\r\n    combineLatest,\r\n    distinctUntilChanged,\r\n    filter,\r\n    map,\r\n    merge,\r\n    pairwise,\r\n    sampleTime,\r\n    scan,\r\n    shareReplay,\r\n    startWith,\r\n    timestamp,\r\n    withLatestFrom\r\n} from 'rxjs/operators'\r\nimport {animationFrame} from 'rxjs/scheduler/animationFrame'\r\nimport {Subscription} from 'rxjs/Subscription'\r\nimport {Memoize} from 'typescript-memoize'\r\nimport {ListItemPosition, ListItemShape, ListLayout} from '../../layouts/ListLayout'\r\nimport {ListLayoutImpl} from '../../layouts/ListLayoutImpl'\r\nimport {createDispatcher} from '../../rxjs/createDispatcher'\r\nimport {Pass} from '../../rxjs/Pipe';\r\nimport {Pipes} from '../../rxjs/Pipes'\r\nimport {existing} from '../../typecheck/existing'\r\nimport {isFalse} from '../../typecheck/isFalse';\r\nimport {isTrue} from '../../typecheck/isTrue';\r\nimport {assume} from '../../utils/assume'\r\nimport {ensure} from '../../utils/ensure'\r\nimport {nothing} from '../../utils/nothing'\r\nimport {publishAll} from '../../utils/publishAll'\r\nimport {Pulse} from '../../utils/Pulse'\r\nimport {calcAverage, nearestToAverage} from '../../utils/statics';\r\nimport {tweenHere} from '../../view/tweenHere'\r\nimport {calcFocusOffset} from './src/functions/calcFocusOffset'\r\nimport {calcSegments} from './src/functions/calcSegments'\r\nimport {projectScroll} from './src/functions/projectScroll'\r\nimport {updateLayoutIfNecessary} from './src/functions/updateLayoutIfNecessary'\r\nimport {MeasuredSegment} from './src/MeasuredSegment';\r\nimport {Segment} from './src/types/Segment'\r\nimport {SegmentID} from './src/types/SegmentID'\r\nimport deepEqual = require('deep-equal')\r\n\r\nexport class InfiniteList extends React.Component<Props, State> {\r\n    public render(): JSX.Element {\r\n        const {scrolled, heightUpdated, touchEnded, touchMoved, touchStarted} = this.actions$.publish\r\n        const {state, props, children, temporalScroll} = this\r\n        const {Segment, width, height} = props\r\n        const {segments, layout, useAutoLayout} = state\r\n\r\n        const paddingTop = useAutoLayout\r\n            ? <div key={'infinite-scroll-padding-top'}\r\n                   style={{height: existing(segments[0]) ? segments[0].offset : 0}}/>\r\n            : nothing\r\n\r\n        const contentStyle = {\r\n            width,\r\n            height: layout.totalHeight,\r\n            transform: temporalScroll === 0\r\n                ? 'none'\r\n                : `translateY(${-temporalScroll}px)`\r\n        }\r\n        const segmentStyle = (offset: px): CSSProperties => {\r\n            return useAutoLayout\r\n                ? {position: 'relative'}\r\n                : {position: 'absolute', top: `${offset}px`}\r\n        }\r\n\r\n        return <div className={classes.container} style={{width, height}}\r\n                    ref={ref => existing(ref) ? children.container = ref : nothing}\r\n                    onScroll={scrolled}\r\n                    onTouchStartCapture={touchStarted}\r\n                    onTouchEndCapture={touchEnded}\r\n                    onTouchMoveCapture={touchMoved}>\r\n            <div className={classes.content} style={contentStyle}\r\n                 ref={ref => existing(ref) ? children.content = ref : nothing}>\r\n                {paddingTop}\r\n                {segments.map(spec =>\r\n                    <div key={spec.id} className={classes.segment}\r\n                         style={segmentStyle(spec.offset)}\r\n                         ref={ref => existing(ref)\r\n                             ? children.segments.set(spec.id, ref)\r\n                             : children.segments.delete(spec.id)}>\r\n                        <MeasuredSegment {...{id: spec.id, Segment, width}}\r\n                                         onHeightChange={heightUpdated}/>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n        this.children = {\r\n            container: document.createElement('div'),\r\n            content: document.createElement('div'),\r\n            segments: new Map<SegmentID, HTMLElement>()\r\n        }\r\n\r\n        const layout = ListLayoutImpl.create(props.segmentIDs, Math.round(props.height / 6))\r\n        const focusOffset = calcFocusOffset(this.props.focusOffset, this.props.height)\r\n        const focus = assume(props.focus, focus => layout.getByID(focus))\r\n        const scroll = ensure<px>(assume(focus, focus => focus.offset - focusOffset), 0)\r\n        const segments = calcSegments(scroll, 0, props.height, layout)\r\n        this.state = {scroll, layout, segments, useAutoLayout: true}\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.children.container.scrollTop = this.state.scroll\r\n        this.work.add(this.updateState())\r\n        this.work.add(this.adjustScroll())\r\n        this.work.add(this.focusOnSegment())\r\n        this.work.add(this.callEventHandlers())\r\n        publishAll<Props>(this.props, this.props$.publish)\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Props, prevState: State) {\r\n        const {props, state, children} = this\r\n\r\n        if (prevProps !== props) {\r\n            publishAll<Props>(this.props, this.props$.publish)\r\n        }\r\n\r\n        if (prevState.layout !== state.layout) {\r\n            const {containerScroll, temporalScroll} = this\r\n            const prevScroll = containerScroll + temporalScroll\r\n\r\n            const focusOffset = calcFocusOffset(this.props.focusOffset, this.props.height)\r\n            const currScroll = Math.min(Math.max(projectScroll(\r\n                prevScroll, focusOffset,\r\n                prevState.layout, state.layout\r\n            ), 0), state.layout.totalHeight - props.height)\r\n\r\n            if (Math.abs(this.velocity) <= 0.01) {\r\n                this.temporalScroll = 0\r\n                this.containerScroll = currScroll\r\n            } else {\r\n                const expectedTemporalScroll = Math.ceil(currScroll - containerScroll)\r\n                if (Math.abs(temporalScroll - expectedTemporalScroll) > 1) {\r\n                    this.temporalScroll = expectedTemporalScroll\r\n                }\r\n            }\r\n\r\n            if (!state.useAutoLayout && !prevState.useAutoLayout) {\r\n                Array.from(children.segments.entries())\r\n                    .forEach(([segmentID, element]) => {\r\n                        const prev = prevState.layout.getByID(segmentID)\r\n                        const curr = state.layout.getByID(segmentID)\r\n\r\n                        if (!existing(prev) || !existing(curr))\r\n                            return\r\n\r\n                        const prevScreenOffset = prev.offset - prevScroll\r\n                        const currScreenOffset = curr.offset - currScroll\r\n                        if (prevScreenOffset === currScreenOffset)\r\n                            return\r\n\r\n                        tweenHere(\r\n                            element,\r\n                            (current, to) => {\r\n                                return {\r\n                                    ...current,\r\n                                    y: prevScreenOffset - (to.y - current.y)\r\n                                }\r\n                            },\r\n                            (from, to)=> {\r\n                                const diff = Math.abs(from.y - to.y) +\r\n                                    Math.abs(from.height - to.height)\r\n\r\n                                return Math.min(Math.min(diff, 100), 300)\r\n                            },\r\n                            [0.445, 0.05, 0.55, 0.95]\r\n                        )\r\n                    })\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.work.unsubscribe()\r\n    }\r\n\r\n    private readonly work: Subscription = new Subscription()\r\n\r\n    private readonly children: Children\r\n\r\n    private readonly actions$ = createDispatcher<Actions>(actionsFilter)\r\n    private readonly props$ = createDispatcher<Props>(propsFilter)\r\n\r\n    @Memoize()\r\n    private get height$(): Observable<px> {\r\n        const {height} = this.props$\r\n\r\n        return height.pipe(\r\n            startWith(this.props.height),\r\n            distinctUntilChanged(),\r\n            // log$('height'),\r\n            shareReplay(1)\r\n        )\r\n    }\r\n\r\n    @Memoize()\r\n    private get layout(): Observable<ListLayout> {\r\n        const {segmentIDs} = this.props$\r\n        const {heightUpdated} = this.actions$\r\n\r\n        const updates: Observable<Array<ListItemShape>> = heightUpdated.pipe(\r\n            bufferTime(0, animationFrame),\r\n            filter(buffer => buffer.length > 0)\r\n        )\r\n\r\n        return segmentIDs.pipe(\r\n            scan<Array<SegmentID>, Maybe<Array<SegmentID>>>((prev, curr) =>\r\n                curr === prev ? nothing : curr\r\n            ),\r\n            combineLatest(updates),\r\n            scan<[Maybe<Array<SegmentID>>, Array<ListItemShape>], ListLayout>(\r\n                (layout, [alternateItemIDs, updates]) =>\r\n                    updateLayoutIfNecessary(layout, alternateItemIDs, updates),\r\n                this.state.layout\r\n            ),\r\n            startWith(this.state.layout),\r\n            distinctUntilChanged(),\r\n            // log$('layout'),\r\n            shareReplay(1)\r\n        )\r\n    }\r\n\r\n    private get temporalScroll(): px {\r\n        const {temporalScroll$} = this\r\n        return (temporalScroll$ as BehaviorSubject<px>).getValue()\r\n    }\r\n\r\n    private set temporalScroll(scroll: px) {\r\n        const {temporalScroll$} = this\r\n        const {content} = this.children;\r\n\r\n        (temporalScroll$ as BehaviorSubject<px>).next(scroll)\r\n        content.style.transform = scroll === 0\r\n            ? 'none'\r\n            : `translateY(${-scroll}px)`\r\n    }\r\n\r\n    private readonly temporalScroll$: Observable<px> = new BehaviorSubject(0)\r\n\r\n    private get containerScroll(): px {\r\n        const {container} = this.children\r\n        return container.scrollTop\r\n    }\r\n\r\n    private set containerScroll(scroll: px) {\r\n        const {container} = this.children\r\n        container.style['-webkit-overflow-scrolling'] = 'auto'\r\n        container.scrollTop = scroll\r\n        container.style['-webkit-overflow-scrolling'] = 'touch'\r\n    }\r\n\r\n    @Memoize()\r\n    private get containerScroll$(): Observable<px> {\r\n        const {scrolled, touchStarted, touchEnded} = this.actions$\r\n\r\n        const shouldSample: Observable<Pulse> = scrolled.pipe(\r\n            merge(touchStarted),\r\n            merge(touchEnded),\r\n            merge(interval(0, animationFrame)),\r\n            timestamp(),\r\n            distinctUntilChanged((prev, curr) => curr.timestamp - prev.timestamp < 100),\r\n            sampleTime(0, animationFrame),\r\n            startWith(Pulse)\r\n        )\r\n\r\n        return shouldSample.pipe(\r\n            map(() => this.containerScroll),\r\n            map(Math.round),\r\n            shareReplay(1)\r\n        )\r\n    }\r\n\r\n    @Memoize()\r\n    private get containerScrollVelocity$(): Observable<Velocity> {\r\n        const {containerScroll$} = this\r\n\r\n        const move = containerScroll$.pipe(\r\n            timestamp(),\r\n            // distinctUntilChanged((prev, curr) => curr.timestamp - prev.timestamp < 100),\r\n            pairwise()\r\n        )\r\n\r\n        return move.pipe(\r\n            map(([prev, curr]) =>\r\n                (curr.value - prev.value) / (curr.timestamp - prev.timestamp)\r\n            ),\r\n            startWith(0),\r\n            bufferCount(3, 1),\r\n            map(nearestToAverage),\r\n            filter(existing),\r\n            shareReplay(1)\r\n        )\r\n    }\r\n\r\n    @Memoize()\r\n    private get useAutoLayout$(): Observable<boolean> {\r\n        const {containerScrollVelocity$} = this\r\n\r\n        return containerScrollVelocity$.pipe(\r\n            map(Math.abs),\r\n            map(speed => speed > 3),\r\n            bufferCount(2, 1),\r\n            map(buffer => buffer.filter(isTrue).length > buffer.filter(isFalse).length),\r\n            distinctUntilChanged(),\r\n            // log$('useAutoLayout'),\r\n            shareReplay(1)\r\n        )\r\n\r\n    }\r\n\r\n    @Memoize()\r\n    private get scroll$(): Observable<Velocity> {\r\n        const {containerScroll$, temporalScroll$} = this\r\n\r\n        return containerScroll$.pipe(\r\n            withLatestFrom(temporalScroll$),\r\n            map(([container, temporal]) => container + temporal)\r\n        )\r\n    }\r\n\r\n    private get velocity(): Velocity {\r\n        return this['_velocity']\r\n    }\r\n\r\n    private updateState(): Subscription {\r\n        const {scroll$, layout, containerScrollVelocity$, height$, useAutoLayout$} = this\r\n\r\n        const preload$: Observable<px> = containerScrollVelocity$.pipe(\r\n            bufferCount(3, 1),\r\n            map(calcAverage),\r\n            filter(existing),\r\n            map(Math.round),\r\n            map(velocity => Math.max(Math.min(velocity * 500, 10000), -10000)),\r\n            distinctUntilChanged(),\r\n            // log$('preload'),\r\n            shareReplay(1)\r\n        )\r\n\r\n        const state: Observable<State> = scroll$.pipe(\r\n            combineLatest(preload$, useAutoLayout$, layout, height$),\r\n            map(([scroll, preload, useAutoLayout, layout, height]): State => {\r\n                const segments = calcSegments(scroll, preload, height, layout)\r\n                return {layout, segments, useAutoLayout, scroll}\r\n            }),\r\n            distinctUntilChanged((prev, curr) =>\r\n                prev.useAutoLayout === curr.useAutoLayout &&\r\n                prev.layout === curr.layout &&\r\n                deepEqual(prev.segments, curr.segments)\r\n            ),\r\n            startWith(this.state),\r\n            // tap(state=> console.log(state.useAutoLayout)),\r\n            shareReplay(1)\r\n        )\r\n\r\n        return state.subscribe(state => this.setState(state))\r\n    }\r\n\r\n    private adjustScroll(): Subscription {\r\n        const {containerScrollVelocity$} = this\r\n\r\n        const shouldApplyTemporalScroll: Observable<Pulse> = containerScrollVelocity$.pipe(\r\n            bufferCount(2, 1),\r\n            filter(buffer => !buffer.some(v => Math.abs(v) > 0.01))\r\n        )\r\n\r\n        return shouldApplyTemporalScroll.subscribe(() => {\r\n            const {temporalScroll, containerScroll} = this\r\n            if (temporalScroll === 0)\r\n                return\r\n            // console.log('adjusted')\r\n            this.containerScroll = containerScroll + temporalScroll\r\n            this.temporalScroll = 0\r\n        })\r\n    }\r\n\r\n    private focusOnSegment(): Subscription {\r\n        const {props$} = this\r\n\r\n        const newFocusSegment = props$.focus.pipe(\r\n            distinctUntilChanged(),\r\n            filter(existing),\r\n            map(focus => this.state.layout.getByID(focus)),\r\n            filter(existing)\r\n        )\r\n\r\n        return newFocusSegment.subscribe(segment => {\r\n            const focusOffset = calcFocusOffset(this.props.focusOffset, this.props.height)\r\n            const targetScroll = segment.offset - focusOffset\r\n            this.containerScroll = targetScroll\r\n            this.temporalScroll = 0\r\n        })\r\n    }\r\n\r\n    private callEventHandlers(): Subscription {\r\n        const {scroll$, layout} = this\r\n\r\n        const work = new Subscription()\r\n\r\n        work.add(scroll$.subscribe(scroll => {\r\n            if (existing(this.props.onScroll))\r\n                this.props.onScroll(scroll)\r\n        }))\r\n        work.add(layout.subscribe(layout => {\r\n            if (existing(this.props.onReflow))\r\n                this.props.onReflow(layout)\r\n        }))\r\n\r\n        return work\r\n    }\r\n}\r\n\r\ntype Props = {\r\n    segmentIDs: Array<SegmentID>\r\n    width: px\r\n    height: px\r\n    Segment: Segment\r\n    focus?: SegmentID\r\n    focusOffset?: px\r\n    onScroll?: EventHandler<px>\r\n    onReflow?: EventHandler<ListLayout>\r\n}\r\nconst propsFilter: Pipes<Required<Props>> = {\r\n    segmentIDs: distinctUntilChanged(),\r\n    width: distinctUntilChanged(),\r\n    height: distinctUntilChanged(),\r\n    Segment: distinctUntilChanged(),\r\n    focus: distinctUntilChanged(),\r\n    focusOffset: distinctUntilChanged(),\r\n    onScroll: distinctUntilChanged(),\r\n    onReflow: distinctUntilChanged()\r\n}\r\n\r\ntype State = {\r\n    scroll: px\r\n    layout: ListLayout\r\n    segments: Array<ListItemPosition>\r\n    useAutoLayout: boolean\r\n}\r\ntype Children = {\r\n    container: HTMLElement\r\n    content: HTMLElement\r\n    segments: Map<SegmentID, HTMLElement>\r\n}\r\n\r\ntype Actions = {\r\n    scrolled: React.SyntheticEvent<HTMLDivElement>\r\n    touchStarted: React.TouchEvent<HTMLDivElement>\r\n    touchMoved: React.TouchEvent<HTMLDivElement>\r\n    touchEnded: React.TouchEvent<HTMLDivElement>\r\n    heightUpdated: ListItemShape\r\n}\r\nconst actionsFilter: Pipes<Actions> = {\r\n    scrolled: Pass,\r\n    touchStarted: Pass,\r\n    touchMoved: Pass,\r\n    touchEnded: Pass,\r\n    heightUpdated: Pass\r\n}\r\n\r\nexport const classes = sharedInstance.createStyleSheet({\r\n    container: {\r\n        position: 'relative',\r\n        display: 'block',\r\n        'overflow-x': 'hidden',\r\n        'overflow-y': 'scroll',\r\n        'overflow-anchor': 'none', // https://stackoverflow.com/questions/42205462/disable-chromes-scroll-preserving-feature\r\n        'scroll-behavior': 'auto',\r\n        '-webkit-overflow-scrolling': 'touch',\r\n        contain: 'strict',\r\n        'will-change': 'transform', // https://bugs.chromium.org/p/chromium/issues/detail?id=514303\r\n        '-webkit-font-smoothing': 'subpixel-antialiased'\r\n    },\r\n    content: {\r\n        position: 'relative',\r\n        display: 'block',\r\n        contain: 'strict',\r\n        'will-change': 'transform, height'\r\n    },\r\n    segment: {\r\n        display: 'block',\r\n        'will-change': 'top, height'\r\n    }\r\n}).attach().classes\r\n\r\n","// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random\n\nexport function getRandomIntInclusive(min: number, max: number): number {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min; //The maximum is inclusive and the minimum is inclusive\n}","import * as loremIpsum from 'lorem-ipsum'\r\nimport * as React from 'react';\r\nimport {PropsOf} from '../../../react/PropsOf';\r\nimport {ensure} from '../../../utils/ensure'\r\nimport {getRandomIntInclusive} from '../../../utils/getRandomIntInclusive'\r\nimport {Segment} from '../src/types/Segment';\r\n\r\nexport class SegmentExample extends React.Component<PropsOf<Segment>, State> {\r\n    componentDidMount() {\r\n        this.interval = setInterval(() => {\r\n            if (this.state.type !== 'text')\r\n                return\r\n            const text = loremIpsum({count: getRandomIntInclusive(3, 20)})\r\n            textCache[this.props.id] = text\r\n            this.setState({text})\r\n        }, getRandomIntInclusive(3000, 5000))\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.interval)\r\n    }\r\n\r\n    render() {\r\n        return <div style={{\r\n            display: 'block',\r\n            width: this.props.width,\r\n            backgroundColor: 'white',\r\n            wordWrap: 'break-word',\r\n            wordBreak: 'break-all'\r\n        }}>\r\n            <div>{this.props.id}</div>\r\n            <br/>\r\n            {\r\n                this.state.type === 'text'\r\n                    ? this.state.text\r\n                    : <img style={{width: this.props.width}} src={this.state.image}/>\r\n            }\r\n            <br/>\r\n        </div>\r\n    }\r\n\r\n    constructor(props: PropsOf<Segment>) {\r\n        super(props)\r\n        const type = ensure(typeCache[props.id], Math.random() > 0.2 ? 'text' : 'image')\r\n        typeCache[props.id] = type\r\n\r\n        let state: State\r\n\r\n        if (type === 'text') {\r\n            let text = textCache[props.id] || loremIpsum({count: getRandomIntInclusive(3, 20)})\r\n            textCache[props.id] = text\r\n            this.state = {type, text}\r\n        } else {\r\n            const image = imgCache[props.id]\r\n                || `https://picsum.photos/500/${getRandomIntInclusive(300, 800)}`\r\n            imgCache[props.id] = image\r\n            this.state = {type, image}\r\n        }\r\n    }\r\n\r\n    private interval: any\r\n}\r\n\r\nconst typeCache: { [id: string]: 'text' | 'image' } = {}\r\nconst textCache: { [id: string]: string } = {}\r\nconst imgCache: { [id: string]: string } = {}\r\n\r\ntype State = { type: 'text', text: string }\r\n    | { type: 'image', image: string }\r\n\r\n\r\n","import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom'\r\nimport ErrorBoundary from 'react-error-boundary'\r\nimport {InfiniteList} from '../InfiniteList'\r\nimport {SegmentID} from '../src/types/SegmentID'\r\nimport {SegmentExample} from './SegmentExample'\r\n\r\nconst segmentIDs: Array<SegmentID> = []\r\nfor (let i = 0; i < 100000; i++) {\r\n    segmentIDs.push(i.toString())\r\n}\r\n\r\nexport class Demo extends React.Component<{}, {\r\n    width: number,\r\n    height: number,\r\n    focusOffset: number\r\n}> {\r\n    render() {\r\n        const {width, height, focusOffset} = this.state\r\n\r\n        return <InfiniteList Segment={SegmentExample}\r\n                             {...{width, height, segmentIDs, focusOffset}}\r\n                             onScroll={this.onScroll}/>\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('resize', () => {\r\n            const width = window.innerWidth\r\n            const height = window.innerHeight\r\n            this.setState({width, height})\r\n        })\r\n    }\r\n\r\n    onScroll = (scroll: px) => {\r\n        if (Math.abs(scroll) < 10) {\r\n            this.setState({focusOffset: 0})\r\n        } else {\r\n            this.setState({focusOffset: this.state.height / 3})\r\n        }\r\n    }\r\n\r\n    constructor(props: {}) {\r\n        super(props)\r\n        this.state = {\r\n            width: window.innerWidth,\r\n            height: window.innerHeight,\r\n            focusOffset: 0\r\n        }\r\n    }\r\n}\r\n\r\nconst root = document.getElementById('root')!\r\nReactDOM.render(\r\n    <ErrorBoundary FallbackComponent={({componentStack, error}) =>\r\n        <pre style={{width: window.innerWidth, wordBreak: 'break-all'}}>\r\n            {JSON.stringify(componentStack, null, 4)}\r\n            {JSON.stringify(error, null, 4)}\r\n        </pre>\r\n    }>\r\n        <Demo/>\r\n    </ErrorBoundary>,\r\n    root\r\n)\r\n\r\n"]}