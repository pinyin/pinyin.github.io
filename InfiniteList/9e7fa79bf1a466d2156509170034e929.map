{"version":3,"sources":["..\\..\\..\\rxjs\\applyMiddleware.ts","..\\..\\..\\rxjs\\createPublishers.ts","..\\..\\..\\rxjs\\createSubjects.ts","..\\..\\..\\rxjs\\createStreams.ts","..\\..\\..\\rxjs\\Pipe.ts","..\\..\\..\\typecheck\\existing.ts","..\\..\\..\\typecheck\\isFalse.ts","..\\..\\..\\typecheck\\isTrue.ts","..\\..\\..\\typecheck\\isFunction.ts","..\\..\\..\\utils\\nothing.ts","..\\..\\..\\utils\\assume.ts","..\\..\\..\\utils\\ensure.ts","..\\..\\..\\utils\\publishEvents.ts","..\\..\\..\\utils\\Pulse.ts","..\\..\\..\\utils\\statics.ts","..\\..\\..\\utils\\forDuration.ts","..\\..\\..\\utils\\nextAnimationFrame.ts","..\\..\\..\\utils\\uniqueID.ts","..\\..\\..\\view\\calcOutline.ts","..\\..\\..\\view\\hasStyle.ts","..\\..\\..\\view\\calcOutlineOrigin.ts","..\\..\\..\\view\\calcTransform.ts","..\\..\\..\\view\\tweenFrom.ts","..\\src\\functions\\calcFocusOffset.ts","..\\src\\functions\\calcSegments.ts","..\\src\\functions\\projectScroll.ts","..\\src\\functions\\updateLayout.ts","..\\src\\LayoutImpl.ts","..\\..\\..\\react\\measure\\measure.tsx","..\\src\\MeasuredSegment.tsx","..\\InfiniteList.tsx","..\\..\\..\\utils\\getRandomIntInclusive.ts","SegmentExample.tsx","Demo.tsx","Parcel.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,yBACI,MAAsB,EAAE,KAAe;IAEvC,OAAO,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;ACJ9B,SDKS,GAAG,CAAC,UAAA,GAAG,ACLmC,QAAqB;IACpE,IDIgB,GCJT,IDIS,ECJH,CAAC,IAAI,CAAC,EDID,GAAC,GAAG,ACJK,CAAC,GDIH,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,KAAE;AEPtD,SDIS,GAAG,CAAC,UAAA,GAAG,cCJoB;AAGpC,IFIoB,CAAkC,CAAC,ECHnC,OAAA,SCD6B,CDC3B,GAAC,CCD2C,EDCxC,IAAG,UAAC,KAAoB,IAAK,OAAA,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,EAAzB,CAAyB,KAAE;AEJlF,IDII,KFIK,EEJE,IFII,CAAC,CEJC,CAAC,IAAI,CAAC,GFIN,EEJW,CAAC,CFIR,EAAE,IAAI,IAAK,OAAA,MAAM,AGRW,CHQV,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,EAAzB,CAAyB,CAAQ,CAAA;AACjE,AGRA,CHQC,GCLmB,CAA8D,CAAC,GCC1E,GAAG,CAAC,UAAA,GAAG,6BCJmC;ACItC,AJFb,AGDA,QCGa,AFAO,CDAX,GGAQ,GAAG,AHAL,ACAK,CDAJ,SGAQ,AFAF,CDAL,ECAM,EDAF,CCAK,CDAH,GGA0B,AFApB,CDAF,GGA0C,AFApC,CDAD,EDI/B,IIJoE,CHArC,IEHe,EFGT,CAAC,EGAwC,AFAvC,EEA6B,AFA3B,CEAqC,CAAA,AHAlC,CAAC,ECAF,EDAM,EAAE,IAAI,CAAC,EAAzB,CAAyB,CAAQ,CAAA;AACjE,AEAA,CFAC,sBECG,UAA8B;AFLlC,AIFA,IFSI,ADJgB,CAAwB,CAAC,ECInC,QAAQ,EETU,CFSP,IETyB,qBJM7C,MEGkC,CAAc,UAAU,CAAC,CAAA;IACxD,AETA,KHKK,ECIE,AETA,IHKI,CAAC,EGLE,KAAK,GHKN,EGLW,EHKP,EAAE,IAAI,GGLY,CHKP,GGLW,IHKX,CGLgB,KHKV,AGLe,CHKd,GGLkB,CAAA,EHKZ,CAAC,IAAI,EAAE,IAAI,CAAC,EAAzB,CAAyB,CAAQ,CAAA;AACjE,AGLA,ACFA,CJOC,AGLA,OFSO,OAAO,EAAE,AGXO,KAAU,4BHWF,CAAc,QAAQ,EAAE,UAAU,CAAC;ADRnE,AGHA,ICCI,IHWI,GGXG,IHWI,CGXC,CHWC,IGXI,KAAK,CAAA,CDCzB,YHKA,YCKgC,CAAc,QAAQ,CAAC;AETxD,ACDA,ACFA,CDEC,IHWI,CAAA,UIbkB,KFGQ,AEHE,KFGa;AFW9C,AGdA,CHcC,GEVG,AEHA,OFGO,AEHA,CFGC,IEHI,IFGI,CAAC,AEHA,IAAI,CFGC,ACFzB,ACDwB,CFGE,CAAA;AFE3B,AEDA,AGLA,ADEA,CFGC,AEHA,mBCF0B,CAAM,iBLchC;AEXD,AEHA,ICCI,OAAO,OAAO,CAAC,KAAK,ADCvB,UFGA,AGJiC,CAAA;AAClC,ACFa,CDEZ,OCFY,OAAO,GAAY,IAAI,CAAA;ADApC,gCAEC;;AEFD,kDAAiD;AACjD,ACDA,kDAAiD,IDCC;AAClD,ACAA,gBAA0B,KAAe,EAAE,YAAe,EDAzB;AAIjC,AENA,IDGI,OAAO,YCHqC,KAAQ,EAAE,GDGpC,CAAC,ICHuE,CDGlE,CAAC,IAAI,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,KAAK,CAAA;AAC3E,CAAC,GDEyB,AELtB,MAAM,CAAC,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C,CAAC,CJYE,EIZF,EAAE,CAAC,GAAA,EAAE,KAAK,EJYD,CAAA,IIZC,EAAE,AERU,MFQJ,QAAA,EAAE,OAAO,CGZgC,QHYhC,EAAC,CAAA;AACzC,AEPA,ACJA,CHWC,GJYG,OAAO,OMnBO,INmBI,CAAC,AOvBO,IAAa,CPuBf,CAAC,AOvBgB,EAAW,CPuBxB,CAAC,UAAA,GAAG,IAAI,OAAA,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,OAAO,CAAC,EAAvB,CAAuB,CAAC,CAAC,CAAA;AACjE,AIvBA,AEIA,AEPA,CR0BC,GOvBG,IAAM,UAAU,GAAG,MDIW,GAAgB,CCJ1B,GHUvB,CGVoC,mBCHa;ARqBlD,AQpBA,ACDA,IHQI,IAAI,ACJA,ODIO,ACJA,uBPsBd,CMlB8B,YGRgB,CDCC,YFON,CAAC,GAAG,CAAC,IAAE,OAAO,EAAE,CAAC,GAAC,CAAA;AEN5D,ACAA,IHQI,IAAM,ICLE,IAAI,CAAC,CAAC,EDKI,CCLD,EDKI,ECLA,AEHO,CFGN,GDKK,CAAC,CCLD,GAAG,EEHoB,CFGjB,CEHmB,QHQR,CAAC,GAAG,CAAC,CAAC,AGRoB,SHQX,CAAA,IERD;AAC9D,AEHA,IJWI,AGRA,IHQI,GGRG,CFGC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,AEHT,CHQD,AGRM,CHQL,ICLe,GAAG,GAAG,AEHL,EHQJ,AGRM,CHQL,EAAE,GERU,QCAO,GAAG,CAAC,CAAC,ACHE,CDGF;ADCtD,ACAA,ACAA,CDAC,GCAK,IJQS,CCLN,CAAA,EDKM,AIRD,GAAG,EAAE,CAAA,OJQH,EAAE,aAAC,EAAE,eERgC,MFQ3B,EAAE,uBAAM,CAAW;AEP7C,ACHA,ACIA,ACNA,IJQI,CAAC,CAAA,EDKG,IAAM,SAAS,CIPM,EJOH,IIPa,EAAE,OAAW,EACvB,GDH5B,GCGsC,EAAE,EFFI,IEEU,MCPG,+CLatB,CAAC,YAAY,CAAC,CAAA;AENlD,AGNA,IJQU,AGDN,IJMI,ACLE,AGDA,IJMI,IINI,GFDc,AECa,CJMvB,CINyB,CAAA,CJMtB,GEP2B,EACpB,IAA4C,EAC5C,QAA2D,EAC3D,IDDW,EAAhC,ACCkD,CGTd,YJQ/B,EAAE,aAAK,CAAoB,oBDKX,CAAC,SAAS,CAAC,CAAA;AKV3C,IJMU,ACDsB,AEC5B,IJKU,ACLJ,AGAA,IJKI,IILI,GAAG,ICNS,EDMH,CAAC,GFDI,AGLQ,EHKR,AGLU,MDMH,CAC/B,IAAI,ACP6C,CDO5C,CCP8C,CHKgC,CDCtD,AGCrB,CACJ,CHFD,AIN4D,EAAE,CDQzD,CAAC,ACRkE,GDQ/D,CACJ,GHHF,EAAE,CGGM,GAAG,MAAM,CHHZ,CAAkB,AGIrB,MAAM,GAAG,OAAO,CACnB,EACD,CAAC,CACJ,CACJ,CAAA,wFJFuE,EAD7D,eAAO,EAAE,mBAAW,CACyC;ICJxE,ACF4B,AES5B,ACdA,ILYI,ACLE,AGOA,ACdA,IAAI,EJOE,CDKD,AIEE,ACdA,EJOE,CDKD,AIEE,CCdC,CAAC,IDcI,CAAC,EFTK,EAAA,EGLC,CAAC,IDcI,CAC9B,CCfgC,CHKU,CAAC,CEUvC,ACf+B,CHKU,AEUxC,CFVyC,EAAE,AEUxC,CFVyC,AEW7C,EFX+C,CAAC,CDEhC,ACFiC,AEW7C,CHRR,AGQS,CChBqC,CAAC,CDgBnC,AChBmC,CDiBvC,MAAM,GAAG,MAAM,GAAG,MAAM,EACxB,GHVC,CAAC,EGUI,CHVD,EGUI,CHVD,KAAK,AGUE,EHVA,CGUG,EHVA,GAAG,EGUI,CAC5B,EHX6B,AGY9B,CHZ+B,EACnC,GGWU,CAAC,MAAM,CAChB,CACJ,CAAA,gBHbQ,CAAC,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,EAAE,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,CACxD,CAAA;IAED,AGWA,ACtBA,IDsBI,ACtBE,GJWC,CDCC,AKZE,CLYD,EAAE,AKZE,OLYK,CAAC,CAAC,GIUR,CAAC,ECtBM,CAAC,IAAI,CDsBH,CAAC,ACtBI,GJWd,CAAC,AGWa,MHXP,AIXO,CJWN,CAAA,EIXU,IAAI,KDsBA,CAAC,CCtBD,EAAE,CAAC,GDsBK,CAAC,EAAE,CCtBD,CAAC,IAAI,CAAC,EAAE,CAAC,EAAnB,CAAmB,CAAC,CAAA;AJY1D,CAAC,GIXG,IDsBI,ACtBA,ILYI,AIUE,CJVD,EAAE,MIUQ,CJVD,CAAC,CAAC,AIUE,IAAI,CAAC,CCtBZ,CAAC,GDsBgB,CAAC,ACtBb,CAAC,IAAI,GDsBgB,CAAC,KAAK,GAAG,QAAQ,CAAC,CCtBvB,CAAC,CDsByB,GCtBrB,CAAC,IDsB4B,CAAA;AH3B1E,QG4BQ,ACtBA,ILYI,AIUE,GCtBC,ELYE,EAAE,AIUE,ECtBA,CDsBG,ACtBH,CLYE,CAAC,EIUI,CJVD,AIUE,CJVD,EIUI,CACpB,IAAI,CAAC,EHbhB,CDEsC,CAAC,AIWnB,CJXoB,AIWnB,GJXsB,IIWf,CAAC,EJXqB,CAAC,CAAC,CAAC,AIWnB,GAAG,QAAQ,CAAC,GAAG,QAAQ,EAC9C,MAAM,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAC/B,CAAA;ICxBL,IDyBI,ACzBE,ILYE,CIaC,IAAI,CJbC,EAAE,EIaE,EJbE,CAAC,AIaA,GJbG,CAAC,AKZE,GAAG,EDyBA,EAAE,ECzBI,ELYA,CAAC,AIaA,ACzBE,CLYD,GAAG,AIaA,OJbO,AIaA,ACzBE,CLYD,CAAC,AIaA,CJbC,AKZE,IDyBE,ACzBE,CAAC,CDyBD,EAAE,GCzBK,CAAA;ACTpE,IDUI,IAAM,ILYE,AIaA,OJbO,CIaC,CJbC,AIaA,CJbC,GIaG,CAAC,GCzBK,GDyBC,ACzBE,CDyBD,ACzBE,UDyBQ,CAAC,KAAK,CAAE,CAAC,CAAA,ECzBI,GAAG,ECVD,EDUK,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAA;ACNrF,IDOI,KLYK,AIaA,CJbA,CKZE,IAAI,CAAC,IHAN,EAAE,AGAU,GHAK,AGAF,CAAC,WAAW,CCPG,EDOA,IHAL,EAAE,CAAA,cGAwB,CAAC,CAAA;AAC9D,ACNA,CDMC,ILYI,AIaA,eFzBD,EINyB,UAAkB,EAClB,CJKV,CAAC,GAAG,CAAC,IILyC,EACpC,CJIE,EAAE,EAAE,CAAC,CAAA,AIJoC;ADJxE,ILsBI,AIaA,AE9BA,IAAI,GNiBG,AIaA,IE9BI,GNiBG,AMjBA,CNiBA,AIaC,CFzBT,AEyBS,IFzBL,GAAG,CILW,CAAA,SDG3B,0BHEiC,CAAC,OAAO,CAAC,CAAA;AFa3C,AIaA,CJbC,AIaA,GE9BG,IAAM,YJKA,CILa,GJKT,AILY,CAAC,EJKV,OILmB,CAAC,OAAO,CAAC,OJKlB,CAAC,EIL2B,EJKvB,AILyB,CJKxB,CAAC,CAAC,CAAC,IAAI,EIL2B,CAAC,CAAA,kBJKvB,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAA;AFR1D,AOPA,AHMA,IEKI,IAAI,YJKE,CILW,EAAE,GJKP,GAAG,OEwBlB,UJbA,YEX+B,CAAC,IAAI,EAAE,IAAI,AKhBiB,CLgBhB,CAAA;AKf5C,QDWQ,OAAO,GAAG,EJMd,KINqB,CAAC,CJMf,CAAC,EINkB,CAAC,EJMd,CAAC,OINuB,CAAC,CAAA,CJMd,GAAG,MAAM,CAAA,EKjB4B;AAKjE,KDOK,eJMD,OAAO,CAAC,KAAK,CAAC,SAAS,GAAG,MAAM,CAAA;IKgEhC,ADrEA,IAAM,YJMN,IK+DY,EDrEY,CJMjB,CAAC,CINmB,GCqEmB,CL/DjC,CAAC,AKgEF,EDtEsB,CAAC,IJMd,AINkB,CAAC,EJMhB,GKgEK,ELhEF,AKiEf,GDvE4B,CJMT,CAAC,IINc,GJML,AKiEe,CLjEf;QK+DzC,ADpEI,IAAM,QJOV,AIPkB,GAAG,EC6FpB,KD7F2B,CAAC,OAAO,CAAC,EJO/B,IIPqC,CAAC,EAAE,CAAC,CAAA,8BJOvB,EAAE,EAAA;QKgEtB,ADtEA,ICsEI,ADtEA,CCsEC,aAAa,GAAG,IAAI,CAAC,ADtEX,CAAC,ECsEa,CAAC,KDtEN,CAAC,OCsEkB,EAAE,CAAC,CAAC,CAAA;QAC/C,IAAI,ADtEA,CCsEC,MDtEM,CJKf,EKiEkB,CDtEC,CAAA,CCsEE,ILjEK,CAAA,GKiEG,CAAA;QACzB,ADtEA,ICsEM,GDtEC,KJKX,CKiEmB,EDtEA,CJKf,AKiEkB,ADtEF,ECsEI,CAAA,GDtEE,KAAK,IJKZ,CAAC,CILiB,CAAC,CJKf,CAAC,IILoB,CAAA,EJKb,CAAC,KAAK,EAAE;IIJvC,CAAC,CAAC,CAAA,CCsEE,IAAI,CAAC,SAAS,CAAC,CLjEf,MKiEsB,CAAC,UAAC,EAAE,EAAE,CLjEtB,IKiE2B,IAAK,OAAA,SAAS,CAAC,EAAE,CAAC,GAAG,KAAK,EAArB,CAAqB,CAAC,CAAA;ACzFpE,IFoBI,ICsEI,ADtEA,ICsEI,CAAC,OLjEH,EKiEY,GAAG,CDtEC,EAAE,CEpBE,INyBP,CKiEW,CAAA,CLjER,uBAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAA;AMvBhF,QDyFQ,ADtEA,ICsEI,CAAC,EDtEE,GAAG,EJKd,KILqB,CAAC,CJKf,AKiEgB,CLjEf,EKiEkB,ADtEA,EAAE,CJKf,AILe,CJKd,AKiEgB,ECzFI,QNwBV,GAAG,qBKiEwB,CAAC,CLhEtC,aAAa,wBAAmB,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,8BAC9C,aAAa,wBAAmB,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,YAC/D,CAAA;AM1BL,ACHA,QHsBQ,ICsEI,GDtEG,CAAC,IJQZ,GIRmB,CAAC,GJQb,AO9BqB,CP8BpB,AK8DgB,EAAE,GL9Db,CAAC,AK8DgB,ADtEV,CCsEW,KDtEL,GJQH,CIRO,EJQJ,EK8DkB,GDtEd,CJQE,CAAA,KIRK,CAAC,MAAM,CAAC,GEnBI,GFmBE,CAAC,EAAE,EAAE,MAAM,CAAC,MAAM,CAAC,EAAxC,CAAwC,CAAC,CAAA;AElB3E,ACHA,KHsBK,OCsEO,MAAM,EL9Dd,AK8DgB,IAAI,CAAC,EL9Dd,CAAC,CO9BmB,IP8Bd,CAAC,AK8DgB,CAAC,ML9DV,AK8DgB,GL9Db,GAAG,CAAA,KM3BkB;AACjD,AELA,ADEA,IHsBI,KCsEK,CAAC,CAAA,ADtEC,OAAO,CAAA,CJSd,OQjC4B,cRiCtB,MM5BiC,WCHqB,QP+B3C,CAAC,aAAa,CAAC,EAAA;AMzBpC,AEPA,ADGA,AHqBA,CAAC,OCuEO,IAAI,CAAC,YAAY,GAAG,CG/FE,KH+FI,CAAC,MAAM,CAAC,EAAE,EAAE,UE5FM,EF4FM,CAAC,CAAA,ECxFK;AAEhE,AEPA,ADKA,AHFA,QC2FQ,MAAM,CAAC,ECvFS,EDuFL,CLhEf,AKgEgB,IAAI,CAAC,CCvFmC,GNuBxB,CAAA,MIRnC,CCwEoC,CAAC,kBG9Fe;AAErD,IFMI,ACHiC,SF0FxB,OLhET,AKgEgB,CAAC,GLhEb,OKgEa,QLhEE,CAAC,AKgEM,GLhEH,CAAC,GO1BmC,IP0B5B,CAAC,CQ7Ba,IR6BR,EAAE;AQ5B3C,IDiBI,IDZkB,IDwFN,IAAI,QLhEZ,KOZQ,KAAY,CF4EA,CAAC,GCxFsD,EDwFlD,CAAC,EG9EX,ERcT,KKgE6B,CAAC,SAAS,CAAC,CAAC,EAAE;AG7EzD,QFAQ,ACCJ,QF6EgB,ILhEhB,AOZI,CDFY,AD8EI,CAAC,IC9E0C,CNcxD,CAAC,KAAK,CAAC,EKgEqB,CAAC,CE5E1B,KAAK,CPYS,AOZR,GPYW,CKgEoB,CAC3B,ILjEa,AOVhC,CPUgC,AKiET,CAAC,SG/E+B,AH+EtB,CAAC,SAAS,CAAC,EACzB,KAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAC/B,CAAA;AIvGrB,ADuBA,QDRY,IDOJ,CDkFS,OLnEb,IMdQ,ECRY,GAAG,MPsBR,CAAC,GOtBQ,GDQV,ANcQ,CAAC,EOtBW,EDQf,CAAC,ENcU,AQdY,CRcX,CAAA,KMA1B,sCGrCsF;ADwB/F,YFCY,ACTJ,IAAM,CDSE,AD+EO,CC/EN,ACTD,GAAG,KDSM,ACTF,CAAC,EDSI,GCTC,CDSG,ACTF,EAAE,CAAA,qBCQU,UFCI,CAC9B,UAAC,OAA8B,EAAE,QAAwB;AGxBzE,ADuBA,YDPQ,IDSY,AD8EA,AEvFR,IDSc,GD8EC,GC9EK,ED8ED,CC9EI,AD8EH,EIvGM,GAAW,CFgB7B,CDSsB,AGzBS,AFgB9B,CDSsB,CAAC,CAAC,AGzBiB,CHyBhB,CD8EF,AEvFnB,CFuFoB,AEvFnB,KAAK,CAAC,GDSyB,AD8EH,CC9EI,AD8EH,CAAA,KC9ES,AEFV,CFEU,GCTlB,CAAC,EAAE;ACQjD,ICvBI,GAAG,GAAG,GJuGO,CIvGH,CAAC,CHyBK,ACTR,GEhBO,CHyBO,AGzBN,CFgBJ,CAAC,CEhBM,CAAC,CHyBO,AGzBN,EFgBH,CDSY,ACTX,ODSkB,CAAC,CAAC,CAAC,CAAC,CEFR,EDPA,CAAC,EAAC,EAAE,GDSe,CAAC,ACThB,EAAE,GDSmB,CAAA,ECTb,QAAA,EAAC,CAAC,CAAA;ACSnD,AE5BA,IDII,GAAG,CJuGK,CAAC,CIvGH,AJuGI,CAAA,EEvFL,CEhBK,CAAC,CHyBK,IAAI,AGzBJ,CAAC,GAAG,CAAC,CAAC,aHyBM,CAAC,AI7BQ,KJ6BJ,CAAC,KAAK,CAAC,CEDK,aFCS,CAAC,EAAE;AEA7D,AE5BA,CVqCC,GSjCG,AJuGA,CAAC,GEvFD,CAAC,CAAA,CEhBM,IAAI,CAAC,IHyBQ,CGzBH,CAAC,GHyBM,CAAC,AGzBH,CAAC,ECJI,EJ6BG,CAAC,CGzBF,EAAE,GAAG,CAAC,GAAG,GAAG,CHyBI,CAAC,CGzBF,GAAG,ADwBH,CCxBI,CHyBI,AGzBH,CHyBI,AGzBH,CHyBG,EGzBA,GAAG,CAAC,CAAC,uDAAuD;AACrH,ATCA,AQuBA,AG9BA,ADGA,CDGC,GJCG,IEkBI,KAAI,CAAC,GDMQ,ICND,GAAG,EFlBR,GMPe,CXsC7B,WOb6B,CAAC,KAAK,CAAC,AGtBO,CF2BE,MDLF,CAAC,CAAA,GFlBpB;AILzB,ATsCA,AQTA,AG9BA,ACDA,AFIA,IVoCM,SKjCF,GCyBgB,GNQC,CMRG,ENQ8B,IAAI,GYxC5B,IZwCmC,EAAuB,CAAA,GMRxD,CAAC,KAAI,AEDI,CFCH,EK/BM,GL+BD,CAAC,EG1B3C,WH0BwD,CAAC,EAAE,UI5Bc;AF4B1E,AG7BA,ACFA,AFMA,IHmBI,CAAC,OFlBG,OAAO,CCyBS,GDzBL,CAAC,CCyBQ,CAAC,KAAK,CAAC,CDzBN,CAAA,EOPQ,SNgCW,AEDP,CFCQ,KAAK,AK9BP,CL8BQ,CAAA;AEAvD,AG5BA,ACHA,ILOI,AIJE,ADE8B,ILEhC,CAAC,KMJW,GL6BK,AK7BgB,EAAE,CAAA,gBJI7B,GAAN,OGFwE,CF0BjC,cI/BK;AJgChD,AG5BA,ACHA,IFsCI,CCnCC,GJIS,CIJL,CAAC,EL6BM,ACzBF,CDyBG,AK7BJ,CL8BA,AK9BC,CL8BD,CK9BG,CAAC,GAAG,MAAM,CJIY,CIJV,ADmCZ,CH/BD,AIJc,EAAE,ACHJ,EDGM,ADmCM,MH/BtB,EAAE,gBAAK,CAAc,CCwBiB;AACvD,AI9BA,IDEI,ACFE,ILMS,AKNL,AFoCN,GEpCS,CLME,EIJD,CAAC,IAAI,ACFE,CDED,ACFE,AFqCd,CCnCa,CAAC,QAAQ,EAAE,CAAC,CJIX,AIJW,ACFG,CLMN,AKNO,GFqCvB,GErC6B,CAAE,CJ8BN,AI9BM,AFqC1B,CAAC,SAgBf;AFtBL,AI7BA,CDCC,MNCI,CC4BG,ACzBA,AKLA,AFoCA,CJNC,AM9BA,GFoCK,GH/BC,AKLA,CACX,AFmCc,GAAG,eAAM,CH/BX,AG+BY,CEnCvB,MLIkB,EG+Bc,CAAC,CH/Bd,CCwB0C,CDxBxC,EAAE,AG+Be,CAAC,CH/Bd,CG+BgB,CH/Bd,AG+Be,EAAE,GH/BZ,CG+BgB,CH/Bd,AG+Be,KH/BV,AKJ1B,CFmC0C,CH/Bd,CG+BgB,CEnC3C,EFmC8C,GAAG,CAAC,CAAC,CAAC,IH/BX,EAAE,AG+Be,CAAC,CAAC,CEnC3C,AFmC4C,CH/Bd,CAAC,AKJ7B,KFmCiD,CAAC,CAAA,GEnCjD,ELIwC,AKJjB,GLIoB,CAAA;ACyBlF,AG3BA,INCI,AEEA,CAAC,GDDG,AIgCA,IEpCgC,KFoCvB,CAAC,KAAK,CAAC,ELjChB,AKiCkB,CAAC,CJhCb,EIgCgB,CJhCtB,GIgC0B,CAAA,WEpCoB,EAAE,EJ6BV,MH1BhC,QOH+C;AJ8B7D,IDTA,AInB0B,ICDlB,AFqCA,IJlCA,AIkCI,CLnCR,EOFI,EFqCgB,CAAA,QHjBvB,GDdQ,OKDP,QCLW,KAAK,EAAE,EAAC,KAAK,EAAE,MAAM,CJ6B6B,AI7B5B,UAAU,EAAE,SAAS,EAAE,WAAW,EAAC;AJ8BtE,ADVA,CArBA,AAqBC,CArBoC,EI+BjC,GJ/BsC,CAAC,AGwCnC,IJnCI,ADDJ,AOFK,AFsCD,IEtCK,AFsCD,CEtCE,CD6BF,CN3BD,EEJyC,AGwCnC,ECTI,CJVxB,EKnB0B,CAAC,AFsCD,EAAE,SLpCN,CAAC,EOFkB,EPEd,AOFgB,CPEf,GOFmB,EAAE,CAAC,CAAC,UJ6BK,AH3BX,CAAC,ECCiB;AE2BhE,ADhCa,QI+BT,ILzBQ,AMHC,AFsCD,ILpCA,AOFK,AFsCD,CLpCH,AOFK,CPEJ,CCCK,CK0BX,ADSY,ELpCF,CAAC,AKoCI,GEtCI,CAAC,KAAK,AFsCD,CAAC,CEtCE,ID6BrB,AC7ByB,AFsCD,CJnClB,AImCmB,CLpCH,AOFK,CAAC,AFsCD,CHzCb,AKGe,AFsCD,CCTvB,AC5BL,CD4BM,EDS0B,EJnCjB,KKgCxB,GDGmD,CAAC,EAAC,IFTC,CESI,EAAE,KJnC/B,IAAI,CAAC,KAAK,IAAE,GAAG,EAAE,UAAA,EAAE,IAAI,KImC6B,CAAC,CJnC9B,AImC+B,EAAE,EAAE,CJnC/B,AImCgC,CJnC/B,CImCgC,CAAC,CAAA,WJnCnB,CAAC,EAAE,CAAC,EAAvB,CAAuB,IAAG,CAAA;AE2BnF,ADNA,IAAM,AK1BE,CAGM,GNGN,AKgBJ,CLhBK,ECoBI,CGeD,EHfI,EFrBJ,CAAC,CAAC,GKoCO,CLpCH,AMiBN,ADmBU,CLpCH,EMiBJ,EJIe,AGeH,CHfI,AGeH,EAAE,CAAC,GAAG,CCnBlB,GDmBsB,CAAA,CLpCF,CMiBV,ENjBa,CEqBQ,CAAC,EFrBL,CAAC,aG2Ba,CH3BC,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAA;AG4BnF,IDNI,AKtBI,INyBA,ADxBJ,AEqBI,CFrBH,CEqBK,EIJF,ADmBI,ICnBA,CDmBI,CAAC,ECnBD,CAAC,EDmBK,CCnBF,AClBX,CDkBY,CDmBI,EAAC,GCnBC,CAAC,ADmBE,GCnBC,AClBlB,EDkBoB,CDmBH,CCnBK,CDmBH,EJZJ,AMzBb,CACK,CFoCgB,CJZ5B,AMvBJ,EJ0BuC,EI1BnC,CACP,AFkCmC,CElCnC,CFkCoC,CAAA;AFRrC,QDNQ,CGeC,GJZG,GCHG,CDGC,AKPJ,CLOK,ACHA,IIJD,CAAC,EJIO,CDGC,CAAC,IKPD,CAAC,EAAC,GLOS,EAAE,CAAA,KKPA,EAAE,CAAC,EAAC,CAAC,CAAA,MHUW;AAMtD,QFRQ,ACHA,CDGC,IKPA,ADkBM,EHdA,EAAE,SAAS,YCWc;AAExC,OHpCK,CC4BW,ACJR,IGcI,EHdE,EAAE,AGcE,CCnBH,IDmBQ,CHdD,EGcI,QAAQ,CAAC,GJVL,EIUU,CJVhC,AIUiC,EAAE,CAAC,OJVb,GAAQ;IEQL,AHhCvB,IEqBH,IDII,IAAI,AKTJ,CLSK,CCJC,CGcC,CHdC,CILJ,CAAC,ILSS,ECJE,CDIC,CKTJ,CNhBR,AMgBS,CLSM,CAAA,AKTL,CNhBvB,UGgC2D,AHhC7C,AMgBoB,ENhBP,AMgBS,ENhBP,EKmCe,CCnBJ,CAAC,KNhBC,AMgBI,CAAC,MAAM,GAAG,CAAC,EAAC,CAAC,CAAA,uBDmBM,CAAC,GAAG,EAAE,GAAG,CAAG,CAAA;IF4C7E,CDzDC,GFrBG,ICyBI,ADzBE,AKmCF,CCnBH,GLSS,CDzBC,ECyBE,CDzBC,AKmCF,CAAC,CJVgB,EDzBX,CCyBc,ADzBb,CG8EX,AE3CU,CAAC,EAAE,CAAC,CF2CF,EE3CK,CLnCG,CAAC,ECyBe,ADzBb,CAAC,AKmCF,CLnCE,AKmCF,GJVmB,CAAC,SAAS;CCHlE,CAAC,CAAC,KCwDC,AH7EI,AMgBJ,CJKK,AILJ,CAAA,CJKM,CFrBC,AEqBA,AGcA,IJVI,ADzBA,CCyBC,ADzBA,AKmCD,CJVE,AIUD,CHdE,CCyDX,ADzDW,GGcG,GJVI,AIUD,CJVE,CIUD,ELnCI,EKmCA,ELnCI,CAAC,GCyBG,AEqDxB,AE3CgB,CJVS,ADzBA,CKmCP,EJVU,CAAC,AEqDxB,CAAC,CE3CiB,GLnCW,GAAG,CAAC,AKmCf,CFwDhC,CExDiC,CAAA,CLnCkB,sBAAW,CAAC,KAAK,CAAC,EAAE;QGuJvD,AGnIb,CDgBC,GLnCG,CMmBA,CAAC,ELMG,CAAC,CAAC,AE6HO,CHtJN,AMmBD,ELMG,AE6HqB,CF7HrB,AKNA,CNnBE,CAAA,CGsJuB,2BAAY,EAAE,CAAA;QAIvC,CHzJZ,GCyBG,AKNA,ILMI,CKNC,EAAE,CLMC,CAAC,IKNI,CAAC,EHsIS,EFhIL,CEgIQ,IFhIH,CKNC,ELME,EAAE,oBEgIW,CAAU,aAAa,CAAC,CAAA;IEtHvE,CAAC,GFuHgB,AHxJb,IAAM,AMkBF,ILMI,EKNE,EAAE,GLME,EDxBK,CGwJM,AGtIP,CAAC,CNlBG,CGwJM,GHxJF,CAAC,KMkBG,SNlBW,CAAC,UGwJD,AHxJW,CGwJH,AHxJI,KAAK,CAAC,CAAA,IGwJC,CAAC,CAAA;IEzKjE,IF6NiB,AH3Mb,IAAI,AMkBA,CLMC,UKNU,ENlBE,AMkBA,CAAC,GHyLU,CH3MN,EG2MyB,IAAI,GH3MpB,EAAE,KKlBpB,GAAjB,oBF6NsE,CAAC,CAAC,CAAC,CAAA;QAjIrE,AE5FJ,CCqCK,CAAA,ELMG,ADxBA,CGyEA,CAAC,EFjDG,GDxBG,GGyEE,CHzEE,CAAA,CGyEC,AEpFnB,UJmCmB,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;QI1ClC,CLmBC,GGyEG,AE5FA,CAAC,GJ2CG,IAAI,CAAC,AEiDA,AE5FA,EF4FE,CE5FC,KJ2CK,CAAC,CEiDC,CAAC,GE5FG,CAAC,GJ2CG,CAAC,IAAI,CAAC,AEiDA,CAAC,KAAK,CAAC,EFjDE,CAAC,CAAA;IKNnD,CAAC,GNjBG,IGyEI,AHzEA,AKnBA,CLmBC,GCwBG,AI3CA,GF4FG,CFjDC,CAAC,AEiDA,AE5FD,CAAC,KLmBM,AKnBD,CLmBE,AKnBD,CF4FE,CFjDC,AEiDA,EE5FC,CJ2CE,II3CG,ELmBG,CAAC,GGyEG,AE5FD,CF4FE,CHzEC,EAAE,EGyEE,CFjDT,AEiDU,CFjDV,KDxBgB,CAAC,CAAA;IMdrD,INeI,IGyEI,AHzEA,CCwBC,ADxBA,GKnBG,IF4FI,EAAE,CE5FA,ECIZ,CHwFgB,EGxFtB,CHwFyB,CHzEC,CGyEyB,EHzEtB,SAAS,CAAA;QAClC,AMfM,CHwFL,CAAA,EFjDG,ADxBA,AMfE,ADJF,CLmBC,GCwBG,AI3CE,IAAI,GAAG,ELmBA,CAAC,CMf6B,CNe3B,CAAC,AMfd,GNeiB,CKnBG,CAAC,CJ2CZ,CAAC,AI3CY,GJ2CT,CAAC,CDxBY,AKnBC,CJ2CX,ADxBU,CKnBG,ECIxB,EAAE,kBAAM,EAAE,qBDJmC,CAAC,CAAC,EAAE,EAAE,CCI9B,ADJ+B,CCIjB,CDJkB,CAAC,CAAA;QF8FlE,AH1EA,AMdA,IHwFM,AE7FF,GLmBG,AMdA,CLsCC,EEkDI,CH1ED,CCwBC,ADxBD,CCwBE,AEkDE,AE7FF,CAAC,GF6FK,EE7FD,CAAC,CJ2CE,CAAC,GI3CE,CAAC,CCKjB,CDLmB,CJ2CE,AI3CD,CJ2CE,EI3CC,CJ2CE,CAAC,CAAA,CI3CC,CAAA,GF6FN,CAAC,KAAK,CAAC,OGxFhB,GHwF0B,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,AGxF3C,CHwF4C,MAAM,AGxF3C,EAAE,CHwF4C,CAAC,CAAC,EAAE,EAAE,CAAC,CAAA,sBGxFrC,IACnB,EAAC,KAAK,OAAA,EAAE,MAAM,QAAA,EAAE,UAAU,YAAA,EAAE,WAAW,aAAA,EAAC,IAC5C,QAAQ,EAAE,IAAI,CAAC,QAAQ,IAAG,CAAA;INanD,AMZA,CNYC,AMZA,GHsFG,IAAM,AE7FF,IJ2CI,CI3CA,CAAC,EJ2CG,CAAC,EEkDI,GAAG,AE7FH,CAAC,EAAC,CJ2CG,GAAG,AI3CF,GJ2CK,CAAA,EI3CL,EAAC,CAAC,CAAA,gBF6FU,CAAC,KAAI,CAAC,KAAK,CAAC,WAAW,EAAE,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAA;IHxE3E,AMZP,IHqFI,AE7FA,CAAC,EAAE,CF6FG,CFlDD,IEkDM,GAAG,YHzEJ,GGyEU,AHzExB,CGyEyB,AGrFR,GAAjB,EHqF8B,CAAC,GHzEhB,EGyEqB,AHzER,EGyEU,OE7FV,CAAC,EF6FS,EE7FL,EAAE,CF6FQ,GE7FJ,CF6FQ,AE7FP,CAAC,CAAA,KF6FM,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,EAArB,CAAqB,CAAC,CAAA;IE5FrE,CAAC,GJ2CG,AEkDA,AHzEA,AMbJ,CLoCK,GEkDK,AHzEF,IAAI,CAAC,CGyEG,GAAG,IGhFlB,KNOyB,KAAK,CGyEN,AHzEO,CGyEF,CHzEI,cGyEE,CAAC,KAAK,EAAE,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,MAAM,GAAG,WAAW,EAA1B,CAA0B,CAAC,EAAE,CAAC,CAAC,CAAA;IE3FpF,IJ0CA,AEkDI,AGtFA,IHsFM,AH1E0B,EMZ1B,CAAC,GLoCV,CDxB0C,CG0EzB,GAAG,KH1E+B,CAAA,EMZzB,CAAC,QAAQ,EAAE,ODNlB,CF4Fa,CAAC,CE5FlC,KF4FwC,EAAE,CAAC,EAAE,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;IFlDlE,CAjDA,AAiDC,CAjDiB,EEoGd,AE5FA,CLiBkD,ECzB/B,CAAC,AKchB,CHsFA,CAAC,EGtFK,GHsFA,EGtFK,ADNF,CF4FA,AE5FC,EF4FA,AGtFI,CLde,CIQf,CAAC,CJyCtB,EEmDuB,AGtFI,CAAC,IDNE,CAAC,CAAA,CF4FR,EAAE,CGtFa,CAAA,IHsFP,QAAA,EAAE,QAAQ,UAAA,EAAE,aAAa,EAAE,IAAI,EAAC,CAAA;IFjDhE,AI1CA,CAAC,GLiBG,IAAM,AMXF,IAAM,CNWC,GAAG,EMXE,ELoCA,ADzBE,CCyBD,ADzBE,AMXA,GLoCC,EAAE,CKpCG,CAAC,ENWE,CAAC,EAAE,CAAC,CCyBD,ADzBC,CCyBA,CAAA,EKpCK,CAAA;ILsCzC,AEgDA,AE1FA,CF0FC,GH1EG,GC0BG,CD1BC,AMXA,ELqCE,CAAA,EKrCE,CAAC,QAAQ,CAAC,EAAC,KNWJ,AMXS,CNWR,AKhBd,GAAN,ELgByB,CAAC,AMXE,ENWA,AMXE,MAAM,QAAA,EAAC,CAAC,CAAA;ALsC1C,CAAC,GEbU,IGxBH,ADLA,CCKC,CAAC,CAAA,CNUwB,GKfnB,ILe0B,SAAS,CAAA,IGcjC,GAAb,QE7BgB,KAAK,EAAE;AJb3B,IKmBI,CAAC,GHwBS,CHfsC,GGetC,IE7BF,KF6BiE,EAA9D,AE7BI,EAAE,CJyCpB,MIzC2B,OF6BR,EAAE,gBAAK,EAAE,kCAAc,EAAE,sBAAQ,EAAE,kCAAc,CAAQ;IGN7E,IHOe,AHfP,IGeO,AHfD,GMQb,CDtBW,ELcQ,GAAG,AKdN,EAAE,ELcQ,CAAC,CKdL,CAAC,KAAK,CAAC,CF6BR,EAAE,EE7BW,CLcO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA,GGezB,EAAE,qBAAM,CAAS;AGP9C,CArCA,AAqCC,CArCyB,KAAK,CH6ChB,AHfP,AM9BwB,IH6CjB,AHfD,IKdF,CChB6B,CN8BrB,EMOnB,CNPsB,IAAI,CAAC,KKdD,EAAE,IF6BN,EAAE,CHfiB,AKdN,CLcO,UAAU,CAAC,KAAK,CAAC,CAAA,CGe7B,EAAE,mCAAa,CAAS;AG7C1C,QH+CL,AHhBA,IGgBM,AHhBA,IKdF,ICjBK,EH+CO,EE9BJ,CF8BO,AHhBA,CKdL,ELcQ,IAAI,CAAC,KGgBK,AE9BN,QLcc,CAAC,EAAE,CAAC,CAAA;QAC5C,IGgBI,CAAC,CAAC,CHhBC,CKdH,CLcI,EAAE,IAAA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","file":"9e7fa79bf1a466d2156509170034e929.map","sourcesContent":["import {Observables} from './Observables'\nimport {Pipes} from './Pipes'\n\nexport function applyMiddleware<T extends object>(\n    origin: Observables<T>, pipes: Pipes<T>\n): Observables<T> {\n    return Object.keys(origin)\n        .map(key => ({[key]: pipes[key](origin[key])}))\n        .reduce((prev, curr) => Object.assign(prev, curr)) as any\n}\n","import {Subjects} from './Subjects'\n\nexport function createPublishers<T extends object>(subjects: Subjects<T>): EventHandlers<T> {\n    return Object.keys(subjects)\n        .map(key => ({[key]: (value: T[typeof key]) => subjects[key].next(value)}))\n        .reduce((prev, curr) => Object.assign(prev, curr)) as any\n}\n","import {Subject} from 'rxjs/Subject'\nimport {Subjects} from './Subjects'\n\nexport function createSubjects<T extends object>(names: ShapeOf<T>): Subjects<T> {\n    return Object.keys(names)\n        .map(key => ({[key]: new Subject()}))\n        .reduce((prev, curr) => Object.assign(prev, curr)) as any\n}\n","import {applyMiddleware} from './applyMiddleware'\nimport {createPublishers} from './createPublishers'\nimport {createSubjects} from './createSubjects'\nimport {Observables} from './Observables'\nimport {Pipes} from './Pipes'\n\nexport function createStreams<T extends object>(\n    middleware: Pipes<Required<T>>\n): EventChannels<Required<T>> {\n    const subjects = createSubjects<Required<T>>(middleware)\n    return {\n        streams: applyMiddleware<Required<T>>(subjects, middleware),\n        publish: createPublishers<Required<T>>(subjects)\n    }\n}\n\nexport type EventChannels<T extends object> = {\n    publish: EventHandlers<Required<T>>,\n    streams: Observables<Required<T>>\n}\n\n","import {Observable} from 'rxjs/Observable'\n\nexport type Pipe<A, B=A> = (source: Observable<A>) => Observable<B>\n\nexport type Pass<T> = Pipe<T, T>\nexport const Pass = <T>(observable: Observable<T>): Observable<T> => observable\n\n","export function existing<T>(maybe: T | nothing): maybe is NonNullable<T> {\n    return typeof maybe !== 'undefined' && maybe !== null\n}\nexport function notExisting<T>(maybe: Maybe<T>): maybe is nothing {\n    return !existing(maybe)\n}\n\n","export function isFalse(value: any): value is false {\n    return value === false\n}\n","export function isTrue(value: any): value is true {\n    return value === true\n}\n","export function isFunction(a: any): a is Function {\n    return typeof a === 'function'\n}\n","export const nothing: nothing = null\n","import {notExisting} from '../typecheck/existing'\nimport {isFunction} from '../typecheck/isFunction'\nimport {nothing} from './nothing'\n\nexport function assume<A, B>(a: Maybe<A>, func: (a: A) => B): Maybe<B>\nexport function assume<A, B, C>(a: Maybe<A>, b: Maybe<B>, func: (a: A, b: B) => C): Maybe<C>\nexport function assume<T>(...params: Array<Maybe<any> | ((...p: Array<Maybe<any>>) => T)>): Maybe<T> {\n    const func = params[params.length - 1]\n    const funcParams = params.slice(0, params.length - 1)\n    if (!isFunction(func) || funcParams.length < 1 || funcParams.some(notExisting)) {\n        return nothing\n    }\n    return func(...funcParams)\n}\n","import {notExisting} from '../typecheck/existing'\n\nexport function ensure<A>(maybe: Maybe<A>, defaultValue: A): A {\n    return notExisting(maybe) || Number.isNaN(maybe) ? defaultValue : maybe\n}\n\n","export function publishEvents<T extends object>(value: T, handlers: EventHandlers<Required<T>>): void {\n    Object.keys(handlers).forEach(key => handlers[key](value[key]))\n}\n","export type Pulse = any\nexport let Pulse: Pulse = true\n","import {notExisting} from '../typecheck/existing'\nimport {nothing} from './nothing'\n\nexport function calcSum(array: Array<number>): number {\n    return array.reduce((acc, curr) => acc + curr, 0)\n}\n\nexport function calcAverage(array: Array<number>): Maybe<number> {\n    if (array.length === 0)\n        return nothing\n    return calcSum(array) / array.length\n}\n\nexport function nearestToAverage(array: Array<number>): Maybe<number> { // TODO better name\n    const average = calcAverage(array)\n    if (array.length === 0 || notExisting(average))\n        return nothing\n    const sorted = array.sort((a, b) => Math.abs(a - average) - Math.abs(b - average))\n    return sorted[0]\n}\n\nexport function calcDeviation(array: Array<number>): Maybe<number> {\n    const average = calcAverage(array)\n    if (array.length === 0 || notExisting(average))\n        return nothing\n    return calcAverage(array.map(num => Math.abs(num - average)))\n}\n\n\n","export async function forDuration(duration: ms): Promise<void> {\n    return new Promise<void>((then) => setTimeout(then, duration))\n}\n","export async function nextAnimationFrame(): Promise<undefined> {\n    return new Promise(resolve => requestAnimationFrame(resolve)) as Promise<any>;\n}\n","// https://stackoverflow.com/a/44078785/1815491\nexport function uniqueID() {\n    return Math.random().toString(36).substring(2)\n    + (new Date()).getTime().toString(36);\n}\n","// ignoring rotate\r\nimport {ensure} from '../utils/ensure'\r\n\r\nexport function calcOutline(dom: HTMLElement): Outline {\r\n    const rect = dom.getBoundingClientRect()\r\n    const opacityCSS = ensure<string>(getComputedStyle(dom).opacity, '1')\r\n\r\n    const opacity = parseFloat(opacityCSS)\r\n    const {width, height} = rect\r\n    const x = rect.left\r\n    const y = rect.top\r\n\r\n    return {x, y, width, height, opacity}\r\n}\r\n","import {notExisting} from '../typecheck/existing'\n\nexport function hasStyle(style: Maybe<string>): style is string {\n    return !(style === 'none' || style === '' || notExisting(style));\n}\n\n","import {applyToPoints} from 'transformation-matrix/applyToPoint'\nimport {fromString} from 'transformation-matrix/fromString'\nimport {inverse} from 'transformation-matrix/inverse'\nimport {calcOutline} from './calcOutline'\nimport {hasStyle} from './hasStyle'\n\n// ignoring rotate\nexport function calcOutlineOrigin(dom: HTMLElement): Outline {\n    let outline: Outline = {...calcOutline(dom), opacity: 1}\n\n    const transformCSS = window.getComputedStyle(dom).transform\n    if (hasStyle(transformCSS)) {\n        const {x, y, width, height} = outline\n        const transform = fromString(transformCSS)\n        const inverted = inverse(transform)\n        const [topLeft, bottomRight] =\n            applyToPoints(inverted, [{x, y}, {x: x + width, y: y + height}])\n        outline = {\n            x: topLeft.x,\n            y: topLeft.y,\n            width: Math.abs(bottomRight.x - topLeft.x),\n            height: Math.abs(bottomRight.y - topLeft.y),\n            opacity: 1\n        }\n    }\n\n    return outline\n}\n","import {scale, toCSS, transform, translate} from 'transformation-matrix'\n\nexport function calcTransform(from: Outline, to: Outline): string {\n    const withAnchor = (rect: Outline): [px, px] => {\n        return [\n            rect.x + rect.width * 0.5,\n            rect.y + rect.height * 0.5\n        ]\n    }\n    const [fromX, fromY] = withAnchor(from)\n    const [toX, toY] = withAnchor(to)\n\n    const matrix = transform(\n        translate(toX - fromX, toY - fromY),\n        scale(to.width / from.width, to.height / from.height)\n    )\n\n    return toCSS(matrix)\n}\n\n","import {isFunction} from '../typecheck/isFunction'\nimport {forDuration} from '../utils/forDuration'\nimport {nextAnimationFrame} from '../utils/nextAnimationFrame'\nimport {uniqueID} from '../utils/uniqueID'\nimport {calcOutlineOrigin} from './calcOutlineOrigin'\nimport {calcTransform} from './calcTransform'\n\nexport async function tweenFrom(element: HTMLElement,\n                                from: Outline | ((curr: Outline) => Outline),\n                                duration: ms | ((prev: Outline, curr: Outline) => ms) = 200,\n                                easing: Easing = [0, 0, 1, 1]): Promise<void> {\n    const id: TweeningID = uniqueID()\n    singleTweenLock.set(element, id)\n\n    const curr = calcOutlineOrigin(element)\n    const prev = isFunction(from) ? from({...curr}) : from\n    const invert = calcTransform(curr, prev)\n\n    element.style.transition = 'none'\n    element.style.transform = invert\n    element.style.opacity = `${prev.opacity}`\n\n    await nextAnimationFrame()\n    if (singleTweenLock.get(element) !== id)\n        return\n    const tweenDuration = isFunction(duration) ? duration(prev, curr) : duration\n    element.style.transition = `\n        opacity ${tweenDuration}ms cubic-bezier(${easing.join(',')}),\n        transform ${tweenDuration}ms cubic-bezier(${easing.join(',')})\n    `\n    element.style.transform = 'none'\n    element.style.opacity = '1'\n\n    await forDuration(tweenDuration)\n    if (singleTweenLock.get(element) !== id)\n        return\n    element.style.transition = `none`\n    singleTweenLock.delete(element)\n}\n\nconst singleTweenLock: WeakMap<Element, TweeningID> = new WeakMap<Element, TweeningID>()\n\ntype TweeningID = string\n","import {ensure} from '../../../../utils/ensure'\n\nexport function calcFocusOffset(focusOffset: Maybe<px>, viewportHeight: px): px {\n    return ensure<px>(focusOffset, viewportHeight / 3)\n}\n","import {existing} from '../../../../typecheck/existing';\nimport {Layout} from '../types/Layout'\nimport {SegmentPosition} from '../types/SegmentPosition'\n\nconst pageSize = 10\n\nexport function calcSegments(scroll: px, preload: px,\n                             height: px, layout: Layout): Array<SegmentPosition> {\n    const segments: Array<SegmentPosition> = []\n\n    const floorSeg = layout.getByOffset(\n        Math.max(\n            Math.min(\n                scroll - height,\n                scroll + preload\n            ),\n            0\n        )\n    )\n    const ceilSeg = layout.getByOffset(\n        Math.min(\n            Math.max(\n                scroll + height + height,\n                scroll + height + preload\n            ),\n            layout.height\n        )\n    )\n    if (existing(floorSeg) && existing(ceilSeg)) {\n        const fromIndex = Math.floor(floorSeg.index / pageSize) * pageSize\n        const toIndex = Math.min(\n            Math.ceil(ceilSeg.index / pageSize) * pageSize,\n            layout.segmentIDs.length - 1\n        )\n        for (let index = fromIndex; index <= toIndex; index++) {\n            segments.push(layout.getByIndex(index)!)\n        }\n    }\n\n    return segments\n}\n","import {notExisting} from '../../../../typecheck/existing'\nimport {assume} from '../../../../utils/assume'\nimport {Layout} from '../types/Layout'\n\nexport function projectScroll(scroll: px, focusOffset: px, from: Layout, to: Layout): px {\n    const prev = from.getByOffset(scroll + focusOffset)\n    const curr = assume(prev, prev => to.getByID(prev.id))\n    if (notExisting(prev) || notExisting(curr))\n        return scroll\n    const prevHeightBeforeFocus = scroll + focusOffset - prev.offset\n    const currHeightBeforeFocus = (prevHeightBeforeFocus / prev.height) * curr.height\n    return curr.offset - (focusOffset - currHeightBeforeFocus)\n}\n","import {notExisting} from '../../../../typecheck/existing'\nimport {Layout} from '../types/Layout'\nimport {SegmentHeightUpdate} from '../types/SegmentHeightUpdate'\nimport {SegmentID} from '../types/SegmentID'\nimport deepEqual = require('deep-equal')\n\nexport function updateLayout(prevLayout: Layout,\n                             segmentIDs: ReadonlyArray<SegmentID>,\n                             updates: ReadonlyArray<SegmentHeightUpdate>): Layout {\n    let updated = prevLayout\n    const areIDsUpdated = !deepEqual(updated.segmentIDs, segmentIDs)\n    if (areIDsUpdated) {\n        updated = updated.join(segmentIDs)\n    }\n    const shouldUpdateLayout = updates.some(update => {\n        const existing = updated.getByID(update.id)\n        if (notExisting(existing))\n            return true\n        return existing.height !== update.height\n    })\n    if (shouldUpdateLayout) {\n        updated = updated.copy()\n        updates.forEach(update => updated.update(update.id, update.height))\n    }\n    return updated\n}\n\n","import FastBinaryIndexedTree from 'fast-binary-indexed-tree'\r\nimport {existing, notExisting} from '../../../typecheck/existing'\r\nimport {Layout} from './types/Layout'\r\nimport {SegmentID} from './types/SegmentID'\r\nimport {SegmentPosition} from './types/SegmentPosition'\r\n\r\nexport class LayoutImpl implements Layout {\r\n    public get segmentIDs(): ReadonlyArray<SegmentID> {\r\n        return this.indexToID\r\n    }\r\n\r\n    get height(): px {\r\n        return existing(this.cachedTotalHeight)\r\n            ? this.cachedTotalHeight\r\n            : this.cachedTotalHeight = this.prefixSumIndex.read(this.segmentsCount)\r\n    }\r\n\r\n    private cachedTotalHeight: Maybe<px>\r\n\r\n    public update(id: SegmentID, newHeight: px): this {\r\n        const index = this.idToIndex[id]\r\n        if (this.segmentsCount <= 0 || newHeight < 0 || notExisting(index)) {\r\n            return this\r\n        }\r\n\r\n        const currentHeight = this.prefixSumIndex.readSingle(index)\r\n        if (currentHeight === newHeight) {\r\n            return this\r\n        }\r\n        this.prefixSumIndex.writeSingle(index, newHeight)\r\n        this.cachedTotalHeight = undefined\r\n        this.knownHeights[id] = newHeight\r\n        return this\r\n    }\r\n\r\n    public getByID(id: SegmentID): Maybe<SegmentPosition> {\r\n        if (this.segmentsCount === 0) { return undefined }\r\n        const index = this.idToIndex[id]\r\n        if (notExisting(index)) { return undefined }\r\n        const offset = this.prefixSumIndex.read(index)\r\n        const height = this.prefixSumIndex.readSingle(index)\r\n        const isHeightKnown = this.isHeightKnown(id)\r\n        return {id, index, offset, height, isHeightKnown}\r\n    }\r\n\r\n    public getByIndex(index: number): Maybe<SegmentPosition> {\r\n        if (this.segmentsCount === 0) { return undefined }\r\n        const id = this.indexToID[index]\r\n        if (notExisting(id)) { return undefined }\r\n        const offset = this.prefixSumIndex.read(index)\r\n        const height = this.prefixSumIndex.readSingle(index)\r\n        const isHeightKnown = this.isHeightKnown(id)\r\n        return {id, index, offset, height, isHeightKnown}\r\n    }\r\n\r\n    public getByOffset(position: px): Maybe<SegmentPosition> {\r\n        if (this.segmentsCount === 0) { return undefined }\r\n        let bound = this.prefixSumIndex.upperBound(position)\r\n        const index = bound === this.segmentsCount ? bound - 1 : bound\r\n        const id = this.indexToID[index]\r\n        const offset = this.prefixSumIndex.read(index)\r\n        const height = this.prefixSumIndex.readSingle(index)\r\n        const isHeightKnown = this.isHeightKnown(id)\r\n        return {id, index, offset, height, isHeightKnown}\r\n    }\r\n\r\n    public copy(): Layout {\r\n        // const count = Math.max(Object.keys(this.knownHeights).length, 1)\r\n        // const height =\r\n        //     Object.keys(this.knownHeights)\r\n        //         .map(id=> this.knownHeights[id])\r\n        //         .reduce((acc, curr)=> acc + curr, 0)\r\n        //     || count * this.defaultHeight\r\n        // const averageHeight = height/count\r\n        // console.log(count, height, averageHeight)\r\n        // return new LayoutImpl(this.segmentIDs, averageHeight, this.knownHeights);\r\n        return new LayoutImpl(this.segmentIDs, this.defaultHeight, this.knownHeights);\r\n    }\r\n\r\n    public join(segmentIDs: ReadonlyArray<SegmentID>): Layout {\r\n        return new LayoutImpl(segmentIDs, this.defaultHeight, this.knownHeights);\r\n    }\r\n\r\n    constructor(segments: ReadonlyArray<SegmentID>,\r\n                defaultHeight: px,\r\n                knownHeights: Readonly<{ [id: string]: px }>) {\r\n        this.defaultHeight = Math.max(defaultHeight, 0)\r\n        this.indexToID = segments\r\n        const idToIndex = {}\r\n        this.indexToID.forEach((id, index) => idToIndex[id] = index)\r\n        this.idToIndex = idToIndex\r\n        this.prefixSumIndex = new FastBinaryIndexedTree({\r\n            defaultFrequency: this.defaultHeight,\r\n            maxVal: this.indexToID.length\r\n        })\r\n\r\n        this.knownHeights = Object.assign({}, knownHeights)\r\n        Object.keys(this.knownHeights)\r\n            .forEach(segmentID => {\r\n                if (existing(this.idToIndex[segmentID])) {\r\n                    this.prefixSumIndex.writeSingle(\r\n                        this.idToIndex[segmentID],\r\n                        this.knownHeights[segmentID]\r\n                    )\r\n                } else {\r\n                    delete this.knownHeights[segmentID]\r\n                }\r\n            })\r\n    }\r\n\r\n    private isHeightKnown(id: SegmentID): boolean {\r\n        return existing(this.knownHeights[id])\r\n    }\r\n\r\n    private readonly defaultHeight: px\r\n    private readonly indexToID: ReadonlyArray<SegmentID>\r\n    private readonly idToIndex: Readonly<{ [id: string]: number }>\r\n    private readonly knownHeights: { [id: string]: px }\r\n    private readonly prefixSumIndex: FastBinaryIndexedTree\r\n\r\n    private get segmentsCount(): number {\r\n        return this.indexToID.length\r\n    }\r\n}\r\n\r\n","import * as React from 'react'\nimport {ComponentClass} from 'react'\nimport * as ReactDOM from 'react-dom';\nimport ResizeObserver from 'resize-observer-polyfill'\nimport {existing} from '../../typecheck/existing'\nimport {nothing} from '../../utils/nothing'\nimport {SelfDecideHeight, SelfDecideWidth} from '../../utils/section'\nimport {PropsOf} from '../PropsOf'\nimport hoistNonReactStatics = require('hoist-non-react-statics')\n\nexport function measure(Component: React.ComponentClass<any>): Measured<typeof Component> {\n    class HOC extends React.PureComponent<PropsOf<typeof Component> & MeasureProps> {\n        render() {\n            // TODO what if Component renders multiple elements?\n            return <Component {...this.props} ref={it => this.updateObserver(it)}/>\n        }\n\n        private observer: ResizeObserver\n        private observing: Maybe<HTMLElement>\n\n        _instance!: InstanceType<typeof Component>\n\n        constructor(props: PropsOf<typeof Component> & MeasureProps) {\n            super(props)\n\n            this.observer = new ResizeObserver(\n                (entries: ResizeObserverEntry[], observer: ResizeObserver) => {\n                    const height = entries[0].contentRect.height\n                    const width = entries[0].contentRect.width\n                    if (existing(this.props.onHeightChange)) {\n                        this.props.onHeightChange(height)\n                    }\n                    if (existing(this.props.onWidthChange)) {\n                        this.props.onWidthChange(width)\n                    }\n                }\n            )\n        }\n\n        componentWillUnmount() {\n            this.observer.disconnect()\n        }\n\n        private updateObserver(ref: any) {\n            this._instance = ref\n            const dom: HTMLElement = ref instanceof React.Component\n                ? ReactDOM.findDOMNode(ref)\n                : ref\n            if (this.observing === dom) {\n                return\n            }\n            if (existing(this.observing)) {\n                this.observer.unobserve(this.observing)\n                this.observing = nothing\n            }\n            if (existing(dom)) {\n                this.observer.observe(dom)\n                this.observing = dom\n            }\n        }\n    }\n\n    hoistNonReactStatics(HOC, Component)\n\n    return HOC\n}\nexport type Measured<T extends ComponentClass<any>> =\n    React.ComponentClass<PropsOf<T> & MeasureProps>\n\ntype MeasureProps = SelfDecideHeight & SelfDecideWidth\n","import sharedInstance from 'jss'\nimport * as React from 'react';\nimport {measure, Measured} from '../../../react/measure/measure'\nimport {PropsOf} from '../../../react/PropsOf';\nimport {existing} from '../../../typecheck/existing'\nimport {Segment} from './types/Segment'\nimport {SegmentHeightUpdate} from './types/SegmentHeightUpdate'\n\nexport class MeasuredSegment extends React.PureComponent<Props> {\n    render() {\n        const {id, width} = this.props\n        const {Segment} = this\n        return <Segment id={id} width={width} onHeightChange={this.reportHeight}/>\n    }\n\n    private reportHeight = (height: px) => {\n        const id = this.props.id\n\n        if (existing(this.props.onHeightChange)) {\n            this.props.onHeightChange({id, height})\n        }\n    }\n\n    constructor(props: Props) {\n        super(props)\n        this.Segment = measure(props.Segment)\n    }\n\n    private Segment: Measured<Segment>\n}\n\ntype Props = PropsOf<Segment>\n    & { Segment: Segment }\n    & { onHeightChange: EventHandler<SegmentHeightUpdate> }\n\nconst classes = sharedInstance.createStyleSheet({\n    mask: {\n        display: 'block',\n        contain: 'content',\n        height: 'auto',\n        willChange: 'height'\n    }\n}).attach().classes\n","import sharedInstance from 'jss'\r\nimport * as React from 'react'\r\nimport {CSSProperties} from 'react'\r\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {interval} from 'rxjs/observable/interval'\r\nimport {\r\n    bufferCount,\r\n    bufferTime,\r\n    combineLatest,\r\n    distinctUntilChanged,\r\n    filter,\r\n    map,\r\n    merge,\r\n    pairwise,\r\n    sampleTime,\r\n    scan,\r\n    shareReplay,\r\n    startWith,\r\n    timestamp,\r\n    withLatestFrom\r\n} from 'rxjs/operators'\r\nimport {animationFrame} from 'rxjs/scheduler/animationFrame'\r\nimport {Subscription} from 'rxjs/Subscription'\r\nimport {Memoize} from 'typescript-memoize'\r\nimport {createStreams} from '../../rxjs/createStreams'\r\nimport {Pass} from '../../rxjs/Pipe';\r\nimport {Pipes} from '../../rxjs/Pipes'\r\nimport {existing} from '../../typecheck/existing'\r\nimport {isFalse} from '../../typecheck/isFalse';\r\nimport {isTrue} from '../../typecheck/isTrue';\r\nimport {assume} from '../../utils/assume'\r\nimport {ensure} from '../../utils/ensure'\r\nimport {nothing} from '../../utils/nothing'\r\nimport {publishEvents} from '../../utils/publishEvents'\r\nimport {Pulse} from '../../utils/Pulse'\r\nimport {calcAverage, nearestToAverage} from '../../utils/statics';\r\nimport {tweenFrom} from '../../view/tweenFrom'\r\nimport {calcFocusOffset} from './src/functions/calcFocusOffset'\r\nimport {calcSegments} from './src/functions/calcSegments'\r\nimport {projectScroll} from './src/functions/projectScroll'\r\nimport {updateLayout} from './src/functions/updateLayout'\r\nimport {LayoutImpl} from './src/LayoutImpl'\r\nimport {MeasuredSegment} from './src/MeasuredSegment';\r\nimport {Layout} from './src/types/Layout'\r\nimport {Segment} from './src/types/Segment'\r\nimport {SegmentHeightUpdate} from './src/types/SegmentHeightUpdate'\r\nimport {SegmentID} from './src/types/SegmentID'\r\nimport {SegmentPosition} from './src/types/SegmentPosition'\r\nimport deepEqual = require('deep-equal')\r\n\r\nexport class InfiniteList extends React.Component<Props, State> {\r\n    public render(): JSX.Element {\r\n        const {state, props, actionsChannel, children, temporalScroll} = this\r\n        const {Segment, width, height} = props\r\n        const {segments, layout, useAutoLayout} = state\r\n\r\n        const paddingTop = useAutoLayout\r\n            ? <div key={'infinite-scroll-padding-top'}\r\n                   style={{height: existing(segments[0]) ? segments[0].offset : 0}}/>\r\n            : nothing\r\n\r\n        const contentStyle = {\r\n            width,\r\n            height: layout.height,\r\n            transform: temporalScroll === 0\r\n                ? 'none'\r\n                : `translateY(${-temporalScroll}px)`\r\n        }\r\n        const segmentStyle = (offset: px): CSSProperties => {\r\n            return useAutoLayout\r\n                ? {position: 'relative'}\r\n                : {position: 'absolute', top: `${offset}px`}\r\n        }\r\n\r\n        return <div className={classes.container} style={{width, height}}\r\n                    ref={ref => existing(ref) ? children.container = ref : nothing}\r\n                    onScroll={actionsChannel.publish.scrolled}\r\n                    onTouchStartCapture={actionsChannel.publish.touchStarted}\r\n                    onTouchEndCapture={actionsChannel.publish.touchEnded}\r\n                    onTouchMoveCapture={actionsChannel.publish.touchMoved}>\r\n            <div className={classes.content} style={contentStyle}\r\n                 ref={ref => existing(ref) ? children.content = ref : nothing}>\r\n                {paddingTop}\r\n                {segments.map(spec =>\r\n                    <div key={spec.id} className={classes.segment}\r\n                         style={segmentStyle(spec.offset)}\r\n                         ref={ref => existing(ref)\r\n                             ? children.segments.set(spec.id, ref)\r\n                             : children.segments.delete(spec.id)}>\r\n                        <MeasuredSegment {...{id: spec.id, Segment, width}}\r\n                                         onHeightChange={actionsChannel.publish.heightUpdate}/>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n        this.children = {\r\n            container: document.createElement('div'),\r\n            content: document.createElement('div'),\r\n            segments: new Map<SegmentID, HTMLElement>()\r\n        }\r\n\r\n        const layout = new LayoutImpl(props.segmentIDs, Math.round(props.height / 6), {})\r\n        const focusOffset = calcFocusOffset(this.props.focusOffset, this.props.height)\r\n        const focus = assume(props.focus, focus => layout.getByID(focus))\r\n        const scroll = ensure<px>(assume(focus, focus => focus.offset - focusOffset), 0)\r\n        const segments = calcSegments(scroll, 0, props.height, layout)\r\n        this.state = {scroll, layout, segments, useAutoLayout: true}\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.children.container.scrollTop = this.state.scroll\r\n        this.work.add(this.updateState())\r\n        this.work.add(this.adjustScroll())\r\n        this.work.add(this.focusOnSegment())\r\n        this.work.add(this.callEventHandlers())\r\n        publishEvents<Props>(this.props, this.propsChannel.publish)\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Props, prevState: State) {\r\n        const {state, children} = this\r\n\r\n        if (prevProps !== this.props) {\r\n            publishEvents<Props>(this.props, this.propsChannel.publish)\r\n        }\r\n\r\n        if (prevState.layout !== state.layout) {\r\n            const {containerScroll, temporalScroll} = this\r\n            const visualScroll = containerScroll + temporalScroll\r\n\r\n            const focusOffset = calcFocusOffset(this.props.focusOffset, this.props.height)\r\n            const expectedScroll = projectScroll(\r\n                visualScroll, focusOffset,\r\n                prevState.layout, state.layout\r\n            )\r\n\r\n            if (Math.abs(this.velocity) <= 0.01) {\r\n                this.temporalScroll = 0\r\n                this.containerScroll = expectedScroll\r\n            } else {\r\n                this.temporalScroll = Math.ceil(expectedScroll - containerScroll)\r\n            }\r\n\r\n            if (!state.useAutoLayout && !prevState.useAutoLayout) {\r\n                Array.from(children.segments.entries())\r\n                    .forEach(([segmentID, element]) => {\r\n                        const prev = prevState.layout.getByID(segmentID)\r\n                        const curr = state.layout.getByID(segmentID)\r\n\r\n                        if (!existing(prev) || !existing(curr))\r\n                            return\r\n                        if (prev.offset - visualScroll === curr.offset - expectedScroll)\r\n                            return\r\n\r\n                        tweenFrom(\r\n                            element,\r\n                            curr => ({...curr, y: prev.offset - visualScroll}),\r\n                            200\r\n                        )\r\n                    })\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.work.unsubscribe()\r\n    }\r\n\r\n    private readonly work: Subscription = new Subscription()\r\n\r\n    private readonly children: Children\r\n\r\n    private readonly actionsChannel = createStreams<Actions>(actionsFilter)\r\n    private readonly propsChannel = createStreams<Props>(propsFilter)\r\n\r\n    @Memoize()\r\n    private get height$(): Observable<px> {\r\n        const {height} = this.propsChannel.streams\r\n\r\n        return height.pipe(\r\n            startWith(this.props.height),\r\n            distinctUntilChanged(),\r\n            // log$('height'),\r\n            shareReplay(1)\r\n        )\r\n    }\r\n\r\n    @Memoize()\r\n    private get layout(): Observable<Layout> {\r\n        const {segmentIDs} = this.propsChannel.streams\r\n        const {heightUpdate} = this.actionsChannel.streams\r\n\r\n        const updates: Observable<Array<SegmentHeightUpdate>> = heightUpdate.pipe(\r\n            bufferTime(0, animationFrame),\r\n            filter(buffer => buffer.length > 0)\r\n        )\r\n\r\n        return segmentIDs.pipe(\r\n            combineLatest(updates),\r\n            scan<[Array<SegmentID>, Array<SegmentHeightUpdate>], Layout>(\r\n                (layout, [ids, updates]) => updateLayout(layout, ids, updates),\r\n                this.state.layout\r\n            ),\r\n            startWith(this.state.layout),\r\n            distinctUntilChanged(),\r\n            // log$('layout'),\r\n            shareReplay(1)\r\n        )\r\n    }\r\n\r\n    private get temporalScroll(): px {\r\n        const {temporalScroll$} = this\r\n        return (temporalScroll$ as BehaviorSubject<px>).getValue()\r\n    }\r\n\r\n    private set temporalScroll(scroll: px) {\r\n        const {temporalScroll$} = this\r\n        const {content} = this.children;\r\n\r\n        (temporalScroll$ as BehaviorSubject<px>).next(scroll)\r\n        content.style.transform = scroll === 0\r\n            ? 'none'\r\n            : `translateY(${-scroll}px)`\r\n    }\r\n\r\n    private readonly temporalScroll$: Observable<px> = new BehaviorSubject(0)\r\n\r\n    private get containerScroll(): px {\r\n        const {container} = this.children\r\n        return container.scrollTop\r\n    }\r\n\r\n    private set containerScroll(scroll: px) {\r\n        const {container} = this.children\r\n        container.style['-webkit-overflow-scrolling'] = 'auto'\r\n        container.scrollTop = scroll\r\n        container.style['-webkit-overflow-scrolling'] = 'touch'\r\n    }\r\n\r\n    @Memoize()\r\n    private get containerScroll$(): Observable<px> {\r\n        const {scrolled, touchStarted, touchEnded} = this.actionsChannel.streams\r\n\r\n        const shouldSample: Observable<Pulse> = scrolled.pipe(\r\n            merge(touchStarted),\r\n            merge(touchEnded),\r\n            merge(interval(0, animationFrame)),\r\n            timestamp(),\r\n            distinctUntilChanged((prev, curr) => curr.timestamp - prev.timestamp < 100),\r\n            sampleTime(0, animationFrame),\r\n            startWith(Pulse)\r\n        )\r\n\r\n        return shouldSample.pipe(\r\n            map(() => this.containerScroll),\r\n            map(Math.round),\r\n            shareReplay(1)\r\n        )\r\n    }\r\n\r\n    @Memoize()\r\n    private get containerScrollVelocity$(): Observable<Velocity> {\r\n        const {containerScroll$} = this\r\n\r\n        const move = containerScroll$.pipe(\r\n            timestamp(),\r\n            // distinctUntilChanged((prev, curr) => curr.timestamp - prev.timestamp < 100),\r\n            pairwise()\r\n        )\r\n\r\n        return move.pipe(\r\n            map(([prev, curr]) =>\r\n                (curr.value - prev.value) / (curr.timestamp - prev.timestamp)\r\n            ),\r\n            startWith(0),\r\n            bufferCount(3, 1),\r\n            map(nearestToAverage),\r\n            filter(existing),\r\n            // log$('v'),\r\n            shareReplay(1)\r\n        )\r\n    }\r\n\r\n    @Memoize()\r\n    private get useAutoLayout$(): Observable<boolean> {\r\n        const {containerScrollVelocity$} = this\r\n\r\n        return containerScrollVelocity$.pipe(\r\n            map(Math.abs),\r\n            map(speed => speed > 3),\r\n            bufferCount(2, 1),\r\n            map(buffer => buffer.filter(isTrue).length > buffer.filter(isFalse).length),\r\n            distinctUntilChanged(),\r\n            // log$('useAutoLayout'),\r\n            shareReplay(1)\r\n        )\r\n\r\n    }\r\n\r\n    @Memoize()\r\n    private get scroll$(): Observable<Velocity> {\r\n        const {containerScroll$, temporalScroll$} = this\r\n\r\n        return containerScroll$.pipe(\r\n            withLatestFrom(temporalScroll$),\r\n            map(([container, temporal]) => container + temporal)\r\n        )\r\n    }\r\n\r\n    private get velocity(): Velocity {\r\n        return this['_velocity']\r\n    }\r\n\r\n    private updateState(): Subscription {\r\n        const {scroll$, layout, containerScrollVelocity$, height$, useAutoLayout$} = this\r\n\r\n        const preload$: Observable<px> = containerScrollVelocity$.pipe(\r\n            bufferCount(3, 1),\r\n            map(calcAverage),\r\n            filter(existing),\r\n            map(Math.round),\r\n            map(velocity => Math.max(Math.min(velocity * 500, 10000), -10000)),\r\n            distinctUntilChanged(),\r\n            // log$('preload'),\r\n            shareReplay(1)\r\n        )\r\n\r\n        const state: Observable<State> = scroll$.pipe(\r\n            combineLatest(preload$, useAutoLayout$, layout, height$),\r\n            map(([scroll, preload, useAutoLayoutByVelocity, layout, height]): State => {\r\n                const segments = calcSegments(scroll, preload, height, layout)\r\n                const useAutoLayout = useAutoLayoutByVelocity ||\r\n                    !segments.some(segment => segment.isHeightKnown)\r\n                return {layout, segments, useAutoLayout, scroll}\r\n            }),\r\n            distinctUntilChanged((prev, curr) =>\r\n                prev.useAutoLayout === curr.useAutoLayout &&\r\n                prev.layout === curr.layout &&\r\n                deepEqual(prev.segments, curr.segments)\r\n            ),\r\n            startWith(this.state),\r\n            // tap(state=> console.log(state.useAutoLayout)),\r\n            shareReplay(1)\r\n        )\r\n\r\n        return state.subscribe(state => this.setState(state))\r\n    }\r\n\r\n    private adjustScroll(): Subscription {\r\n        const {containerScrollVelocity$} = this\r\n\r\n        const shouldApplyTemporalScroll: Observable<Pulse> = containerScrollVelocity$.pipe(\r\n            bufferCount(2, 1),\r\n            filter(buffer => !buffer.some(v => Math.abs(v) > 0.01))\r\n        )\r\n\r\n        return shouldApplyTemporalScroll.subscribe(() => {\r\n            const {temporalScroll, containerScroll} = this\r\n            if (temporalScroll === 0)\r\n                return\r\n            // console.log('adjusted')\r\n            this.containerScroll = containerScroll + temporalScroll\r\n            this.temporalScroll = 0\r\n        })\r\n    }\r\n\r\n    private focusOnSegment(): Subscription {\r\n        const {propsChannel} = this\r\n\r\n        const newFocusSegment = propsChannel.streams.focus.pipe(\r\n            distinctUntilChanged(),\r\n            filter(existing),\r\n            map(focus => this.state.layout.getByID(focus)),\r\n            filter(existing)\r\n        )\r\n\r\n        return newFocusSegment.subscribe(segment => {\r\n            const focusOffset = calcFocusOffset(this.props.focusOffset, this.props.height)\r\n            const targetScroll = segment.offset - focusOffset\r\n            this.containerScroll = targetScroll\r\n            this.temporalScroll = 0\r\n        })\r\n    }\r\n\r\n    private callEventHandlers(): Subscription {\r\n        const {scroll$, layout} = this\r\n\r\n        const work = new Subscription()\r\n\r\n        work.add(scroll$.subscribe(scroll => {\r\n            if (existing(this.props.onScroll))\r\n                this.props.onScroll(scroll)\r\n        }))\r\n        work.add(layout.subscribe(layout => {\r\n            if (existing(this.props.onReflow))\r\n                this.props.onReflow(layout)\r\n        }))\r\n\r\n        return work\r\n    }\r\n}\r\n\r\ntype Props = {\r\n    segmentIDs: Array<SegmentID>\r\n    width: px\r\n    height: px\r\n    Segment: Segment\r\n    focus?: SegmentID\r\n    focusOffset?: px\r\n    onScroll?: EventHandler<px>\r\n    onReflow?: EventHandler<Layout>\r\n}\r\nconst propsFilter: Pipes<Required<Props>> = {\r\n    segmentIDs: distinctUntilChanged(),\r\n    width: distinctUntilChanged(),\r\n    height: distinctUntilChanged(),\r\n    Segment: distinctUntilChanged(),\r\n    focus: distinctUntilChanged(),\r\n    focusOffset: distinctUntilChanged(),\r\n    onScroll: distinctUntilChanged(),\r\n    onReflow: distinctUntilChanged()\r\n}\r\n\r\ntype State = {\r\n    scroll: px\r\n    layout: Layout\r\n    segments: Array<SegmentPosition>\r\n    useAutoLayout: boolean\r\n}\r\ntype Children = {\r\n    container: HTMLElement\r\n    content: HTMLElement\r\n    segments: Map<SegmentID, HTMLElement>\r\n}\r\n\r\ntype Actions = {\r\n    scrolled: React.SyntheticEvent<HTMLDivElement>\r\n    touchStarted: React.TouchEvent<HTMLDivElement>\r\n    touchMoved: React.TouchEvent<HTMLDivElement>\r\n    touchEnded: React.TouchEvent<HTMLDivElement>\r\n    heightUpdate: SegmentHeightUpdate\r\n}\r\nconst actionsFilter: Pipes<Actions> = {\r\n    scrolled: Pass,\r\n    touchStarted: Pass,\r\n    touchMoved: Pass,\r\n    touchEnded: Pass,\r\n    heightUpdate: Pass\r\n}\r\n\r\nexport const classes = sharedInstance.createStyleSheet({\r\n    container: {\r\n        position: 'relative',\r\n        display: 'block',\r\n        'overflow-x': 'hidden',\r\n        'overflow-y': 'scroll',\r\n        'overflow-anchor': 'none', // https://stackoverflow.com/questions/42205462/disable-chromes-scroll-preserving-feature\r\n        'scroll-behavior': 'auto',\r\n        '-webkit-overflow-scrolling': 'touch',\r\n        contain: 'strict',\r\n        'will-change': 'transform', // https://bugs.chromium.org/p/chromium/issues/detail?id=514303\r\n        '-webkit-font-smoothing': 'subpixel-antialiased'\r\n    },\r\n    content: {\r\n        position: 'relative',\r\n        display: 'block',\r\n        contain: 'strict',\r\n        'will-change': 'transform, height'\r\n    },\r\n    segment: {\r\n        display: 'block',\r\n        'will-change': 'top, height'\r\n    }\r\n}).attach().classes\r\n\r\n","// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random\n\nexport function getRandomIntInclusive(min: number, max: number): number {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min; //The maximum is inclusive and the minimum is inclusive\n}","import * as loremIpsum from 'lorem-ipsum'\r\nimport * as React from 'react';\r\nimport {PropsOf} from '../../../react/PropsOf';\r\nimport {ensure} from '../../../utils/ensure'\r\nimport {getRandomIntInclusive} from '../../../utils/getRandomIntInclusive'\r\nimport {Segment} from '../src/types/Segment';\r\n\r\nexport class SegmentExample extends React.Component<PropsOf<Segment>, State> {\r\n    componentDidMount() {\r\n        this.interval = setInterval(() => {\r\n            if (this.state.type !== 'text')\r\n                return\r\n            const text = loremIpsum({count: getRandomIntInclusive(3, 20)})\r\n            textCache[this.props.id] = text\r\n            this.setState({text})\r\n        }, getRandomIntInclusive(1000, 5000))\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.interval)\r\n    }\r\n\r\n    render() {\r\n        return <div style={{\r\n            display: 'block',\r\n            width: this.props.width,\r\n            backgroundColor: 'white',\r\n            wordWrap: 'break-word',\r\n            wordBreak: 'break-all'\r\n        }}>\r\n            <div>{this.props.id}</div>\r\n            <br/>\r\n            {\r\n                this.state.type === 'text'\r\n                    ? this.state.text\r\n                    : <img style={{width: this.props.width}} src={this.state.image}/>\r\n            }\r\n            <br/>\r\n        </div>\r\n    }\r\n\r\n    constructor(props: PropsOf<Segment>) {\r\n        super(props)\r\n        const type = ensure(typeCache[props.id], Math.random() > 0.2 ? 'text' : 'image')\r\n        typeCache[props.id] = type\r\n\r\n        let state: State\r\n\r\n        if (type === 'text') {\r\n            let text = textCache[props.id] || loremIpsum({count: getRandomIntInclusive(3, 20)})\r\n            textCache[props.id] = text\r\n            this.state = {type, text}\r\n        } else {\r\n            const image = imgCache[props.id]\r\n                || `https://picsum.photos/500/${getRandomIntInclusive(300, 800)}`\r\n            imgCache[props.id] = image\r\n            this.state = {type, image}\r\n        }\r\n    }\r\n\r\n    private interval: any\r\n}\r\n\r\nconst typeCache: { [id: string]: 'text' | 'image' } = {}\r\nconst textCache: { [id: string]: string } = {}\r\nconst imgCache: { [id: string]: string } = {}\r\n\r\ntype State = { type: 'text', text: string }\r\n    | { type: 'image', image: string }\r\n\r\n\r\n","import * as React from 'react'\nimport {InfiniteList} from '../InfiniteList'\nimport {SegmentID} from '../src/types/SegmentID'\nimport {SegmentExample} from './SegmentExample'\n\nconst segmentIDs: Array<SegmentID> = []\nfor (let i = 0; i < 100000; i++) {\n    segmentIDs.push(i.toString())\n}\n\nexport class Demo extends React.Component<{}, {\n    width: number,\n    height: number,\n    focusOffset: number\n}> {\n    render() {\n        const {width, height, focusOffset} = this.state\n\n        return <InfiniteList Segment={SegmentExample}\n                             {...{width, height, segmentIDs, focusOffset}}\n                             onScroll={this.onScroll}/>\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', () => {\n            const width = window.innerWidth\n            const height = window.innerHeight\n            this.setState({width, height})\n        })\n    }\n\n    onScroll = (scroll: px) => {\n        if (Math.abs(scroll) < 10) {\n            this.setState({focusOffset: 0})\n        } else {\n            this.setState({focusOffset: this.state.height / 3})\n        }\n    }\n\n    constructor(props: {}) {\n        super(props)\n        this.state = {\n            width: window.innerWidth,\n            height: window.innerHeight,\n            focusOffset: 0\n        }\n    }\n}\n","import * as React from 'react'\r\nimport * as ReactDOM from 'react-dom'\r\nimport ErrorBoundary from 'react-error-boundary'\r\nimport {Demo} from './Demo'\r\n\r\nconst root = document.getElementById('root')!\r\n\r\nReactDOM.render(\r\n    <ErrorBoundary FallbackComponent={({componentStack, error}) =>\r\n        <pre style={{width: window.innerWidth, wordBreak: 'break-all'}}>\r\n            {JSON.stringify(componentStack, null, 4)}\r\n            {JSON.stringify(error, null, 4)}\r\n        </pre>\r\n    }>\r\n        <Demo/>\r\n    </ErrorBoundary>,\r\n    root\r\n)\r\n\r\n"]}